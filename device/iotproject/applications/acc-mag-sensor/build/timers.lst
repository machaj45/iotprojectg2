ARM GAS  /tmp/ccFqnV9T.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetNextExpireTime:
  25              	.LFB16:
  26              		.file 1 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccFqnV9T.s 			page 2


  33:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
ARM GAS  /tmp/ccFqnV9T.s 			page 3


  90:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
ARM GAS  /tmp/ccFqnV9T.s 			page 4


 147:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccFqnV9T.s 			page 5


 204:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 206:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
ARM GAS  /tmp/ccFqnV9T.s 			page 6


 261:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 263:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
ARM GAS  /tmp/ccFqnV9T.s 			page 7


 318:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
ARM GAS  /tmp/ccFqnV9T.s 			page 8


 375:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccFqnV9T.s 			page 9


 432:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/ccFqnV9T.s 			page 10


 489:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 491:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
ARM GAS  /tmp/ccFqnV9T.s 			page 11


 546:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 599 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccFqnV9T.s 			page 12


  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 600:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 609 0
  34 0000 064B     		ldr	r3, .L4
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 B3FA83F3 		clz	r3, r3
  38 000a 5B09     		lsrs	r3, r3, #5
  39 000c 0360     		str	r3, [r0]
 610:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  40              		.loc 1 610 0
  41 000e 13B9     		cbnz	r3, .L3
 611:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  42              		.loc 1 612 0
  43 0010 D368     		ldr	r3, [r2, #12]
  44 0012 1868     		ldr	r0, [r3]
  45              	.LVL1:
  46 0014 7047     		bx	lr
  47              	.LVL2:
  48              	.L3:
 613:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  49              		.loc 1 617 0
  50 0016 0020     		movs	r0, #0
  51              	.LVL3:
 618:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  52              		.loc 1 621 0
  53 0018 7047     		bx	lr
  54              	.L5:
  55 001a 00BF     		.align	2
  56              	.L4:
  57 001c 00000000 		.word	.LANCHOR0
  58              		.cfi_endproc
  59              	.LFE16:
  61              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  62              		.align	1
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
ARM GAS  /tmp/ccFqnV9T.s 			page 13


  66              		.fpu fpv4-sp-d16
  68              	prvInsertTimerInActiveList:
  69              	.LFB18:
 622:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70              		.loc 1 648 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL4:
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  80              	.LVL5:
 649:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  81              		.loc 1 651 0
  82 0002 4160     		str	r1, [r0, #4]
 652:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  83              		.loc 1 652 0
  84 0004 0061     		str	r0, [r0, #16]
 653:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  85              		.loc 1 654 0
  86 0006 9142     		cmp	r1, r2
  87 0008 0CD8     		bhi	.L7
 655:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
ARM GAS  /tmp/ccFqnV9T.s 			page 14


 658:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  88              		.loc 1 658 0
  89 000a D21A     		subs	r2, r2, r3
  90              	.LVL6:
  91 000c 8369     		ldr	r3, [r0, #24]
  92              	.LVL7:
  93 000e 9A42     		cmp	r2, r3
  94 0010 01D3     		bcc	.L13
 659:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  95              		.loc 1 662 0
  96 0012 0120     		movs	r0, #1
  97              	.LVL8:
  98 0014 08BD     		pop	{r3, pc}
  99              	.LVL9:
 100              	.L13:
 663:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 101              		.loc 1 666 0
 102 0016 011D     		adds	r1, r0, #4
 103              	.LVL10:
 104 0018 094B     		ldr	r3, .L14
 105 001a 1868     		ldr	r0, [r3]
 106              	.LVL11:
 107 001c FFF7FEFF 		bl	vListInsert
 108              	.LVL12:
 649:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109              		.loc 1 649 0
 110 0020 0020     		movs	r0, #0
 111 0022 08BD     		pop	{r3, pc}
 112              	.LVL13:
 113              	.L7:
 667:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 114              		.loc 1 671 0
 115 0024 9A42     		cmp	r2, r3
 116 0026 01D2     		bcs	.L9
 117              		.loc 1 671 0 is_stmt 0 discriminator 1
 118 0028 9942     		cmp	r1, r3
 119 002a 06D2     		bcs	.L11
 120              	.L9:
 672:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
ARM GAS  /tmp/ccFqnV9T.s 			page 15


 121              		.loc 1 680 0 is_stmt 1
 122 002c 011D     		adds	r1, r0, #4
 123              	.LVL14:
 124 002e 054B     		ldr	r3, .L14+4
 125              	.LVL15:
 126 0030 1868     		ldr	r0, [r3]
 127              	.LVL16:
 128 0032 FFF7FEFF 		bl	vListInsert
 129              	.LVL17:
 649:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 130              		.loc 1 649 0
 131 0036 0020     		movs	r0, #0
 132 0038 08BD     		pop	{r3, pc}
 133              	.LVL18:
 134              	.L11:
 676:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 135              		.loc 1 676 0
 136 003a 0120     		movs	r0, #1
 137              	.LVL19:
 681:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 138              		.loc 1 685 0
 139 003c 08BD     		pop	{r3, pc}
 140              	.LVL20:
 141              	.L15:
 142 003e 00BF     		.align	2
 143              	.L14:
 144 0040 00000000 		.word	.LANCHOR1
 145 0044 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE18:
 149              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	prvCheckForValidListAndQueue:
 157              	.LFB21:
 686:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
ARM GAS  /tmp/ccFqnV9T.s 			page 16


 701:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
ARM GAS  /tmp/ccFqnV9T.s 			page 17


 758:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
ARM GAS  /tmp/ccFqnV9T.s 			page 18


 815:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
ARM GAS  /tmp/ccFqnV9T.s 			page 19


 872:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 158              		.loc 1 895 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 38B5     		push	{r3, r4, r5, lr}
 163              	.LCFI1:
 164              		.cfi_def_cfa_offset 16
 165              		.cfi_offset 3, -16
 166              		.cfi_offset 4, -12
 167              		.cfi_offset 5, -8
 168              		.cfi_offset 14, -4
 896:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 169              		.loc 1 899 0
 170 0002 FFF7FEFF 		bl	vPortEnterCritical
 171              	.LVL21:
 900:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 172              		.loc 1 901 0
 173 0006 0F4B     		ldr	r3, .L20
 174 0008 1B68     		ldr	r3, [r3]
 175 000a 13B1     		cbz	r3, .L19
 176              	.L17:
 902:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 905:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
ARM GAS  /tmp/ccFqnV9T.s 			page 20


 910:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 177              		.loc 1 941 0
 178 000c FFF7FEFF 		bl	vPortExitCritical
 179              	.LVL22:
 180 0010 38BD     		pop	{r3, r4, r5, pc}
 181              	.L19:
 903:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 182              		.loc 1 903 0
 183 0012 0D4D     		ldr	r5, .L20+4
 184 0014 2846     		mov	r0, r5
 185 0016 FFF7FEFF 		bl	vListInitialise
 186              	.LVL23:
 904:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 187              		.loc 1 904 0
 188 001a 0C4C     		ldr	r4, .L20+8
 189 001c 2046     		mov	r0, r4
 190 001e FFF7FEFF 		bl	vListInitialise
 191              	.LVL24:
 905:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 192              		.loc 1 905 0
 193 0022 0B4B     		ldr	r3, .L20+12
 194 0024 1D60     		str	r5, [r3]
 906:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195              		.loc 1 906 0
 196 0026 0B4B     		ldr	r3, .L20+16
 197 0028 1C60     		str	r4, [r3]
ARM GAS  /tmp/ccFqnV9T.s 			page 21


 919:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 198              		.loc 1 919 0
 199 002a 0022     		movs	r2, #0
 200 002c 0C21     		movs	r1, #12
 201 002e 0A20     		movs	r0, #10
 202 0030 FFF7FEFF 		bl	xQueueGenericCreate
 203              	.LVL25:
 204 0034 034B     		ldr	r3, .L20
 205 0036 1860     		str	r0, [r3]
 925:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 206              		.loc 1 925 0
 207 0038 0028     		cmp	r0, #0
 208 003a E7D0     		beq	.L17
 927:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 209              		.loc 1 927 0
 210 003c 0649     		ldr	r1, .L20+20
 211 003e FFF7FEFF 		bl	vQueueAddToRegistry
 212              	.LVL26:
 213 0042 E3E7     		b	.L17
 214              	.L21:
 215              		.align	2
 216              	.L20:
 217 0044 00000000 		.word	.LANCHOR2
 218 0048 00000000 		.word	.LANCHOR3
 219 004c 00000000 		.word	.LANCHOR4
 220 0050 00000000 		.word	.LANCHOR0
 221 0054 00000000 		.word	.LANCHOR1
 222 0058 00000000 		.word	.LC0
 223              		.cfi_endproc
 224              	.LFE21:
 226              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	prvInitialiseNewTimer:
 234              	.LFB7:
 358:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 235              		.loc 1 358 0
 236              		.cfi_startproc
 237              		@ args = 8, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL27:
 240 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 4, -24
 244              		.cfi_offset 5, -20
 245              		.cfi_offset 6, -16
 246              		.cfi_offset 7, -12
 247              		.cfi_offset 8, -8
 248              		.cfi_offset 14, -4
 249 0004 079C     		ldr	r4, [sp, #28]
 360:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250              		.loc 1 360 0
 251 0006 41B9     		cbnz	r1, .L23
ARM GAS  /tmp/ccFqnV9T.s 			page 22


 252              	.LBB30:
 253              	.LBB31:
 254              		.file 2 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccFqnV9T.s 			page 23


  55:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
ARM GAS  /tmp/ccFqnV9T.s 			page 24


 112:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccFqnV9T.s 			page 25


 169:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 255              		.loc 2 195 0
 256              		.syntax unified
 257              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 258 0008 4FF01003 			mov r3, #16												
 259 000c 83F31188 		msr basepri, r3											
 260 0010 BFF36F8F 		isb														
 261 0014 BFF34F8F 		dsb														
 262              	
 263              	@ 0 "" 2
 264              	.LVL28:
 265              		.thumb
 266              		.syntax unified
 267              	.L24:
 268 0018 FEE7     		b	.L24
 269              	.LVL29:
 270              	.L23:
 271 001a 0F46     		mov	r7, r1
 272              	.LBE31:
 273              	.LBE30:
 362:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 274              		.loc 1 362 0
 275 001c 74B1     		cbz	r4, .L22
 276 001e 1D46     		mov	r5, r3
 277 0020 1646     		mov	r6, r2
 278 0022 8046     		mov	r8, r0
 366:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 279              		.loc 1 366 0
 280 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 281              	.LVL30:
 370:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
ARM GAS  /tmp/ccFqnV9T.s 			page 26


 282              		.loc 1 370 0
 283 0028 C4F80080 		str	r8, [r4]
 371:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 284              		.loc 1 371 0
 285 002c A761     		str	r7, [r4, #24]
 372:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 286              		.loc 1 372 0
 287 002e E661     		str	r6, [r4, #28]
 373:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 288              		.loc 1 373 0
 289 0030 2562     		str	r5, [r4, #32]
 374:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 290              		.loc 1 374 0
 291 0032 069B     		ldr	r3, [sp, #24]
 292 0034 6362     		str	r3, [r4, #36]
 375:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 293              		.loc 1 375 0
 294 0036 201D     		adds	r0, r4, #4
 295 0038 FFF7FEFF 		bl	vListInitialiseItem
 296              	.LVL31:
 297              	.L22:
 298 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 299              		.cfi_endproc
 300              	.LFE7:
 302              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 303              		.align	1
 304              		.global	xTimerCreateTimerTask
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	xTimerCreateTimerTask:
 311              	.LFB5:
 224:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 312              		.loc 1 224 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 00B5     		push	{lr}
 317              	.LCFI3:
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 14, -4
 320 0002 83B0     		sub	sp, sp, #12
 321              	.LCFI4:
 322              		.cfi_def_cfa_offset 16
 323              	.LVL32:
 231:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 324              		.loc 1 231 0
 325 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 326              	.LVL33:
 233:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 327              		.loc 1 233 0
 328 0008 0E4B     		ldr	r3, .L33
 329 000a 1B68     		ldr	r3, [r3]
 330 000c A3B1     		cbz	r3, .L31
 257:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 331              		.loc 1 257 0
ARM GAS  /tmp/ccFqnV9T.s 			page 27


 332 000e 0E4B     		ldr	r3, .L33+4
 333 0010 0193     		str	r3, [sp, #4]
 334 0012 0323     		movs	r3, #3
 335 0014 0093     		str	r3, [sp]
 336 0016 0023     		movs	r3, #0
 337 0018 4FF48072 		mov	r2, #256
 338 001c 0B49     		ldr	r1, .L33+8
 339 001e 0C48     		ldr	r0, .L33+12
 340 0020 FFF7FEFF 		bl	xTaskCreate
 341              	.LVL34:
 342              	.L28:
 271:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 343              		.loc 1 271 0
 344 0024 50B9     		cbnz	r0, .L27
 345              	.LBB32:
 346              	.LBB33:
 347              		.loc 2 195 0
 348              		.syntax unified
 349              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 350 0026 4FF01003 			mov r3, #16												
 351 002a 83F31188 		msr basepri, r3											
 352 002e BFF36F8F 		isb														
 353 0032 BFF34F8F 		dsb														
 354              	
 355              	@ 0 "" 2
 356              	.LVL35:
 357              		.thumb
 358              		.syntax unified
 359              	.L30:
 360 0036 FEE7     		b	.L30
 361              	.LVL36:
 362              	.L31:
 363              	.LBE33:
 364              	.LBE32:
 225:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365              		.loc 1 225 0
 366 0038 0020     		movs	r0, #0
 367 003a F3E7     		b	.L28
 368              	.LVL37:
 369              	.L27:
 273:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 370              		.loc 1 273 0
 371 003c 03B0     		add	sp, sp, #12
 372              	.LCFI5:
 373              		.cfi_def_cfa_offset 4
 374              		@ sp needed
 375 003e 5DF804FB 		ldr	pc, [sp], #4
 376              	.L34:
 377 0042 00BF     		.align	2
 378              	.L33:
 379 0044 00000000 		.word	.LANCHOR2
 380 0048 00000000 		.word	.LANCHOR5
 381 004c 00000000 		.word	.LC1
 382 0050 00000000 		.word	prvTimerTask
 383              		.cfi_endproc
 384              	.LFE5:
 386              		.section	.text.xTimerCreate,"ax",%progbits
ARM GAS  /tmp/ccFqnV9T.s 			page 28


 387              		.align	1
 388              		.global	xTimerCreate
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	xTimerCreate:
 395              	.LFB6:
 283:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 396              		.loc 1 283 0
 397              		.cfi_startproc
 398              		@ args = 4, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              	.LVL38:
 401 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 402              	.LCFI6:
 403              		.cfi_def_cfa_offset 24
 404              		.cfi_offset 4, -24
 405              		.cfi_offset 5, -20
 406              		.cfi_offset 6, -16
 407              		.cfi_offset 7, -12
 408              		.cfi_offset 8, -8
 409              		.cfi_offset 14, -4
 410 0004 82B0     		sub	sp, sp, #8
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 32
 413 0006 0546     		mov	r5, r0
 414 0008 0E46     		mov	r6, r1
 415 000a 1746     		mov	r7, r2
 416 000c 9846     		mov	r8, r3
 286:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 417              		.loc 1 286 0
 418 000e 2820     		movs	r0, #40
 419              	.LVL39:
 420 0010 FFF7FEFF 		bl	pvPortMalloc
 421              	.LVL40:
 288:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 422              		.loc 1 288 0
 423 0014 0446     		mov	r4, r0
 424 0016 40B1     		cbz	r0, .L36
 290:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 425              		.loc 1 290 0
 426 0018 0190     		str	r0, [sp, #4]
 427 001a 089B     		ldr	r3, [sp, #32]
 428 001c 0093     		str	r3, [sp]
 429 001e 4346     		mov	r3, r8
 430 0020 3A46     		mov	r2, r7
 431 0022 3146     		mov	r1, r6
 432 0024 2846     		mov	r0, r5
 433              	.LVL41:
 434 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 435              	.LVL42:
 436              	.L36:
 303:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437              		.loc 1 303 0
 438 002a 2046     		mov	r0, r4
 439 002c 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccFqnV9T.s 			page 29


 440              	.LCFI8:
 441              		.cfi_def_cfa_offset 24
 442              		@ sp needed
 443 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 444              		.cfi_endproc
 445              	.LFE6:
 447              		.section	.text.xTimerGenericCommand,"ax",%progbits
 448              		.align	1
 449              		.global	xTimerGenericCommand
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	xTimerGenericCommand:
 456              	.LFB8:
 382:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 457              		.loc 1 382 0
 458              		.cfi_startproc
 459              		@ args = 4, pretend = 0, frame = 16
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              	.LVL43:
 386:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462              		.loc 1 386 0
 463 0000 C0B1     		cbz	r0, .L47
 382:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 464              		.loc 1 382 0
 465 0002 30B5     		push	{r4, r5, lr}
 466              	.LCFI9:
 467              		.cfi_def_cfa_offset 12
 468              		.cfi_offset 4, -12
 469              		.cfi_offset 5, -8
 470              		.cfi_offset 14, -4
 471 0004 85B0     		sub	sp, sp, #20
 472              	.LCFI10:
 473              		.cfi_def_cfa_offset 32
 474 0006 1546     		mov	r5, r2
 475 0008 0446     		mov	r4, r0
 390:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476              		.loc 1 390 0
 477 000a 174A     		ldr	r2, .L49
 478              	.LVL44:
 479 000c 1068     		ldr	r0, [r2]
 480              	.LVL45:
 481 000e 40B3     		cbz	r0, .L44
 482 0010 1A46     		mov	r2, r3
 393:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 483              		.loc 1 393 0
 484 0012 0191     		str	r1, [sp, #4]
 394:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 485              		.loc 1 394 0
 486 0014 0295     		str	r5, [sp, #8]
 395:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487              		.loc 1 395 0
 488 0016 0394     		str	r4, [sp, #12]
 397:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 489              		.loc 1 397 0
 490 0018 0529     		cmp	r1, #5
ARM GAS  /tmp/ccFqnV9T.s 			page 30


 491 001a 1CDC     		bgt	.L42
 399:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 492              		.loc 1 399 0
 493 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 494              	.LVL46:
 495 0020 0228     		cmp	r0, #2
 496 0022 10D0     		beq	.L48
 405:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 497              		.loc 1 405 0
 498 0024 0023     		movs	r3, #0
 499 0026 1A46     		mov	r2, r3
 500 0028 01A9     		add	r1, sp, #4
 501 002a 0F48     		ldr	r0, .L49
 502 002c 0068     		ldr	r0, [r0]
 503 002e FFF7FEFF 		bl	xQueueGenericSend
 504              	.LVL47:
 505 0032 14E0     		b	.L38
 506              	.LVL48:
 507              	.L47:
 508              	.LCFI11:
 509              		.cfi_def_cfa_offset 0
 510              		.cfi_restore 4
 511              		.cfi_restore 5
 512              		.cfi_restore 14
 513              	.LBB34:
 514              	.LBB35:
 515              		.loc 2 195 0
 516              		.syntax unified
 517              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 518 0034 4FF01003 			mov r3, #16												
 519 0038 83F31188 		msr basepri, r3											
 520 003c BFF36F8F 		isb														
 521 0040 BFF34F8F 		dsb														
 522              	
 523              	@ 0 "" 2
 524              	.LVL49:
 525              		.thumb
 526              		.syntax unified
 527              	.L40:
 528 0044 FEE7     		b	.L40
 529              	.LVL50:
 530              	.L48:
 531              	.LCFI12:
 532              		.cfi_def_cfa_offset 32
 533              		.cfi_offset 4, -12
 534              		.cfi_offset 5, -8
 535              		.cfi_offset 14, -4
 536              	.LBE35:
 537              	.LBE34:
 401:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 538              		.loc 1 401 0
 539 0046 0023     		movs	r3, #0
 540 0048 089A     		ldr	r2, [sp, #32]
 541 004a 01A9     		add	r1, sp, #4
 542 004c 0648     		ldr	r0, .L49
 543 004e 0068     		ldr	r0, [r0]
 544 0050 FFF7FEFF 		bl	xQueueGenericSend
ARM GAS  /tmp/ccFqnV9T.s 			page 31


 545              	.LVL51:
 546 0054 03E0     		b	.L38
 547              	.LVL52:
 548              	.L42:
 410:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 549              		.loc 1 410 0
 550 0056 0023     		movs	r3, #0
 551 0058 01A9     		add	r1, sp, #4
 552              	.LVL53:
 553 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 554              	.LVL54:
 555              	.L38:
 421:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 556              		.loc 1 421 0
 557 005e 05B0     		add	sp, sp, #20
 558              	.LCFI13:
 559              		.cfi_remember_state
 560              		.cfi_def_cfa_offset 12
 561              		@ sp needed
 562 0060 30BD     		pop	{r4, r5, pc}
 563              	.LVL55:
 564              	.L44:
 565              	.LCFI14:
 566              		.cfi_restore_state
 383:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 567              		.loc 1 383 0
 568 0062 0020     		movs	r0, #0
 420:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 569              		.loc 1 420 0
 570 0064 FBE7     		b	.L38
 571              	.L50:
 572 0066 00BF     		.align	2
 573              	.L49:
 574 0068 00000000 		.word	.LANCHOR2
 575              		.cfi_endproc
 576              	.LFE8:
 578              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 579              		.align	1
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv4-sp-d16
 585              	prvSwitchTimerLists:
 586              	.LFB20:
 836:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 587              		.loc 1 836 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 70B5     		push	{r4, r5, r6, lr}
 592              	.LCFI15:
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 4, -16
 595              		.cfi_offset 5, -12
 596              		.cfi_offset 6, -8
 597              		.cfi_offset 14, -4
 598 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccFqnV9T.s 			page 32


 599              	.LCFI16:
 600              		.cfi_def_cfa_offset 24
 601              	.L53:
 846:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 602              		.loc 1 846 0
 603 0004 1A4B     		ldr	r3, .L60
 604 0006 1B68     		ldr	r3, [r3]
 605 0008 1A68     		ldr	r2, [r3]
 606 000a 52B3     		cbz	r2, .L59
 848:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 607              		.loc 1 848 0
 608 000c DB68     		ldr	r3, [r3, #12]
 609 000e 1E68     		ldr	r6, [r3]
 610              	.LVL56:
 851:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 611              		.loc 1 851 0
 612 0010 DC68     		ldr	r4, [r3, #12]
 613              	.LVL57:
 852:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 614              		.loc 1 852 0
 615 0012 251D     		adds	r5, r4, #4
 616 0014 2846     		mov	r0, r5
 617 0016 FFF7FEFF 		bl	uxListRemove
 618              	.LVL58:
 858:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 619              		.loc 1 858 0
 620 001a 636A     		ldr	r3, [r4, #36]
 621 001c 2046     		mov	r0, r4
 622 001e 9847     		blx	r3
 623              	.LVL59:
 860:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 624              		.loc 1 860 0
 625 0020 E369     		ldr	r3, [r4, #28]
 626 0022 012B     		cmp	r3, #1
 627 0024 EED1     		bne	.L53
 868:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 628              		.loc 1 868 0
 629 0026 A369     		ldr	r3, [r4, #24]
 630 0028 3344     		add	r3, r3, r6
 631              	.LVL60:
 869:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 632              		.loc 1 869 0
 633 002a 9E42     		cmp	r6, r3
 634 002c 07D2     		bcs	.L54
 871:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 635              		.loc 1 871 0
 636 002e 6360     		str	r3, [r4, #4]
 872:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 637              		.loc 1 872 0
 638 0030 2461     		str	r4, [r4, #16]
 873:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 639              		.loc 1 873 0
 640 0032 2946     		mov	r1, r5
 641 0034 0E4B     		ldr	r3, .L60
 642              	.LVL61:
 643 0036 1868     		ldr	r0, [r3]
 644 0038 FFF7FEFF 		bl	vListInsert
ARM GAS  /tmp/ccFqnV9T.s 			page 33


 645              	.LVL62:
 646 003c E2E7     		b	.L53
 647              	.LVL63:
 648              	.L54:
 877:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 649              		.loc 1 877 0
 650 003e 0021     		movs	r1, #0
 651 0040 0091     		str	r1, [sp]
 652 0042 0B46     		mov	r3, r1
 653              	.LVL64:
 654 0044 3246     		mov	r2, r6
 655 0046 2046     		mov	r0, r4
 656 0048 FFF7FEFF 		bl	xTimerGenericCommand
 657              	.LVL65:
 878:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 658              		.loc 1 878 0
 659 004c 0028     		cmp	r0, #0
 660 004e D9D1     		bne	.L53
 661              	.LBB36:
 662              	.LBB37:
 663              		.loc 2 195 0
 664              		.syntax unified
 665              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 666 0050 4FF01003 			mov r3, #16												
 667 0054 83F31188 		msr basepri, r3											
 668 0058 BFF36F8F 		isb														
 669 005c BFF34F8F 		dsb														
 670              	
 671              	@ 0 "" 2
 672              	.LVL66:
 673              		.thumb
 674              		.syntax unified
 675              	.L56:
 676 0060 FEE7     		b	.L56
 677              	.LVL67:
 678              	.L59:
 679              	.LBE37:
 680              	.LBE36:
 889:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 681              		.loc 1 889 0
 682 0062 044A     		ldr	r2, .L60+4
 683 0064 1068     		ldr	r0, [r2]
 684 0066 0249     		ldr	r1, .L60
 685 0068 0860     		str	r0, [r1]
 890:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 686              		.loc 1 890 0
 687 006a 1360     		str	r3, [r2]
 891:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 688              		.loc 1 891 0
 689 006c 02B0     		add	sp, sp, #8
 690              	.LCFI17:
 691              		.cfi_def_cfa_offset 16
 692              		@ sp needed
 693 006e 70BD     		pop	{r4, r5, r6, pc}
 694              	.L61:
 695              		.align	2
 696              	.L60:
ARM GAS  /tmp/ccFqnV9T.s 			page 34


 697 0070 00000000 		.word	.LANCHOR0
 698 0074 00000000 		.word	.LANCHOR1
 699              		.cfi_endproc
 700              	.LFE20:
 702              		.section	.text.prvSampleTimeNow,"ax",%progbits
 703              		.align	1
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	prvSampleTimeNow:
 710              	.LFB17:
 625:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 711              		.loc 1 625 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL68:
 716 0000 38B5     		push	{r3, r4, r5, lr}
 717              	.LCFI18:
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 3, -16
 720              		.cfi_offset 4, -12
 721              		.cfi_offset 5, -8
 722              		.cfi_offset 14, -4
 723 0002 0546     		mov	r5, r0
 629:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 724              		.loc 1 629 0
 725 0004 FFF7FEFF 		bl	xTaskGetTickCount
 726              	.LVL69:
 727 0008 0446     		mov	r4, r0
 728              	.LVL70:
 631:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 729              		.loc 1 631 0
 730 000a 074B     		ldr	r3, .L67
 731 000c 1B68     		ldr	r3, [r3]
 732 000e 9842     		cmp	r0, r3
 733 0010 05D3     		bcc	.L66
 638:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 734              		.loc 1 638 0
 735 0012 0023     		movs	r3, #0
 736 0014 2B60     		str	r3, [r5]
 737              	.LVL71:
 738              	.L64:
 641:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739              		.loc 1 641 0
 740 0016 044B     		ldr	r3, .L67
 741 0018 1C60     		str	r4, [r3]
 644:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 742              		.loc 1 644 0
 743 001a 2046     		mov	r0, r4
 744 001c 38BD     		pop	{r3, r4, r5, pc}
 745              	.LVL72:
 746              	.L66:
 633:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 747              		.loc 1 633 0
 748 001e FFF7FEFF 		bl	prvSwitchTimerLists
ARM GAS  /tmp/ccFqnV9T.s 			page 35


 749              	.LVL73:
 634:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 750              		.loc 1 634 0
 751 0022 0123     		movs	r3, #1
 752 0024 2B60     		str	r3, [r5]
 753 0026 F6E7     		b	.L64
 754              	.L68:
 755              		.align	2
 756              	.L67:
 757 0028 00000000 		.word	.LANCHOR6
 758              		.cfi_endproc
 759              	.LFE17:
 761              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 762              		.align	1
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv4-sp-d16
 768              	prvProcessExpiredTimer:
 769              	.LFB13:
 463:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 770              		.loc 1 463 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL74:
 775 0000 70B5     		push	{r4, r5, r6, lr}
 776              	.LCFI19:
 777              		.cfi_def_cfa_offset 16
 778              		.cfi_offset 4, -16
 779              		.cfi_offset 5, -12
 780              		.cfi_offset 6, -8
 781              		.cfi_offset 14, -4
 782 0002 82B0     		sub	sp, sp, #8
 783              	.LCFI20:
 784              		.cfi_def_cfa_offset 24
 785 0004 0546     		mov	r5, r0
 786 0006 0E46     		mov	r6, r1
 465:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 787              		.loc 1 465 0
 788 0008 144B     		ldr	r3, .L74
 789 000a 1B68     		ldr	r3, [r3]
 790 000c DB68     		ldr	r3, [r3, #12]
 791 000e DC68     		ldr	r4, [r3, #12]
 792              	.LVL75:
 469:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 793              		.loc 1 469 0
 794 0010 201D     		adds	r0, r4, #4
 795              	.LVL76:
 796 0012 FFF7FEFF 		bl	uxListRemove
 797              	.LVL77:
 474:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 798              		.loc 1 474 0
 799 0016 E369     		ldr	r3, [r4, #28]
 800 0018 012B     		cmp	r3, #1
 801 001a 04D0     		beq	.L73
 802              	.L70:
ARM GAS  /tmp/ccFqnV9T.s 			page 36


 498:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 803              		.loc 1 498 0
 804 001c 636A     		ldr	r3, [r4, #36]
 805 001e 2046     		mov	r0, r4
 806 0020 9847     		blx	r3
 807              	.LVL78:
 499:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 808              		.loc 1 499 0
 809 0022 02B0     		add	sp, sp, #8
 810              	.LCFI21:
 811              		.cfi_remember_state
 812              		.cfi_def_cfa_offset 16
 813              		@ sp needed
 814 0024 70BD     		pop	{r4, r5, r6, pc}
 815              	.LVL79:
 816              	.L73:
 817              	.LCFI22:
 818              		.cfi_restore_state
 479:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 819              		.loc 1 479 0
 820 0026 A169     		ldr	r1, [r4, #24]
 821 0028 2B46     		mov	r3, r5
 822 002a 3246     		mov	r2, r6
 823 002c 2944     		add	r1, r1, r5
 824 002e 2046     		mov	r0, r4
 825 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 826              	.LVL80:
 827 0034 0028     		cmp	r0, #0
 828 0036 F1D0     		beq	.L70
 483:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 829              		.loc 1 483 0
 830 0038 0021     		movs	r1, #0
 831 003a 0091     		str	r1, [sp]
 832 003c 0B46     		mov	r3, r1
 833 003e 2A46     		mov	r2, r5
 834 0040 2046     		mov	r0, r4
 835 0042 FFF7FEFF 		bl	xTimerGenericCommand
 836              	.LVL81:
 484:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 837              		.loc 1 484 0
 838 0046 0028     		cmp	r0, #0
 839 0048 E8D1     		bne	.L70
 840              	.LBB38:
 841              	.LBB39:
 842              		.loc 2 195 0
 843              		.syntax unified
 844              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 845 004a 4FF01003 			mov r3, #16												
 846 004e 83F31188 		msr basepri, r3											
 847 0052 BFF36F8F 		isb														
 848 0056 BFF34F8F 		dsb														
 849              	
 850              	@ 0 "" 2
 851              	.LVL82:
 852              		.thumb
 853              		.syntax unified
 854              	.L71:
ARM GAS  /tmp/ccFqnV9T.s 			page 37


 855 005a FEE7     		b	.L71
 856              	.L75:
 857              		.align	2
 858              	.L74:
 859 005c 00000000 		.word	.LANCHOR0
 860              	.LBE39:
 861              	.LBE38:
 862              		.cfi_endproc
 863              	.LFE13:
 865              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 866              		.align	1
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 870              		.fpu fpv4-sp-d16
 872              	prvProcessTimerOrBlockTask:
 873              	.LFB15:
 539:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 874              		.loc 1 539 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL83:
 879 0000 70B5     		push	{r4, r5, r6, lr}
 880              	.LCFI23:
 881              		.cfi_def_cfa_offset 16
 882              		.cfi_offset 4, -16
 883              		.cfi_offset 5, -12
 884              		.cfi_offset 6, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              	.LCFI24:
 888              		.cfi_def_cfa_offset 24
 889 0004 0646     		mov	r6, r0
 890 0006 0C46     		mov	r4, r1
 543:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 891              		.loc 1 543 0
 892 0008 FFF7FEFF 		bl	vTaskSuspendAll
 893              	.LVL84:
 550:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 894              		.loc 1 550 0
 895 000c 01A8     		add	r0, sp, #4
 896 000e FFF7FEFF 		bl	prvSampleTimeNow
 897              	.LVL85:
 551:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 898              		.loc 1 551 0
 899 0012 019B     		ldr	r3, [sp, #4]
 900 0014 23BB     		cbnz	r3, .L77
 901 0016 0546     		mov	r5, r0
 554:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 902              		.loc 1 554 0
 903 0018 0CB9     		cbnz	r4, .L78
 554:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 904              		.loc 1 554 0 is_stmt 0 discriminator 1
 905 001a B042     		cmp	r0, r6
 906 001c 19D2     		bcs	.L82
 907              	.L78:
ARM GAS  /tmp/ccFqnV9T.s 			page 38


 567:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 908              		.loc 1 567 0 is_stmt 1
 909 001e 2CB1     		cbz	r4, .L80
 571:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 910              		.loc 1 571 0
 911 0020 114B     		ldr	r3, .L83
 912 0022 1B68     		ldr	r3, [r3]
 913 0024 1C68     		ldr	r4, [r3]
 914              	.LVL86:
 915 0026 B4FA84F4 		clz	r4, r4
 916 002a 6409     		lsrs	r4, r4, #5
 917              	.LVL87:
 918              	.L80:
 574:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 919              		.loc 1 574 0
 920 002c 2246     		mov	r2, r4
 921 002e 711B     		subs	r1, r6, r5
 922 0030 0E4B     		ldr	r3, .L83+4
 923 0032 1868     		ldr	r0, [r3]
 924              	.LVL88:
 925 0034 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 926              	.LVL89:
 576:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927              		.loc 1 576 0
 928 0038 FFF7FEFF 		bl	xTaskResumeAll
 929              	.LVL90:
 930 003c 38B9     		cbnz	r0, .L76
 582:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 931              		.loc 1 582 0
 932 003e 4FF08052 		mov	r2, #268435456
 933 0042 0B4B     		ldr	r3, .L83+8
 934 0044 1A60     		str	r2, [r3]
 935              		.syntax unified
 936              	@ 582 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 937 0046 BFF34F8F 		dsb
 938              	@ 0 "" 2
 939              	@ 582 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 940 004a BFF36F8F 		isb
 941              	@ 0 "" 2
 942              	.LVL91:
 943              		.thumb
 944              		.syntax unified
 945              	.L76:
 595:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 946              		.loc 1 595 0
 947 004e 02B0     		add	sp, sp, #8
 948              	.LCFI25:
 949              		.cfi_remember_state
 950              		.cfi_def_cfa_offset 16
 951              		@ sp needed
 952 0050 70BD     		pop	{r4, r5, r6, pc}
 953              	.LVL92:
 954              	.L82:
 955              	.LCFI26:
 956              		.cfi_restore_state
 556:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 957              		.loc 1 556 0
ARM GAS  /tmp/ccFqnV9T.s 			page 39


 958 0052 FFF7FEFF 		bl	xTaskResumeAll
 959              	.LVL93:
 557:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 960              		.loc 1 557 0
 961 0056 2946     		mov	r1, r5
 962 0058 3046     		mov	r0, r6
 963 005a FFF7FEFF 		bl	prvProcessExpiredTimer
 964              	.LVL94:
 965 005e F6E7     		b	.L76
 966              	.LVL95:
 967              	.L77:
 592:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 968              		.loc 1 592 0
 969 0060 FFF7FEFF 		bl	xTaskResumeAll
 970              	.LVL96:
 595:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 971              		.loc 1 595 0
 972 0064 F3E7     		b	.L76
 973              	.L84:
 974 0066 00BF     		.align	2
 975              	.L83:
 976 0068 00000000 		.word	.LANCHOR1
 977 006c 00000000 		.word	.LANCHOR2
 978 0070 04ED00E0 		.word	-536810236
 979              		.cfi_endproc
 980              	.LFE15:
 982              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 983              		.align	1
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv4-sp-d16
 989              	prvProcessReceivedCommands:
 990              	.LFB19:
 689:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 991              		.loc 1 689 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995 0000 30B5     		push	{r4, r5, lr}
 996              	.LCFI27:
 997              		.cfi_def_cfa_offset 12
 998              		.cfi_offset 4, -12
 999              		.cfi_offset 5, -8
 1000              		.cfi_offset 14, -4
 1001 0002 87B0     		sub	sp, sp, #28
 1002              	.LCFI28:
 1003              		.cfi_def_cfa_offset 40
 1004              	.L87:
 695:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1005              		.loc 1 695 0
 1006 0004 0022     		movs	r2, #0
 1007 0006 03A9     		add	r1, sp, #12
 1008 0008 344B     		ldr	r3, .L102
 1009 000a 1868     		ldr	r0, [r3]
 1010 000c FFF7FEFF 		bl	xQueueReceive
 1011              	.LVL97:
ARM GAS  /tmp/ccFqnV9T.s 			page 40


 1012 0010 0028     		cmp	r0, #0
 1013 0012 60D0     		beq	.L100
 721:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1014              		.loc 1 721 0
 1015 0014 039B     		ldr	r3, [sp, #12]
 1016 0016 002B     		cmp	r3, #0
 1017 0018 F4DB     		blt	.L87
 725:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1018              		.loc 1 725 0
 1019 001a 059C     		ldr	r4, [sp, #20]
 1020              	.LVL98:
 727:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1021              		.loc 1 727 0
 1022 001c 6369     		ldr	r3, [r4, #20]
 1023 001e 13B1     		cbz	r3, .L88
 730:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1024              		.loc 1 730 0
 1025 0020 201D     		adds	r0, r4, #4
 1026 0022 FFF7FEFF 		bl	uxListRemove
 1027              	.LVL99:
 1028              	.L88:
 745:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1029              		.loc 1 745 0
 1030 0026 02A8     		add	r0, sp, #8
 1031 0028 FFF7FEFF 		bl	prvSampleTimeNow
 1032              	.LVL100:
 747:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1033              		.loc 1 747 0
 1034 002c 039B     		ldr	r3, [sp, #12]
 1035 002e 092B     		cmp	r3, #9
 1036 0030 E8D8     		bhi	.L87
 1037 0032 01A2     		adr	r2, .L91
 1038 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1039              		.p2align 2
 1040              	.L91:
 1041 0038 61000000 		.word	.L90+1
 1042 003c 61000000 		.word	.L90+1
 1043 0040 61000000 		.word	.L90+1
 1044 0044 05000000 		.word	.L87+1
 1045 0048 A9000000 		.word	.L92+1
 1046 004c CF000000 		.word	.L93+1
 1047 0050 61000000 		.word	.L90+1
 1048 0054 61000000 		.word	.L90+1
 1049 0058 05000000 		.word	.L87+1
 1050 005c A9000000 		.word	.L92+1
 1051              		.p2align 1
 1052              	.L90:
 755:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1053              		.loc 1 755 0
 1054 0060 0499     		ldr	r1, [sp, #16]
 1055 0062 A569     		ldr	r5, [r4, #24]
 1056 0064 0B46     		mov	r3, r1
 1057 0066 0246     		mov	r2, r0
 1058 0068 2944     		add	r1, r1, r5
 1059 006a 2046     		mov	r0, r4
 1060              	.LVL101:
 1061 006c FFF7FEFF 		bl	prvInsertTimerInActiveList
ARM GAS  /tmp/ccFqnV9T.s 			page 41


 1062              	.LVL102:
 1063 0070 0028     		cmp	r0, #0
 1064 0072 C7D0     		beq	.L87
 759:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1065              		.loc 1 759 0
 1066 0074 636A     		ldr	r3, [r4, #36]
 1067 0076 2046     		mov	r0, r4
 1068 0078 9847     		blx	r3
 1069              	.LVL103:
 762:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1070              		.loc 1 762 0
 1071 007a E369     		ldr	r3, [r4, #28]
 1072 007c 012B     		cmp	r3, #1
 1073 007e C1D1     		bne	.L87
 764:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1074              		.loc 1 764 0
 1075 0080 A269     		ldr	r2, [r4, #24]
 1076 0082 0021     		movs	r1, #0
 1077 0084 0091     		str	r1, [sp]
 1078 0086 0B46     		mov	r3, r1
 1079 0088 0498     		ldr	r0, [sp, #16]
 1080 008a 0244     		add	r2, r2, r0
 1081 008c 2046     		mov	r0, r4
 1082 008e FFF7FEFF 		bl	xTimerGenericCommand
 1083              	.LVL104:
 765:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1084              		.loc 1 765 0
 1085 0092 0028     		cmp	r0, #0
 1086 0094 B6D1     		bne	.L87
 1087              	.LBB40:
 1088              	.LBB41:
 1089              		.loc 2 195 0
 1090              		.syntax unified
 1091              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1092 0096 4FF01003 			mov r3, #16												
 1093 009a 83F31188 		msr basepri, r3											
 1094 009e BFF36F8F 		isb														
 1095 00a2 BFF34F8F 		dsb														
 1096              	
 1097              	@ 0 "" 2
 1098              	.LVL105:
 1099              		.thumb
 1100              		.syntax unified
 1101              	.L95:
 1102 00a6 FEE7     		b	.L95
 1103              	.LVL106:
 1104              	.L92:
 1105              	.LBE41:
 1106              	.LBE40:
 787:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1107              		.loc 1 787 0
 1108 00a8 0499     		ldr	r1, [sp, #16]
 1109 00aa A161     		str	r1, [r4, #24]
 788:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1110              		.loc 1 788 0
 1111 00ac 31B1     		cbz	r1, .L101
 796:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
ARM GAS  /tmp/ccFqnV9T.s 			page 42


 1112              		.loc 1 796 0
 1113 00ae 0346     		mov	r3, r0
 1114 00b0 0246     		mov	r2, r0
 1115 00b2 0144     		add	r1, r1, r0
 1116 00b4 2046     		mov	r0, r4
 1117              	.LVL107:
 1118 00b6 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1119              	.LVL108:
 797:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1120              		.loc 1 797 0
 1121 00ba A3E7     		b	.L87
 1122              	.LVL109:
 1123              	.L101:
 1124              	.LBB42:
 1125              	.LBB43:
 1126              		.loc 2 195 0
 1127              		.syntax unified
 1128              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1129 00bc 4FF01003 			mov r3, #16												
 1130 00c0 83F31188 		msr basepri, r3											
 1131 00c4 BFF36F8F 		isb														
 1132 00c8 BFF34F8F 		dsb														
 1133              	
 1134              	@ 0 "" 2
 1135              	.LVL110:
 1136              		.thumb
 1137              		.syntax unified
 1138              	.L97:
 1139 00cc FEE7     		b	.L97
 1140              	.L93:
 1141              	.LBE43:
 1142              	.LBE42:
 807:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 1143              		.loc 1 807 0
 1144 00ce 2046     		mov	r0, r4
 1145              	.LVL111:
 1146 00d0 FFF7FEFF 		bl	vPortFree
 1147              	.LVL112:
 824:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1148              		.loc 1 824 0
 1149 00d4 96E7     		b	.L87
 1150              	.LVL113:
 1151              	.L100:
 832:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1152              		.loc 1 832 0
 1153 00d6 07B0     		add	sp, sp, #28
 1154              	.LCFI29:
 1155              		.cfi_def_cfa_offset 12
 1156              		@ sp needed
 1157 00d8 30BD     		pop	{r4, r5, pc}
 1158              	.L103:
 1159 00da 00BF     		.align	2
 1160              	.L102:
 1161 00dc 00000000 		.word	.LANCHOR2
 1162              		.cfi_endproc
 1163              	.LFE19:
 1165              		.section	.text.prvTimerTask,"ax",%progbits
ARM GAS  /tmp/ccFqnV9T.s 			page 43


 1166              		.align	1
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv4-sp-d16
 1172              	prvTimerTask:
 1173              	.LFB14:
 503:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1174              		.loc 1 503 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 8
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              	.LVL114:
 1179 0000 00B5     		push	{lr}
 1180              	.LCFI30:
 1181              		.cfi_def_cfa_offset 4
 1182              		.cfi_offset 14, -4
 1183 0002 83B0     		sub	sp, sp, #12
 1184              	.LCFI31:
 1185              		.cfi_def_cfa_offset 16
 1186              	.LVL115:
 1187              	.L105:
 526:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1188              		.loc 1 526 0 discriminator 1
 1189 0004 01A8     		add	r0, sp, #4
 1190 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1191              	.LVL116:
 530:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1192              		.loc 1 530 0 discriminator 1
 1193 000a 0199     		ldr	r1, [sp, #4]
 1194 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1195              	.LVL117:
 533:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1196              		.loc 1 533 0 discriminator 1
 1197 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1198              	.LVL118:
 1199 0014 F6E7     		b	.L105
 1200              		.cfi_endproc
 1201              	.LFE14:
 1203              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1204              		.align	1
 1205              		.global	xTimerGetTimerDaemonTaskHandle
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	xTimerGetTimerDaemonTaskHandle:
 1212              	.LFB9:
 425:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1213              		.loc 1 425 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 428:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1218              		.loc 1 428 0
 1219 0000 064B     		ldr	r3, .L111
ARM GAS  /tmp/ccFqnV9T.s 			page 44


 1220 0002 1868     		ldr	r0, [r3]
 1221 0004 00B1     		cbz	r0, .L110
 430:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1222              		.loc 1 430 0
 1223 0006 7047     		bx	lr
 1224              	.L110:
 1225              	.LBB44:
 1226              	.LBB45:
 1227              		.loc 2 195 0
 1228              		.syntax unified
 1229              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1230 0008 4FF01003 			mov r3, #16												
 1231 000c 83F31188 		msr basepri, r3											
 1232 0010 BFF36F8F 		isb														
 1233 0014 BFF34F8F 		dsb														
 1234              	
 1235              	@ 0 "" 2
 1236              	.LVL119:
 1237              		.thumb
 1238              		.syntax unified
 1239              	.L109:
 1240 0018 FEE7     		b	.L109
 1241              	.L112:
 1242 001a 00BF     		.align	2
 1243              	.L111:
 1244 001c 00000000 		.word	.LANCHOR5
 1245              	.LBE45:
 1246              	.LBE44:
 1247              		.cfi_endproc
 1248              	.LFE9:
 1250              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1251              		.align	1
 1252              		.global	xTimerGetPeriod
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1256              		.fpu fpv4-sp-d16
 1258              	xTimerGetPeriod:
 1259              	.LFB10:
 434:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1260              		.loc 1 434 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              		@ link register save eliminated.
 1265              	.LVL120:
 437:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1266              		.loc 1 437 0
 1267 0000 08B1     		cbz	r0, .L116
 439:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1268              		.loc 1 439 0
 1269 0002 8069     		ldr	r0, [r0, #24]
 1270              	.LVL121:
 1271 0004 7047     		bx	lr
 1272              	.LVL122:
 1273              	.L116:
 1274              	.LBB46:
ARM GAS  /tmp/ccFqnV9T.s 			page 45


 1275              	.LBB47:
 1276              		.loc 2 195 0
 1277              		.syntax unified
 1278              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1279 0006 4FF01003 			mov r3, #16												
 1280 000a 83F31188 		msr basepri, r3											
 1281 000e BFF36F8F 		isb														
 1282 0012 BFF34F8F 		dsb														
 1283              	
 1284              	@ 0 "" 2
 1285              	.LVL123:
 1286              		.thumb
 1287              		.syntax unified
 1288              	.L115:
 1289 0016 FEE7     		b	.L115
 1290              	.LBE47:
 1291              	.LBE46:
 1292              		.cfi_endproc
 1293              	.LFE10:
 1295              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1296              		.align	1
 1297              		.global	xTimerGetExpiryTime
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv4-sp-d16
 1303              	xTimerGetExpiryTime:
 1304              	.LFB11:
 443:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1305              		.loc 1 443 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL124:
 447:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1311              		.loc 1 447 0
 1312 0000 08B1     		cbz	r0, .L120
 1313              	.LVL125:
 450:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1314              		.loc 1 450 0
 1315 0002 4068     		ldr	r0, [r0, #4]
 1316              	.LVL126:
 1317 0004 7047     		bx	lr
 1318              	.LVL127:
 1319              	.L120:
 1320              	.LBB48:
 1321              	.LBB49:
 1322              		.loc 2 195 0
 1323              		.syntax unified
 1324              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1325 0006 4FF01003 			mov r3, #16												
 1326 000a 83F31188 		msr basepri, r3											
 1327 000e BFF36F8F 		isb														
 1328 0012 BFF34F8F 		dsb														
 1329              	
 1330              	@ 0 "" 2
ARM GAS  /tmp/ccFqnV9T.s 			page 46


 1331              	.LVL128:
 1332              		.thumb
 1333              		.syntax unified
 1334              	.L119:
 1335 0016 FEE7     		b	.L119
 1336              	.LBE49:
 1337              	.LBE48:
 1338              		.cfi_endproc
 1339              	.LFE11:
 1341              		.section	.text.pcTimerGetName,"ax",%progbits
 1342              		.align	1
 1343              		.global	pcTimerGetName
 1344              		.syntax unified
 1345              		.thumb
 1346              		.thumb_func
 1347              		.fpu fpv4-sp-d16
 1349              	pcTimerGetName:
 1350              	.LFB12:
 454:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1351              		.loc 1 454 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              		@ link register save eliminated.
 1356              	.LVL129:
 457:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1357              		.loc 1 457 0
 1358 0000 08B1     		cbz	r0, .L124
 459:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1359              		.loc 1 459 0
 1360 0002 0068     		ldr	r0, [r0]
 1361              	.LVL130:
 1362 0004 7047     		bx	lr
 1363              	.LVL131:
 1364              	.L124:
 1365              	.LBB50:
 1366              	.LBB51:
 1367              		.loc 2 195 0
 1368              		.syntax unified
 1369              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1370 0006 4FF01003 			mov r3, #16												
 1371 000a 83F31188 		msr basepri, r3											
 1372 000e BFF36F8F 		isb														
 1373 0012 BFF34F8F 		dsb														
 1374              	
 1375              	@ 0 "" 2
 1376              	.LVL132:
 1377              		.thumb
 1378              		.syntax unified
 1379              	.L123:
 1380 0016 FEE7     		b	.L123
 1381              	.LBE51:
 1382              	.LBE50:
 1383              		.cfi_endproc
 1384              	.LFE12:
 1386              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1387              		.align	1
ARM GAS  /tmp/ccFqnV9T.s 			page 47


 1388              		.global	xTimerIsTimerActive
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv4-sp-d16
 1394              	xTimerIsTimerActive:
 1395              	.LFB22:
 942:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 943:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1396              		.loc 1 946 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              	.LVL133:
 947:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1401              		.loc 1 950 0
 1402 0000 40B9     		cbnz	r0, .L126
 1403              	.LBB52:
 1404              	.LBB53:
 1405              		.loc 2 195 0
 1406              		.syntax unified
 1407              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1408 0002 4FF01003 			mov r3, #16												
 1409 0006 83F31188 		msr basepri, r3											
 1410 000a BFF36F8F 		isb														
 1411 000e BFF34F8F 		dsb														
 1412              	
 1413              	@ 0 "" 2
 1414              	.LVL134:
 1415              		.thumb
 1416              		.syntax unified
 1417              	.L127:
 1418 0012 FEE7     		b	.L127
 1419              	.L126:
 1420              	.LBE53:
 1421              	.LBE52:
 946:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1422              		.loc 1 946 0
 1423 0014 10B5     		push	{r4, lr}
 1424              	.LCFI32:
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 4, -8
 1427              		.cfi_offset 14, -4
 1428 0016 0446     		mov	r4, r0
 951:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1429              		.loc 1 953 0
 1430 0018 FFF7FEFF 		bl	vPortEnterCritical
 1431              	.LVL135:
 954:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /tmp/ccFqnV9T.s 			page 48


 955:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1432              		.loc 1 958 0
 1433 001c 6469     		ldr	r4, [r4, #20]
 1434              	.LVL136:
 1435 001e 0034     		adds	r4, r4, #0
 1436 0020 18BF     		it	ne
 1437 0022 0124     		movne	r4, #1
 1438              	.LVL137:
 959:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1439              		.loc 1 960 0
 1440 0024 FFF7FEFF 		bl	vPortExitCritical
 1441              	.LVL138:
 961:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1442              		.loc 1 963 0
 1443 0028 2046     		mov	r0, r4
 1444 002a 10BD     		pop	{r4, pc}
 1445              		.cfi_endproc
 1446              	.LFE22:
 1448              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1449              		.align	1
 1450              		.global	pvTimerGetTimerID
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1454              		.fpu fpv4-sp-d16
 1456              	pvTimerGetTimerID:
 1457              	.LFB23:
 964:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1458              		.loc 1 967 0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 0
 1461              		@ frame_needed = 0, uses_anonymous_args = 0
 1462              	.LVL139:
 968:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1463              		.loc 1 971 0
 1464 0000 40B9     		cbnz	r0, .L131
 1465              	.LBB54:
 1466              	.LBB55:
 1467              		.loc 2 195 0
 1468              		.syntax unified
 1469              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1470 0002 4FF01003 			mov r3, #16												
 1471 0006 83F31188 		msr basepri, r3											
 1472 000a BFF36F8F 		isb														
 1473 000e BFF34F8F 		dsb														
ARM GAS  /tmp/ccFqnV9T.s 			page 49


 1474              	
 1475              	@ 0 "" 2
 1476              	.LVL140:
 1477              		.thumb
 1478              		.syntax unified
 1479              	.L132:
 1480 0012 FEE7     		b	.L132
 1481              	.L131:
 1482              	.LBE55:
 1483              	.LBE54:
 967:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1484              		.loc 1 967 0
 1485 0014 10B5     		push	{r4, lr}
 1486              	.LCFI33:
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0016 0446     		mov	r4, r0
 972:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1491              		.loc 1 973 0
 1492 0018 FFF7FEFF 		bl	vPortEnterCritical
 1493              	.LVL141:
 974:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1494              		.loc 1 975 0
 1495 001c 246A     		ldr	r4, [r4, #32]
 1496              	.LVL142:
 976:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1497              		.loc 1 977 0
 1498 001e FFF7FEFF 		bl	vPortExitCritical
 1499              	.LVL143:
 978:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1500              		.loc 1 980 0
 1501 0022 2046     		mov	r0, r4
 1502 0024 10BD     		pop	{r4, pc}
 1503              		.cfi_endproc
 1504              	.LFE23:
 1506              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1507              		.align	1
 1508              		.global	vTimerSetTimerID
 1509              		.syntax unified
 1510              		.thumb
 1511              		.thumb_func
 1512              		.fpu fpv4-sp-d16
 1514              	vTimerSetTimerID:
 1515              	.LFB24:
 981:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1516              		.loc 1 984 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccFqnV9T.s 			page 50


 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              	.LVL144:
 1521 0000 38B5     		push	{r3, r4, r5, lr}
 1522              	.LCFI34:
 1523              		.cfi_def_cfa_offset 16
 1524              		.cfi_offset 3, -16
 1525              		.cfi_offset 4, -12
 1526              		.cfi_offset 5, -8
 1527              		.cfi_offset 14, -4
 1528              	.LVL145:
 985:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1529              		.loc 1 987 0
 1530 0002 40B9     		cbnz	r0, .L136
 1531              	.LBB56:
 1532              	.LBB57:
 1533              		.loc 2 195 0
 1534              		.syntax unified
 1535              	@ 195 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1536 0004 4FF01003 			mov r3, #16												
 1537 0008 83F31188 		msr basepri, r3											
 1538 000c BFF36F8F 		isb														
 1539 0010 BFF34F8F 		dsb														
 1540              	
 1541              	@ 0 "" 2
 1542              	.LVL146:
 1543              		.thumb
 1544              		.syntax unified
 1545              	.L137:
 1546 0014 FEE7     		b	.L137
 1547              	.L136:
 1548 0016 0446     		mov	r4, r0
 1549 0018 0D46     		mov	r5, r1
 1550              	.LBE57:
 1551              	.LBE56:
 988:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1552              		.loc 1 989 0
 1553 001a FFF7FEFF 		bl	vPortEnterCritical
 1554              	.LVL147:
 990:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1555              		.loc 1 991 0
 1556 001e 2562     		str	r5, [r4, #32]
 992:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1557              		.loc 1 993 0
 1558 0020 FFF7FEFF 		bl	vPortExitCritical
 1559              	.LVL148:
 1560 0024 38BD     		pop	{r3, r4, r5, pc}
 1561              		.cfi_endproc
 1562              	.LFE24:
 1564              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1565              		.align	2
 1566              		.set	.LANCHOR0,. + 0
 1569              	pxCurrentTimerList:
ARM GAS  /tmp/ccFqnV9T.s 			page 51


 1570 0000 00000000 		.space	4
 1571              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1572              		.align	2
 1573              		.set	.LANCHOR1,. + 0
 1576              	pxOverflowTimerList:
 1577 0000 00000000 		.space	4
 1578              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1579              		.align	2
 1580              		.set	.LANCHOR3,. + 0
 1583              	xActiveTimerList1:
 1584 0000 00000000 		.space	20
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1584      00000000 
 1585              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR4,. + 0
 1590              	xActiveTimerList2:
 1591 0000 00000000 		.space	20
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1591      00000000 
 1592              		.section	.bss.xLastTime.6521,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR6,. + 0
 1597              	xLastTime.6521:
 1598 0000 00000000 		.space	4
 1599              		.section	.bss.xTimerQueue,"aw",%nobits
 1600              		.align	2
 1601              		.set	.LANCHOR2,. + 0
 1604              	xTimerQueue:
 1605 0000 00000000 		.space	4
 1606              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1607              		.align	2
 1608              		.set	.LANCHOR5,. + 0
 1611              	xTimerTaskHandle:
 1612 0000 00000000 		.space	4
 1613              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1614              		.align	2
 1615              	.LC0:
 1616 0000 546D7251 		.ascii	"TmrQ\000"
 1616      00
 1617              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1618              		.align	2
 1619              	.LC1:
 1620 0000 546D7220 		.ascii	"Tmr Svc\000"
 1620      53766300 
 1621              		.text
 1622              	.Letext0:
 1623              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1624              		.file 4 "/usr/include/newlib/sys/lock.h"
 1625              		.file 5 "/usr/include/newlib/sys/_types.h"
 1626              		.file 6 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1627              		.file 7 "/usr/include/newlib/sys/reent.h"
 1628              		.file 8 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/ccFqnV9T.s 			page 52


 1629              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 1630              		.file 10 "../../core/platform/octa/inc/FreeRTOSConfig.h"
 1631              		.file 11 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1632              		.file 12 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1633              		.file 13 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1634              		.file 14 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1635              		.file 15 "../../core/ST/Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccFqnV9T.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccFqnV9T.s:18     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccFqnV9T.s:24     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccFqnV9T.s:57     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccFqnV9T.s:62     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccFqnV9T.s:68     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccFqnV9T.s:144    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccFqnV9T.s:150    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccFqnV9T.s:156    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccFqnV9T.s:217    .text.prvCheckForValidListAndQueue:0000000000000044 $d
     /tmp/ccFqnV9T.s:227    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccFqnV9T.s:233    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccFqnV9T.s:303    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccFqnV9T.s:310    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccFqnV9T.s:379    .text.xTimerCreateTimerTask:0000000000000044 $d
     /tmp/ccFqnV9T.s:1172   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccFqnV9T.s:387    .text.xTimerCreate:0000000000000000 $t
     /tmp/ccFqnV9T.s:394    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/ccFqnV9T.s:448    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/ccFqnV9T.s:455    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/ccFqnV9T.s:574    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/ccFqnV9T.s:579    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccFqnV9T.s:585    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccFqnV9T.s:697    .text.prvSwitchTimerLists:0000000000000070 $d
     /tmp/ccFqnV9T.s:703    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccFqnV9T.s:709    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccFqnV9T.s:757    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccFqnV9T.s:762    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccFqnV9T.s:768    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccFqnV9T.s:859    .text.prvProcessExpiredTimer:000000000000005c $d
     /tmp/ccFqnV9T.s:866    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccFqnV9T.s:872    .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccFqnV9T.s:976    .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/ccFqnV9T.s:983    .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccFqnV9T.s:989    .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccFqnV9T.s:1041   .text.prvProcessReceivedCommands:0000000000000038 $d
     /tmp/ccFqnV9T.s:1051   .text.prvProcessReceivedCommands:0000000000000060 $t
     /tmp/ccFqnV9T.s:1161   .text.prvProcessReceivedCommands:00000000000000dc $d
     /tmp/ccFqnV9T.s:1166   .text.prvTimerTask:0000000000000000 $t
     /tmp/ccFqnV9T.s:1204   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccFqnV9T.s:1211   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccFqnV9T.s:1244   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/ccFqnV9T.s:1251   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccFqnV9T.s:1258   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccFqnV9T.s:1296   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccFqnV9T.s:1303   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccFqnV9T.s:1342   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccFqnV9T.s:1349   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccFqnV9T.s:1387   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccFqnV9T.s:1394   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccFqnV9T.s:1449   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccFqnV9T.s:1456   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/ccFqnV9T.s:1507   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccFqnV9T.s:1514   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/ccFqnV9T.s:1565   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccFqnV9T.s:1569   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
ARM GAS  /tmp/ccFqnV9T.s 			page 54


     /tmp/ccFqnV9T.s:1572   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccFqnV9T.s:1576   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccFqnV9T.s:1579   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccFqnV9T.s:1583   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccFqnV9T.s:1586   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccFqnV9T.s:1590   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccFqnV9T.s:1593   .bss.xLastTime.6521:0000000000000000 $d
     /tmp/ccFqnV9T.s:1597   .bss.xLastTime.6521:0000000000000000 xLastTime.6521
     /tmp/ccFqnV9T.s:1600   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccFqnV9T.s:1604   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccFqnV9T.s:1607   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccFqnV9T.s:1611   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccFqnV9T.s:1614   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccFqnV9T.s:1618   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreate
vQueueAddToRegistry
vListInitialiseItem
xTaskCreate
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
