ARM GAS  /tmp/ccWz3gvT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB166:
  26              		.file 1 "../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/ccWz3gvT.s 			page 2


  33:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
ARM GAS  /tmp/ccWz3gvT.s 			page 3


  90:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccWz3gvT.s 			page 4


 147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      without specific prior written permission.
 157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccWz3gvT.s 			page 5


 204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 6


 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 7


 318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 8


 375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/ccWz3gvT.s 			page 9


 432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  /tmp/ccWz3gvT.s 			page 10


 489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
ARM GAS  /tmp/ccWz3gvT.s 			page 11


 546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccWz3gvT.s 			page 12


 603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 13


 660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlock */
 689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccWz3gvT.s 			page 14


 717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
ARM GAS  /tmp/ccWz3gvT.s 			page 15


 774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  /tmp/ccWz3gvT.s 			page 16


 831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccWz3gvT.s 			page 17


 888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccWz3gvT.s 			page 18


 945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
ARM GAS  /tmp/ccWz3gvT.s 			page 19


1002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
1003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
1014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
1019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 20


1059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccWz3gvT.s 			page 21


1116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
1169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 22


1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData ;
1204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
ARM GAS  /tmp/ccWz3gvT.s 			page 23


1230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
ARM GAS  /tmp/ccWz3gvT.s 			page 24


1287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
1332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
ARM GAS  /tmp/ccWz3gvT.s 			page 25


1344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccWz3gvT.s 			page 26


1401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
ARM GAS  /tmp/ccWz3gvT.s 			page 27


1458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
1479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
1496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 28


1515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 29


1572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback() /
1595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   the stream and the corresponding call back is executed. */
1599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccWz3gvT.s 			page 30


1629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
ARM GAS  /tmp/ccWz3gvT.s 			page 31


1686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 32


1743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 33


1800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccWz3gvT.s 			page 34


1857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccWz3gvT.s 			page 35


1914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
1926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
1936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
1942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
1943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
1944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
1946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
1960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccWz3gvT.s 			page 36


1971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
ARM GAS  /tmp/ccWz3gvT.s 			page 37


2028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
ARM GAS  /tmp/ccWz3gvT.s 			page 38


2085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  /tmp/ccWz3gvT.s 			page 39


2142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
2188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != RESET)
2196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
2197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccWz3gvT.s 			page 40


2199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
2211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != RESET))))
2212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
2215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
2216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET) ||
2246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)))
2247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
2250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
2251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
ARM GAS  /tmp/ccWz3gvT.s 			page 41


2256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != RESET)
2268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
2269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
2280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
2281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccWz3gvT.s 			page 42


2313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
2351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != RESET)
ARM GAS  /tmp/ccWz3gvT.s 			page 43


2370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != RESET)
2371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != RESET)))
2372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != RESET)
2374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
2375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != RESET) && ((cr1its & USART_CR1_TXFEIE) != RESET))
2394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != RESET) && ((cr1its & USART_CR1_RXFFIE) != RESET))
2407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
ARM GAS  /tmp/ccWz3gvT.s 			page 44


2427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
2452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART error callback.
2482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccWz3gvT.s 			page 45


2484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccWz3gvT.s 			page 46


2541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_Wakeup_AddressConfig() API configures the wake-up from stop mode parameters
2561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
2570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Disable UART mute mode (does not mean the UART actually exits mute mode
2591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
2592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccWz3gvT.s 			page 47


2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccWz3gvT.s 			page 48


2655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
2689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *
2705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
ARM GAS  /tmp/ccWz3gvT.s 			page 49


2712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
2728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
2729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @brief  Return the UART handle error code.
2735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @retval UART Error Code
2738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
2742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
ARM GAS  /tmp/ccWz3gvT.s 			page 50


2769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
ARM GAS  /tmp/ccWz3gvT.s 			page 51


2826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
ARM GAS  /tmp/ccWz3gvT.s 			page 52


2883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3 * huart->Init.BaudRate)) ||
2903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
2904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
2910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
2914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
2923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
2928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
2930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
2937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  /tmp/ccWz3gvT.s 			page 53


2940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
2941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
2942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
2953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
2965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
2972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
2979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, h
2986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate, huart->Init.Clock
2993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccWz3gvT.s 			page 54


2997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = usartdiv & 0xFFF0U;
3007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
3022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
3024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, hua
3029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
3031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
3038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
3043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
3045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
3052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccWz3gvT.s 			page 55


3054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
3082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 56


3111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
3166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
ARM GAS  /tmp/ccWz3gvT.s 			page 57


3168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
3199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
3222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/ccWz3gvT.s 			page 58


3225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Process Unlocked */
3235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  27              		.loc 1 3251 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3258 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 3262 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F87130 		strb	r3, [r0, #113]
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE166:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
ARM GAS  /tmp/ccWz3gvT.s 			page 59


  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	UART_EndRxTransfer:
  53              	.LFB167:
3263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  54              		.loc 1 3272 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
3273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 3278 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
3279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 3279 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
3280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 3283 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F87230 		strb	r3, [r0, #114]
3284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  73              		.loc 1 3286 0
  74 001a 0023     		movs	r3, #0
  75 001c 0366     		str	r3, [r0, #96]
  76 001e 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE167:
  80              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  81              		.align	1
ARM GAS  /tmp/ccWz3gvT.s 			page 60


  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	UART_TxISR_8BIT:
  88              	.LFB178:
3287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
ARM GAS  /tmp/ccWz3gvT.s 			page 61


3338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 62


3395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX)
3406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
3407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX)
3414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
3415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 63


3452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccWz3gvT.s 			page 64


3509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccWz3gvT.s 			page 65


3566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  /tmp/ccWz3gvT.s 			page 66


3623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  89              		.loc 1 3635 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL2:
3636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  95              		.loc 1 3637 0
  96 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
  97 0004 DBB2     		uxtb	r3, r3
  98 0006 212B     		cmp	r3, #33
  99 0008 00D0     		beq	.L6
 100              	.L3:
 101 000a 7047     		bx	lr
 102              	.L6:
3638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
 103              		.loc 1 3639 0
 104 000c B0F85230 		ldrh	r3, [r0, #82]
 105 0010 9BB2     		uxth	r3, r3
 106 0012 6BB1     		cbz	r3, .L7
3640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
 107              		.loc 1 3653 0
 108 0014 0268     		ldr	r2, [r0]
 109 0016 C36C     		ldr	r3, [r0, #76]
 110 0018 591C     		adds	r1, r3, #1
 111 001a C164     		str	r1, [r0, #76]
 112 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 001e 1385     		strh	r3, [r2, #40]	@ movhi
3654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
ARM GAS  /tmp/ccWz3gvT.s 			page 67


 114              		.loc 1 3654 0
 115 0020 B0F85230 		ldrh	r3, [r0, #82]
 116 0024 9BB2     		uxth	r3, r3
 117 0026 013B     		subs	r3, r3, #1
 118 0028 9BB2     		uxth	r3, r3
 119 002a A0F85230 		strh	r3, [r0, #82]	@ movhi
3655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 120              		.loc 1 3657 0
 121 002e ECE7     		b	.L3
 122              	.L7:
3645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 123              		.loc 1 3645 0
 124 0030 0268     		ldr	r2, [r0]
 125 0032 1368     		ldr	r3, [r2]
 126 0034 23F08003 		bic	r3, r3, #128
 127 0038 1360     		str	r3, [r2]
3649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 128              		.loc 1 3649 0
 129 003a 0268     		ldr	r2, [r0]
 130 003c 1368     		ldr	r3, [r2]
 131 003e 43F04003 		orr	r3, r3, #64
 132 0042 1360     		str	r3, [r2]
 133 0044 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE178:
 137              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 138              		.align	1
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 142              		.fpu fpv4-sp-d16
 144              	UART_TxISR_16BIT:
 145              	.LFB179:
3658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 146              		.loc 1 3667 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL3:
3668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 152              		.loc 1 3671 0
 153 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
ARM GAS  /tmp/ccWz3gvT.s 			page 68


 154 0004 DBB2     		uxtb	r3, r3
 155 0006 212B     		cmp	r3, #33
 156 0008 00D0     		beq	.L11
 157              	.L8:
 158 000a 7047     		bx	lr
 159              	.L11:
3672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
 160              		.loc 1 3673 0
 161 000c B0F85230 		ldrh	r3, [r0, #82]
 162 0010 9BB2     		uxth	r3, r3
 163 0012 83B1     		cbz	r3, .L12
3674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 164              		.loc 1 3687 0
 165 0014 C36C     		ldr	r3, [r0, #76]
 166              	.LVL4:
3688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 167              		.loc 1 3688 0
 168 0016 0268     		ldr	r2, [r0]
 169 0018 1B88     		ldrh	r3, [r3]
 170              	.LVL5:
 171 001a C3F30803 		ubfx	r3, r3, #0, #9
 172 001e 1385     		strh	r3, [r2, #40]	@ movhi
 173              	.LVL6:
3689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
 174              		.loc 1 3689 0
 175 0020 C36C     		ldr	r3, [r0, #76]
 176 0022 0233     		adds	r3, r3, #2
 177 0024 C364     		str	r3, [r0, #76]
3690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 178              		.loc 1 3690 0
 179 0026 B0F85230 		ldrh	r3, [r0, #82]
 180 002a 9BB2     		uxth	r3, r3
 181 002c 013B     		subs	r3, r3, #1
 182 002e 9BB2     		uxth	r3, r3
 183 0030 A0F85230 		strh	r3, [r0, #82]	@ movhi
3691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 184              		.loc 1 3693 0
 185 0034 E9E7     		b	.L8
 186              	.L12:
3679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 187              		.loc 1 3679 0
ARM GAS  /tmp/ccWz3gvT.s 			page 69


 188 0036 0268     		ldr	r2, [r0]
 189 0038 1368     		ldr	r3, [r2]
 190 003a 23F08003 		bic	r3, r3, #128
 191 003e 1360     		str	r3, [r2]
3683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 192              		.loc 1 3683 0
 193 0040 0268     		ldr	r2, [r0]
 194 0042 1368     		ldr	r3, [r2]
 195 0044 43F04003 		orr	r3, r3, #64
 196 0048 1360     		str	r3, [r2]
 197 004a 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE179:
 201              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 202              		.align	1
 203              		.weak	HAL_UART_MspInit
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	HAL_UART_MspInit:
 210              	.LFB128:
 700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 211              		.loc 1 700 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL7:
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE128:
 221              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 222              		.align	1
 223              		.weak	HAL_UART_MspDeInit
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_UART_MspDeInit:
 230              	.LFB129:
 715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 231              		.loc 1 715 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL8:
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE129:
 241              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_UART_DeInit
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
ARM GAS  /tmp/ccWz3gvT.s 			page 70


 247              		.fpu fpv4-sp-d16
 249              	HAL_UART_DeInit:
 250              	.LFB127:
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 251              		.loc 1 653 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL9:
 655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 256              		.loc 1 655 0
 257 0000 D8B1     		cbz	r0, .L17
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 258              		.loc 1 653 0
 259 0002 38B5     		push	{r3, r4, r5, lr}
 260              	.LCFI0:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 3, -16
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 5, -8
 265              		.cfi_offset 14, -4
 266 0004 0446     		mov	r4, r0
 663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 267              		.loc 1 663 0
 268 0006 2423     		movs	r3, #36
 269 0008 80F87130 		strb	r3, [r0, #113]
 666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 270              		.loc 1 666 0
 271 000c 0268     		ldr	r2, [r0]
 272 000e 1368     		ldr	r3, [r2]
 273 0010 23F00103 		bic	r3, r3, #1
 274 0014 1360     		str	r3, [r2]
 668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 275              		.loc 1 668 0
 276 0016 0368     		ldr	r3, [r0]
 277 0018 0025     		movs	r5, #0
 278 001a 1D60     		str	r5, [r3]
 669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 279              		.loc 1 669 0
 280 001c 0368     		ldr	r3, [r0]
 281 001e 5D60     		str	r5, [r3, #4]
 670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282              		.loc 1 670 0
 283 0020 0368     		ldr	r3, [r0]
 284 0022 9D60     		str	r5, [r3, #8]
 681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 285              		.loc 1 681 0
 286 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 287              	.LVL10:
 684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 288              		.loc 1 684 0
 289 0028 6567     		str	r5, [r4, #116]
 685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 290              		.loc 1 685 0
 291 002a 84F87150 		strb	r5, [r4, #113]
 686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 292              		.loc 1 686 0
ARM GAS  /tmp/ccWz3gvT.s 			page 71


 293 002e 84F87250 		strb	r5, [r4, #114]
 689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 294              		.loc 1 689 0
 295 0032 84F87050 		strb	r5, [r4, #112]
 691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 296              		.loc 1 691 0
 297 0036 2846     		mov	r0, r5
 298 0038 38BD     		pop	{r3, r4, r5, pc}
 299              	.LVL11:
 300              	.L17:
 301              	.LCFI1:
 302              		.cfi_def_cfa_offset 0
 303              		.cfi_restore 3
 304              		.cfi_restore 4
 305              		.cfi_restore 5
 306              		.cfi_restore 14
 657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 307              		.loc 1 657 0
 308 003a 0120     		movs	r0, #1
 309              	.LVL12:
 310 003c 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE127:
 314              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 315              		.align	1
 316              		.global	HAL_UART_Transmit_IT
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	HAL_UART_Transmit_IT:
 323              	.LFB132:
1236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 324              		.loc 1 1236 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              	.LVL13:
1238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 330              		.loc 1 1238 0
 331 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 332 0004 DBB2     		uxtb	r3, r3
 333 0006 202B     		cmp	r3, #32
 334 0008 01D0     		beq	.L30
1304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 335              		.loc 1 1304 0
 336 000a 0220     		movs	r0, #2
 337              	.LVL14:
 338 000c 7047     		bx	lr
 339              	.LVL15:
 340              	.L30:
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 341              		.loc 1 1240 0
 342 000e 41B3     		cbz	r1, .L27
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 343              		.loc 1 1240 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccWz3gvT.s 			page 72


 344 0010 4AB3     		cbz	r2, .L28
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 345              		.loc 1 1246 0 is_stmt 1
 346 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 347 0016 012B     		cmp	r3, #1
 348 0018 27D0     		beq	.L29
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 349              		.loc 1 1246 0 is_stmt 0 discriminator 2
 350 001a 0123     		movs	r3, #1
 351 001c 80F87030 		strb	r3, [r0, #112]
1248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 352              		.loc 1 1248 0 is_stmt 1 discriminator 2
 353 0020 C164     		str	r1, [r0, #76]
1249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 354              		.loc 1 1249 0 discriminator 2
 355 0022 A0F85020 		strh	r2, [r0, #80]	@ movhi
1250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 356              		.loc 1 1250 0 discriminator 2
 357 0026 A0F85220 		strh	r2, [r0, #82]	@ movhi
1251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 358              		.loc 1 1251 0 discriminator 2
 359 002a 0023     		movs	r3, #0
 360 002c 4366     		str	r3, [r0, #100]
1253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 361              		.loc 1 1253 0 discriminator 2
 362 002e 4367     		str	r3, [r0, #116]
1254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 363              		.loc 1 1254 0 discriminator 2
 364 0030 2123     		movs	r3, #33
 365 0032 80F87130 		strb	r3, [r0, #113]
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 366              		.loc 1 1280 0 discriminator 2
 367 0036 8368     		ldr	r3, [r0, #8]
 368 0038 B3F5805F 		cmp	r3, #4096
 369 003c 0BD0     		beq	.L31
 370              	.L24:
1286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 371              		.loc 1 1286 0
 372 003e 0C4B     		ldr	r3, .L32
 373 0040 4366     		str	r3, [r0, #100]
 374              	.L25:
1290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 375              		.loc 1 1290 0
 376 0042 0023     		movs	r3, #0
 377 0044 80F87030 		strb	r3, [r0, #112]
1296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 378              		.loc 1 1296 0
 379 0048 0168     		ldr	r1, [r0]
 380              	.LVL16:
 381 004a 0A68     		ldr	r2, [r1]
 382              	.LVL17:
 383 004c 42F08002 		orr	r2, r2, #128
 384 0050 0A60     		str	r2, [r1]
 385              	.LVL18:
1300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 386              		.loc 1 1300 0
 387 0052 1846     		mov	r0, r3
ARM GAS  /tmp/ccWz3gvT.s 			page 73


 388              	.LVL19:
 389 0054 7047     		bx	lr
 390              	.LVL20:
 391              	.L31:
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 392              		.loc 1 1280 0 discriminator 1
 393 0056 0369     		ldr	r3, [r0, #16]
 394 0058 002B     		cmp	r3, #0
 395 005a F0D1     		bne	.L24
1282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 396              		.loc 1 1282 0
 397 005c 054B     		ldr	r3, .L32+4
 398 005e 4366     		str	r3, [r0, #100]
 399 0060 EFE7     		b	.L25
 400              	.L27:
1242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 401              		.loc 1 1242 0
 402 0062 0120     		movs	r0, #1
 403              	.LVL21:
 404 0064 7047     		bx	lr
 405              	.LVL22:
 406              	.L28:
 407 0066 0120     		movs	r0, #1
 408              	.LVL23:
 409 0068 7047     		bx	lr
 410              	.LVL24:
 411              	.L29:
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 412              		.loc 1 1246 0
 413 006a 0220     		movs	r0, #2
 414              	.LVL25:
1306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 415              		.loc 1 1306 0
 416 006c 7047     		bx	lr
 417              	.L33:
 418 006e 00BF     		.align	2
 419              	.L32:
 420 0070 00000000 		.word	UART_TxISR_8BIT
 421 0074 00000000 		.word	UART_TxISR_16BIT
 422              		.cfi_endproc
 423              	.LFE132:
 425              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 426              		.align	1
 427              		.global	HAL_UART_Receive_IT
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	HAL_UART_Receive_IT:
 434              	.LFB133:
1316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 435              		.loc 1 1316 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440              	.LVL26:
ARM GAS  /tmp/ccWz3gvT.s 			page 74


1318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 441              		.loc 1 1318 0
 442 0000 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 443 0004 DBB2     		uxtb	r3, r3
 444 0006 202B     		cmp	r3, #32
 445 0008 01D0     		beq	.L48
1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 446              		.loc 1 1391 0
 447 000a 0220     		movs	r0, #2
 448              	.LVL27:
 449 000c 7047     		bx	lr
 450              	.LVL28:
 451              	.L48:
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 452              		.loc 1 1320 0
 453 000e 0029     		cmp	r1, #0
 454 0010 56D0     		beq	.L45
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 455              		.loc 1 1320 0 is_stmt 0 discriminator 1
 456 0012 002A     		cmp	r2, #0
 457 0014 56D0     		beq	.L46
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 458              		.loc 1 1326 0 is_stmt 1
 459 0016 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 460 001a 012B     		cmp	r3, #1
 461 001c 54D0     		beq	.L47
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462              		.loc 1 1326 0 is_stmt 0 discriminator 2
 463 001e 0123     		movs	r3, #1
 464 0020 80F87030 		strb	r3, [r0, #112]
1328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 465              		.loc 1 1328 0 is_stmt 1 discriminator 2
 466 0024 4165     		str	r1, [r0, #84]
1329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 467              		.loc 1 1329 0 discriminator 2
 468 0026 A0F85820 		strh	r2, [r0, #88]	@ movhi
1330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 469              		.loc 1 1330 0 discriminator 2
 470 002a A0F85A20 		strh	r2, [r0, #90]	@ movhi
1331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 471              		.loc 1 1331 0 discriminator 2
 472 002e 0023     		movs	r3, #0
 473 0030 0366     		str	r3, [r0, #96]
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 474              		.loc 1 1334 0 discriminator 2
 475 0032 8368     		ldr	r3, [r0, #8]
 476 0034 B3F5805F 		cmp	r3, #4096
 477 0038 06D0     		beq	.L49
 478 003a A3B9     		cbnz	r3, .L39
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 479              		.loc 1 1334 0 is_stmt 0 discriminator 5
 480 003c 0369     		ldr	r3, [r0, #16]
 481 003e 73B9     		cbnz	r3, .L40
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 482              		.loc 1 1334 0 discriminator 7
 483 0040 FF23     		movs	r3, #255
 484 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
ARM GAS  /tmp/ccWz3gvT.s 			page 75


 485 0046 11E0     		b	.L38
 486              	.L49:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 487              		.loc 1 1334 0 discriminator 1
 488 0048 0369     		ldr	r3, [r0, #16]
 489 004a 23B9     		cbnz	r3, .L37
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 490              		.loc 1 1334 0 discriminator 3
 491 004c 40F2FF13 		movw	r3, #511
 492 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 493 0054 0AE0     		b	.L38
 494              	.L37:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 495              		.loc 1 1334 0 discriminator 4
 496 0056 FF23     		movs	r3, #255
 497 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 498 005c 06E0     		b	.L38
 499              	.L40:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 500              		.loc 1 1334 0 discriminator 8
 501 005e 7F23     		movs	r3, #127
 502 0060 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 503 0064 02E0     		b	.L38
 504              	.L39:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 505              		.loc 1 1334 0 discriminator 6
 506 0066 B3F1805F 		cmp	r3, #268435456
 507 006a 19D0     		beq	.L50
 508              	.L38:
1336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 509              		.loc 1 1336 0 is_stmt 1
 510 006c 0023     		movs	r3, #0
 511 006e 4367     		str	r3, [r0, #116]
1337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 512              		.loc 1 1337 0
 513 0070 2223     		movs	r3, #34
 514 0072 80F87230 		strb	r3, [r0, #114]
1340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 515              		.loc 1 1340 0
 516 0076 0268     		ldr	r2, [r0]
 517              	.LVL29:
 518 0078 9368     		ldr	r3, [r2, #8]
 519 007a 43F00103 		orr	r3, r3, #1
 520 007e 9360     		str	r3, [r2, #8]
 521              	.LVL30:
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 522              		.loc 1 1367 0
 523 0080 8368     		ldr	r3, [r0, #8]
 524 0082 B3F5805F 		cmp	r3, #4096
 525 0086 15D0     		beq	.L51
 526              	.L42:
1373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 527              		.loc 1 1373 0
 528 0088 104B     		ldr	r3, .L52
 529 008a 0366     		str	r3, [r0, #96]
 530              	.L43:
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 76


 531              		.loc 1 1377 0
 532 008c 0023     		movs	r3, #0
 533 008e 80F87030 		strb	r3, [r0, #112]
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 534              		.loc 1 1383 0
 535 0092 0168     		ldr	r1, [r0]
 536              	.LVL31:
 537 0094 0A68     		ldr	r2, [r1]
 538 0096 42F49072 		orr	r2, r2, #288
 539 009a 0A60     		str	r2, [r1]
1387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 540              		.loc 1 1387 0
 541 009c 1846     		mov	r0, r3
 542              	.LVL32:
 543 009e 7047     		bx	lr
 544              	.LVL33:
 545              	.L50:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 546              		.loc 1 1334 0 discriminator 9
 547 00a0 0369     		ldr	r3, [r0, #16]
 548 00a2 1BB9     		cbnz	r3, .L41
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 549              		.loc 1 1334 0 is_stmt 0 discriminator 10
 550 00a4 7F23     		movs	r3, #127
 551 00a6 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 552 00aa DFE7     		b	.L38
 553              	.L41:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 554              		.loc 1 1334 0 discriminator 11
 555 00ac 3F23     		movs	r3, #63
 556 00ae A0F85C30 		strh	r3, [r0, #92]	@ movhi
 557 00b2 DBE7     		b	.L38
 558              	.LVL34:
 559              	.L51:
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 560              		.loc 1 1367 0 is_stmt 1 discriminator 1
 561 00b4 0369     		ldr	r3, [r0, #16]
 562 00b6 002B     		cmp	r3, #0
 563 00b8 E6D1     		bne	.L42
1369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 564              		.loc 1 1369 0
 565 00ba 054B     		ldr	r3, .L52+4
 566 00bc 0366     		str	r3, [r0, #96]
 567 00be E5E7     		b	.L43
 568              	.LVL35:
 569              	.L45:
1322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 570              		.loc 1 1322 0
 571 00c0 0120     		movs	r0, #1
 572              	.LVL36:
 573 00c2 7047     		bx	lr
 574              	.LVL37:
 575              	.L46:
 576 00c4 0120     		movs	r0, #1
 577              	.LVL38:
 578 00c6 7047     		bx	lr
 579              	.LVL39:
ARM GAS  /tmp/ccWz3gvT.s 			page 77


 580              	.L47:
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 581              		.loc 1 1326 0
 582 00c8 0220     		movs	r0, #2
 583              	.LVL40:
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 584              		.loc 1 1393 0
 585 00ca 7047     		bx	lr
 586              	.L53:
 587              		.align	2
 588              	.L52:
 589 00cc 00000000 		.word	UART_RxISR_8BIT
 590 00d0 00000000 		.word	UART_RxISR_16BIT
 591              		.cfi_endproc
 592              	.LFE133:
 594              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 595              		.align	1
 596              		.global	HAL_UART_Transmit_DMA
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu fpv4-sp-d16
 602              	HAL_UART_Transmit_DMA:
 603              	.LFB134:
1403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 604              		.loc 1 1403 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              	.LVL41:
 609 0000 38B5     		push	{r3, r4, r5, lr}
 610              	.LCFI2:
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 3, -16
 613              		.cfi_offset 4, -12
 614              		.cfi_offset 5, -8
 615              		.cfi_offset 14, -4
1405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 616              		.loc 1 1405 0
 617 0002 90F87140 		ldrb	r4, [r0, #113]	@ zero_extendqisi2
 618 0006 E4B2     		uxtb	r4, r4
 619 0008 202C     		cmp	r4, #32
 620 000a 01D0     		beq	.L61
1451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 621              		.loc 1 1451 0
 622 000c 0220     		movs	r0, #2
 623              	.LVL42:
 624 000e 38BD     		pop	{r3, r4, r5, pc}
 625              	.LVL43:
 626              	.L61:
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 627              		.loc 1 1407 0
 628 0010 0029     		cmp	r1, #0
 629 0012 33D0     		beq	.L57
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 630              		.loc 1 1407 0 is_stmt 0 discriminator 1
 631 0014 002A     		cmp	r2, #0
ARM GAS  /tmp/ccWz3gvT.s 			page 78


 632 0016 33D0     		beq	.L58
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 633              		.loc 1 1413 0 is_stmt 1
 634 0018 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 635 001c 012B     		cmp	r3, #1
 636 001e 01D1     		bne	.L62
 637 0020 0220     		movs	r0, #2
 638              	.LVL44:
1453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639              		.loc 1 1453 0
 640 0022 38BD     		pop	{r3, r4, r5, pc}
 641              	.LVL45:
 642              	.L62:
 643 0024 1346     		mov	r3, r2
 644 0026 0446     		mov	r4, r0
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 645              		.loc 1 1413 0 discriminator 2
 646 0028 0122     		movs	r2, #1
 647              	.LVL46:
 648 002a 80F87020 		strb	r2, [r0, #112]
1415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 649              		.loc 1 1415 0 discriminator 2
 650 002e C164     		str	r1, [r0, #76]
1416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 651              		.loc 1 1416 0 discriminator 2
 652 0030 A0F85030 		strh	r3, [r0, #80]	@ movhi
1417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 653              		.loc 1 1417 0 discriminator 2
 654 0034 A0F85230 		strh	r3, [r0, #82]	@ movhi
1419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 655              		.loc 1 1419 0 discriminator 2
 656 0038 0025     		movs	r5, #0
 657 003a 4567     		str	r5, [r0, #116]
1420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 658              		.loc 1 1420 0 discriminator 2
 659 003c 2122     		movs	r2, #33
 660 003e 80F87120 		strb	r2, [r0, #113]
1423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 661              		.loc 1 1423 0 discriminator 2
 662 0042 826E     		ldr	r2, [r0, #104]
 663 0044 0F49     		ldr	r1, .L63
 664              	.LVL47:
 665 0046 D162     		str	r1, [r2, #44]
 666              	.LVL48:
1426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 667              		.loc 1 1426 0 discriminator 2
 668 0048 826E     		ldr	r2, [r0, #104]
 669 004a 0F49     		ldr	r1, .L63+4
 670 004c 1163     		str	r1, [r2, #48]
1429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 671              		.loc 1 1429 0 discriminator 2
 672 004e 826E     		ldr	r2, [r0, #104]
 673 0050 0E49     		ldr	r1, .L63+8
 674 0052 5163     		str	r1, [r2, #52]
1432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675              		.loc 1 1432 0 discriminator 2
 676 0054 826E     		ldr	r2, [r0, #104]
ARM GAS  /tmp/ccWz3gvT.s 			page 79


 677 0056 9563     		str	r5, [r2, #56]
1435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 678              		.loc 1 1435 0 discriminator 2
 679 0058 0268     		ldr	r2, [r0]
 680 005a 2832     		adds	r2, r2, #40
 681 005c C16C     		ldr	r1, [r0, #76]
 682 005e 806E     		ldr	r0, [r0, #104]
 683              	.LVL49:
 684 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 685              	.LVL50:
1438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 686              		.loc 1 1438 0 discriminator 2
 687 0064 2368     		ldr	r3, [r4]
 688 0066 4022     		movs	r2, #64
 689 0068 1A62     		str	r2, [r3, #32]
1441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 690              		.loc 1 1441 0 discriminator 2
 691 006a 84F87050 		strb	r5, [r4, #112]
1445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 692              		.loc 1 1445 0 discriminator 2
 693 006e 2268     		ldr	r2, [r4]
 694 0070 9368     		ldr	r3, [r2, #8]
 695 0072 43F08003 		orr	r3, r3, #128
 696 0076 9360     		str	r3, [r2, #8]
1447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 697              		.loc 1 1447 0 discriminator 2
 698 0078 2846     		mov	r0, r5
 699 007a 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL51:
 701              	.L57:
1409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 702              		.loc 1 1409 0
 703 007c 0120     		movs	r0, #1
 704              	.LVL52:
 705 007e 38BD     		pop	{r3, r4, r5, pc}
 706              	.LVL53:
 707              	.L58:
 708 0080 0120     		movs	r0, #1
 709              	.LVL54:
 710 0082 38BD     		pop	{r3, r4, r5, pc}
 711              	.L64:
 712              		.align	2
 713              	.L63:
 714 0084 00000000 		.word	UART_DMATransmitCplt
 715 0088 00000000 		.word	UART_DMATxHalfCplt
 716 008c 00000000 		.word	UART_DMAError
 717              		.cfi_endproc
 718              	.LFE134:
 720              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 721              		.align	1
 722              		.global	HAL_UART_Receive_DMA
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
 728              	HAL_UART_Receive_DMA:
 729              	.LFB135:
ARM GAS  /tmp/ccWz3gvT.s 			page 80


1465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 730              		.loc 1 1465 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              	.LVL55:
 735 0000 38B5     		push	{r3, r4, r5, lr}
 736              	.LCFI3:
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 3, -16
 739              		.cfi_offset 4, -12
 740              		.cfi_offset 5, -8
 741              		.cfi_offset 14, -4
1467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 742              		.loc 1 1467 0
 743 0002 90F87240 		ldrb	r4, [r0, #114]	@ zero_extendqisi2
 744 0006 E4B2     		uxtb	r4, r4
 745 0008 202C     		cmp	r4, #32
 746 000a 01D0     		beq	.L72
1515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 747              		.loc 1 1515 0
 748 000c 0220     		movs	r0, #2
 749              	.LVL56:
 750 000e 38BD     		pop	{r3, r4, r5, pc}
 751              	.LVL57:
 752              	.L72:
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 753              		.loc 1 1469 0
 754 0010 0029     		cmp	r1, #0
 755 0012 38D0     		beq	.L68
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 756              		.loc 1 1469 0 is_stmt 0 discriminator 1
 757 0014 002A     		cmp	r2, #0
 758 0016 38D0     		beq	.L69
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 759              		.loc 1 1475 0 is_stmt 1
 760 0018 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 761 001c 012B     		cmp	r3, #1
 762 001e 01D1     		bne	.L73
 763 0020 0220     		movs	r0, #2
 764              	.LVL58:
1517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 765              		.loc 1 1517 0
 766 0022 38BD     		pop	{r3, r4, r5, pc}
 767              	.LVL59:
 768              	.L73:
 769 0024 1346     		mov	r3, r2
 770 0026 0446     		mov	r4, r0
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 771              		.loc 1 1475 0 discriminator 2
 772 0028 0122     		movs	r2, #1
 773              	.LVL60:
 774 002a 80F87020 		strb	r2, [r0, #112]
1477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 775              		.loc 1 1477 0 discriminator 2
 776 002e 4165     		str	r1, [r0, #84]
1478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 81


 777              		.loc 1 1478 0 discriminator 2
 778 0030 A0F85830 		strh	r3, [r0, #88]	@ movhi
1480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 779              		.loc 1 1480 0 discriminator 2
 780 0034 0025     		movs	r5, #0
 781 0036 4567     		str	r5, [r0, #116]
1481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782              		.loc 1 1481 0 discriminator 2
 783 0038 2222     		movs	r2, #34
 784 003a 80F87220 		strb	r2, [r0, #114]
1484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 785              		.loc 1 1484 0 discriminator 2
 786 003e C26E     		ldr	r2, [r0, #108]
 787 0040 1349     		ldr	r1, .L74
 788              	.LVL61:
 789 0042 D162     		str	r1, [r2, #44]
 790              	.LVL62:
1487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 791              		.loc 1 1487 0 discriminator 2
 792 0044 C26E     		ldr	r2, [r0, #108]
 793 0046 1349     		ldr	r1, .L74+4
 794 0048 1163     		str	r1, [r2, #48]
1490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 795              		.loc 1 1490 0 discriminator 2
 796 004a C26E     		ldr	r2, [r0, #108]
 797 004c 1249     		ldr	r1, .L74+8
 798 004e 5163     		str	r1, [r2, #52]
1493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 799              		.loc 1 1493 0 discriminator 2
 800 0050 C26E     		ldr	r2, [r0, #108]
 801 0052 9563     		str	r5, [r2, #56]
1496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 802              		.loc 1 1496 0 discriminator 2
 803 0054 0168     		ldr	r1, [r0]
 804 0056 426D     		ldr	r2, [r0, #84]
 805 0058 2431     		adds	r1, r1, #36
 806 005a C06E     		ldr	r0, [r0, #108]
 807              	.LVL63:
 808 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 809              	.LVL64:
1499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 810              		.loc 1 1499 0 discriminator 2
 811 0060 84F87050 		strb	r5, [r4, #112]
1502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812              		.loc 1 1502 0 discriminator 2
 813 0064 2268     		ldr	r2, [r4]
 814 0066 1368     		ldr	r3, [r2]
 815 0068 43F48073 		orr	r3, r3, #256
 816 006c 1360     		str	r3, [r2]
1505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 817              		.loc 1 1505 0 discriminator 2
 818 006e 2268     		ldr	r2, [r4]
 819 0070 9368     		ldr	r3, [r2, #8]
 820 0072 43F00103 		orr	r3, r3, #1
 821 0076 9360     		str	r3, [r2, #8]
1509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 822              		.loc 1 1509 0 discriminator 2
ARM GAS  /tmp/ccWz3gvT.s 			page 82


 823 0078 2268     		ldr	r2, [r4]
 824 007a 9368     		ldr	r3, [r2, #8]
 825 007c 43F04003 		orr	r3, r3, #64
 826 0080 9360     		str	r3, [r2, #8]
1511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 827              		.loc 1 1511 0 discriminator 2
 828 0082 2846     		mov	r0, r5
 829 0084 38BD     		pop	{r3, r4, r5, pc}
 830              	.LVL65:
 831              	.L68:
1471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 832              		.loc 1 1471 0
 833 0086 0120     		movs	r0, #1
 834              	.LVL66:
 835 0088 38BD     		pop	{r3, r4, r5, pc}
 836              	.LVL67:
 837              	.L69:
 838 008a 0120     		movs	r0, #1
 839              	.LVL68:
 840 008c 38BD     		pop	{r3, r4, r5, pc}
 841              	.L75:
 842 008e 00BF     		.align	2
 843              	.L74:
 844 0090 00000000 		.word	UART_DMAReceiveCplt
 845 0094 00000000 		.word	UART_DMARxHalfCplt
 846 0098 00000000 		.word	UART_DMAError
 847              		.cfi_endproc
 848              	.LFE135:
 850              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 851              		.align	1
 852              		.global	HAL_UART_DMAPause
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 856              		.fpu fpv4-sp-d16
 858              	HAL_UART_DMAPause:
 859              	.LFB136:
1525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 860              		.loc 1 1525 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865              	.LVL69:
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 866              		.loc 1 1527 0
 867 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 868 0004 012B     		cmp	r3, #1
 869 0006 2FD0     		beq	.L80
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 870              		.loc 1 1527 0 is_stmt 0 discriminator 2
 871 0008 0123     		movs	r3, #1
 872 000a 80F87030 		strb	r3, [r0, #112]
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 873              		.loc 1 1529 0 is_stmt 1 discriminator 2
 874 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 875 0012 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccWz3gvT.s 			page 83


 876 0014 212B     		cmp	r3, #33
 877 0016 09D0     		beq	.L81
 878              	.L78:
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 879              		.loc 1 1535 0
 880 0018 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 881 001c DBB2     		uxtb	r3, r3
 882 001e 222B     		cmp	r3, #34
 883 0020 0ED0     		beq	.L82
 884              	.L79:
1547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 885              		.loc 1 1547 0
 886 0022 0023     		movs	r3, #0
 887 0024 80F87030 		strb	r3, [r0, #112]
1549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 888              		.loc 1 1549 0
 889 0028 1846     		mov	r0, r3
 890              	.LVL70:
 891 002a 7047     		bx	lr
 892              	.LVL71:
 893              	.L81:
1530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 894              		.loc 1 1530 0 discriminator 1
 895 002c 0368     		ldr	r3, [r0]
 896 002e 9A68     		ldr	r2, [r3, #8]
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 897              		.loc 1 1529 0 discriminator 1
 898 0030 12F0800F 		tst	r2, #128
 899 0034 F0D0     		beq	.L78
1533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 900              		.loc 1 1533 0
 901 0036 9A68     		ldr	r2, [r3, #8]
 902 0038 22F08002 		bic	r2, r2, #128
 903 003c 9A60     		str	r2, [r3, #8]
 904 003e EBE7     		b	.L78
 905              	.L82:
1536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 906              		.loc 1 1536 0 discriminator 1
 907 0040 0368     		ldr	r3, [r0]
 908 0042 9A68     		ldr	r2, [r3, #8]
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 909              		.loc 1 1535 0 discriminator 1
 910 0044 12F0400F 		tst	r2, #64
 911 0048 EBD0     		beq	.L79
1539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 912              		.loc 1 1539 0
 913 004a 1A68     		ldr	r2, [r3]
 914 004c 22F48072 		bic	r2, r2, #256
 915 0050 1A60     		str	r2, [r3]
1540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916              		.loc 1 1540 0
 917 0052 0268     		ldr	r2, [r0]
 918 0054 9368     		ldr	r3, [r2, #8]
 919 0056 23F00103 		bic	r3, r3, #1
 920 005a 9360     		str	r3, [r2, #8]
1543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 921              		.loc 1 1543 0
ARM GAS  /tmp/ccWz3gvT.s 			page 84


 922 005c 0268     		ldr	r2, [r0]
 923 005e 9368     		ldr	r3, [r2, #8]
 924 0060 23F04003 		bic	r3, r3, #64
 925 0064 9360     		str	r3, [r2, #8]
 926 0066 DCE7     		b	.L79
 927              	.L80:
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928              		.loc 1 1527 0
 929 0068 0220     		movs	r0, #2
 930              	.LVL72:
1550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 931              		.loc 1 1550 0
 932 006a 7047     		bx	lr
 933              		.cfi_endproc
 934              	.LFE136:
 936              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 937              		.align	1
 938              		.global	HAL_UART_DMAResume
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu fpv4-sp-d16
 944              	HAL_UART_DMAResume:
 945              	.LFB137:
1558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 946              		.loc 1 1558 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 951              	.LVL73:
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 952              		.loc 1 1560 0
 953 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 954 0004 012B     		cmp	r3, #1
 955 0006 2AD0     		beq	.L87
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956              		.loc 1 1560 0 is_stmt 0 discriminator 2
 957 0008 0123     		movs	r3, #1
 958 000a 80F87030 		strb	r3, [r0, #112]
1562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 959              		.loc 1 1562 0 is_stmt 1 discriminator 2
 960 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 961 0012 DBB2     		uxtb	r3, r3
 962 0014 212B     		cmp	r3, #33
 963 0016 09D0     		beq	.L88
 964              	.L85:
1567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 965              		.loc 1 1567 0
 966 0018 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 967 001c DBB2     		uxtb	r3, r3
 968 001e 222B     		cmp	r3, #34
 969 0020 0AD0     		beq	.L89
 970              	.L86:
1581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 971              		.loc 1 1581 0
 972 0022 0023     		movs	r3, #0
ARM GAS  /tmp/ccWz3gvT.s 			page 85


 973 0024 80F87030 		strb	r3, [r0, #112]
1583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 974              		.loc 1 1583 0
 975 0028 1846     		mov	r0, r3
 976              	.LVL74:
 977 002a 7047     		bx	lr
 978              	.LVL75:
 979              	.L88:
1565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 980              		.loc 1 1565 0
 981 002c 0268     		ldr	r2, [r0]
 982 002e 9368     		ldr	r3, [r2, #8]
 983 0030 43F08003 		orr	r3, r3, #128
 984 0034 9360     		str	r3, [r2, #8]
 985 0036 EFE7     		b	.L85
 986              	.L89:
1570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 987              		.loc 1 1570 0
 988 0038 0368     		ldr	r3, [r0]
 989 003a 0822     		movs	r2, #8
 990 003c 1A62     		str	r2, [r3, #32]
1573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 991              		.loc 1 1573 0
 992 003e 0268     		ldr	r2, [r0]
 993 0040 1368     		ldr	r3, [r2]
 994 0042 43F48073 		orr	r3, r3, #256
 995 0046 1360     		str	r3, [r2]
1574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 996              		.loc 1 1574 0
 997 0048 0268     		ldr	r2, [r0]
 998 004a 9368     		ldr	r3, [r2, #8]
 999 004c 43F00103 		orr	r3, r3, #1
 1000 0050 9360     		str	r3, [r2, #8]
1577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1001              		.loc 1 1577 0
 1002 0052 0268     		ldr	r2, [r0]
 1003 0054 9368     		ldr	r3, [r2, #8]
 1004 0056 43F04003 		orr	r3, r3, #64
 1005 005a 9360     		str	r3, [r2, #8]
 1006 005c E1E7     		b	.L86
 1007              	.L87:
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1008              		.loc 1 1560 0
 1009 005e 0220     		movs	r0, #2
 1010              	.LVL76:
1584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1011              		.loc 1 1584 0
 1012 0060 7047     		bx	lr
 1013              		.cfi_endproc
 1014              	.LFE137:
 1016              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1017              		.align	1
 1018              		.global	HAL_UART_DMAStop
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
 1022              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccWz3gvT.s 			page 86


 1024              	HAL_UART_DMAStop:
 1025              	.LFB138:
1592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1026              		.loc 1 1592 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL77:
 1031 0000 10B5     		push	{r4, lr}
 1032              	.LCFI4:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 4, -8
 1035              		.cfi_offset 14, -4
 1036 0002 0446     		mov	r4, r0
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1037              		.loc 1 1601 0
 1038 0004 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 1039 0008 DBB2     		uxtb	r3, r3
 1040 000a 212B     		cmp	r3, #33
 1041 000c 06D0     		beq	.L96
 1042              	.LVL78:
 1043              	.L91:
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1044              		.loc 1 1616 0
 1045 000e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1046 0012 DBB2     		uxtb	r3, r3
 1047 0014 222B     		cmp	r3, #34
 1048 0016 12D0     		beq	.L97
 1049              	.L93:
1631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1050              		.loc 1 1631 0
 1051 0018 0020     		movs	r0, #0
 1052 001a 10BD     		pop	{r4, pc}
 1053              	.LVL79:
 1054              	.L96:
1602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1055              		.loc 1 1602 0 discriminator 1
 1056 001c 0368     		ldr	r3, [r0]
 1057 001e 9A68     		ldr	r2, [r3, #8]
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1058              		.loc 1 1601 0 discriminator 1
 1059 0020 12F0800F 		tst	r2, #128
 1060 0024 F3D0     		beq	.L91
1604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1061              		.loc 1 1604 0
 1062 0026 9A68     		ldr	r2, [r3, #8]
 1063 0028 22F08002 		bic	r2, r2, #128
 1064 002c 9A60     		str	r2, [r3, #8]
1607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1065              		.loc 1 1607 0
 1066 002e 806E     		ldr	r0, [r0, #104]
 1067              	.LVL80:
 1068 0030 08B1     		cbz	r0, .L92
1609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1069              		.loc 1 1609 0
 1070 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1071              	.LVL81:
ARM GAS  /tmp/ccWz3gvT.s 			page 87


 1072              	.L92:
1612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1073              		.loc 1 1612 0
 1074 0036 2046     		mov	r0, r4
 1075 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 1076              	.LVL82:
 1077 003c E7E7     		b	.L91
 1078              	.L97:
1617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1079              		.loc 1 1617 0 discriminator 1
 1080 003e 2368     		ldr	r3, [r4]
 1081 0040 9A68     		ldr	r2, [r3, #8]
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1082              		.loc 1 1616 0 discriminator 1
 1083 0042 12F0400F 		tst	r2, #64
 1084 0046 E7D0     		beq	.L93
1619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1085              		.loc 1 1619 0
 1086 0048 9A68     		ldr	r2, [r3, #8]
 1087 004a 22F04002 		bic	r2, r2, #64
 1088 004e 9A60     		str	r2, [r3, #8]
1622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1089              		.loc 1 1622 0
 1090 0050 E06E     		ldr	r0, [r4, #108]
 1091 0052 08B1     		cbz	r0, .L94
1624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1092              		.loc 1 1624 0
 1093 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1094              	.LVL83:
 1095              	.L94:
1627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1096              		.loc 1 1627 0
 1097 0058 2046     		mov	r0, r4
 1098 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1099              	.LVL84:
 1100 005e DBE7     		b	.L93
 1101              		.cfi_endproc
 1102              	.LFE138:
 1104              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1105              		.align	1
 1106              		.global	HAL_UART_Abort
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1110              		.fpu fpv4-sp-d16
 1112              	HAL_UART_Abort:
 1113              	.LFB139:
1646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1114              		.loc 1 1646 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL85:
 1119 0000 10B5     		push	{r4, lr}
 1120              	.LCFI5:
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 4, -8
ARM GAS  /tmp/ccWz3gvT.s 			page 88


 1123              		.cfi_offset 14, -4
 1124 0002 0446     		mov	r4, r0
1653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1125              		.loc 1 1653 0
 1126 0004 0268     		ldr	r2, [r0]
 1127 0006 1368     		ldr	r3, [r2]
 1128 0008 23F4F073 		bic	r3, r3, #480
 1129 000c 1360     		str	r3, [r2]
1654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1130              		.loc 1 1654 0
 1131 000e 0268     		ldr	r2, [r0]
 1132 0010 9368     		ldr	r3, [r2, #8]
 1133 0012 23F00103 		bic	r3, r3, #1
 1134 0016 9360     		str	r3, [r2, #8]
1658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1135              		.loc 1 1658 0
 1136 0018 0368     		ldr	r3, [r0]
 1137 001a 9A68     		ldr	r2, [r3, #8]
 1138 001c 12F0800F 		tst	r2, #128
 1139 0020 0AD0     		beq	.L99
1660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1140              		.loc 1 1660 0
 1141 0022 9A68     		ldr	r2, [r3, #8]
 1142 0024 22F08002 		bic	r2, r2, #128
 1143 0028 9A60     		str	r2, [r3, #8]
1663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1144              		.loc 1 1663 0
 1145 002a 836E     		ldr	r3, [r0, #104]
 1146 002c 23B1     		cbz	r3, .L99
1667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1147              		.loc 1 1667 0
 1148 002e 0022     		movs	r2, #0
 1149 0030 9A63     		str	r2, [r3, #56]
1669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1150              		.loc 1 1669 0
 1151 0032 806E     		ldr	r0, [r0, #104]
 1152              	.LVL86:
 1153 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1154              	.LVL87:
 1155              	.L99:
1674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1156              		.loc 1 1674 0
 1157 0038 2368     		ldr	r3, [r4]
 1158 003a 9A68     		ldr	r2, [r3, #8]
 1159 003c 12F0400F 		tst	r2, #64
 1160 0040 0AD0     		beq	.L100
1676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1161              		.loc 1 1676 0
 1162 0042 9A68     		ldr	r2, [r3, #8]
 1163 0044 22F04002 		bic	r2, r2, #64
 1164 0048 9A60     		str	r2, [r3, #8]
1679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1165              		.loc 1 1679 0
 1166 004a E36E     		ldr	r3, [r4, #108]
 1167 004c 23B1     		cbz	r3, .L100
1683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1168              		.loc 1 1683 0
ARM GAS  /tmp/ccWz3gvT.s 			page 89


 1169 004e 0022     		movs	r2, #0
 1170 0050 9A63     		str	r2, [r3, #56]
1685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1171              		.loc 1 1685 0
 1172 0052 E06E     		ldr	r0, [r4, #108]
 1173 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1174              	.LVL88:
 1175              	.L100:
1690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1176              		.loc 1 1690 0
 1177 0058 0020     		movs	r0, #0
 1178 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1179              		.loc 1 1691 0
 1180 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1181              		.loc 1 1694 0
 1182 0062 2368     		ldr	r3, [r4]
 1183 0064 0F22     		movs	r2, #15
 1184 0066 1A62     		str	r2, [r3, #32]
1705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1185              		.loc 1 1705 0
 1186 0068 2268     		ldr	r2, [r4]
 1187 006a 138B     		ldrh	r3, [r2, #24]
 1188 006c 9BB2     		uxth	r3, r3
 1189 006e 43F00803 		orr	r3, r3, #8
 1190 0072 1383     		strh	r3, [r2, #24]	@ movhi
1708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1191              		.loc 1 1708 0
 1192 0074 2023     		movs	r3, #32
 1193 0076 84F87130 		strb	r3, [r4, #113]
1709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1194              		.loc 1 1709 0
 1195 007a 84F87230 		strb	r3, [r4, #114]
1712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1196              		.loc 1 1712 0
 1197 007e 6067     		str	r0, [r4, #116]
1715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1198              		.loc 1 1715 0
 1199 0080 10BD     		pop	{r4, pc}
 1200              		.cfi_endproc
 1201              	.LFE139:
 1203              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1204              		.align	1
 1205              		.global	HAL_UART_AbortTransmit
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	HAL_UART_AbortTransmit:
 1212              	.LFB140:
1730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1213              		.loc 1 1730 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              	.LVL89:
ARM GAS  /tmp/ccWz3gvT.s 			page 90


 1218 0000 10B5     		push	{r4, lr}
 1219              	.LCFI6:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 4, -8
 1222              		.cfi_offset 14, -4
 1223 0002 0446     		mov	r4, r0
1737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1224              		.loc 1 1737 0
 1225 0004 0268     		ldr	r2, [r0]
 1226 0006 1368     		ldr	r3, [r2]
 1227 0008 23F0C003 		bic	r3, r3, #192
 1228 000c 1360     		str	r3, [r2]
1741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1229              		.loc 1 1741 0
 1230 000e 0368     		ldr	r3, [r0]
 1231 0010 9A68     		ldr	r2, [r3, #8]
 1232 0012 12F0800F 		tst	r2, #128
 1233 0016 0AD0     		beq	.L103
1743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1234              		.loc 1 1743 0
 1235 0018 9A68     		ldr	r2, [r3, #8]
 1236 001a 22F08002 		bic	r2, r2, #128
 1237 001e 9A60     		str	r2, [r3, #8]
1746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1238              		.loc 1 1746 0
 1239 0020 836E     		ldr	r3, [r0, #104]
 1240 0022 23B1     		cbz	r3, .L103
1750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1241              		.loc 1 1750 0
 1242 0024 0022     		movs	r2, #0
 1243 0026 9A63     		str	r2, [r3, #56]
1752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1244              		.loc 1 1752 0
 1245 0028 806E     		ldr	r0, [r0, #104]
 1246              	.LVL90:
 1247 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1248              	.LVL91:
 1249              	.L103:
1757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1250              		.loc 1 1757 0
 1251 002e 0020     		movs	r0, #0
 1252 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1253              		.loc 1 1768 0
 1254 0034 2023     		movs	r3, #32
 1255 0036 84F87130 		strb	r3, [r4, #113]
1771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1256              		.loc 1 1771 0
 1257 003a 10BD     		pop	{r4, pc}
 1258              		.cfi_endproc
 1259              	.LFE140:
 1261              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1262              		.align	1
 1263              		.global	HAL_UART_AbortReceive
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
ARM GAS  /tmp/ccWz3gvT.s 			page 91


 1267              		.fpu fpv4-sp-d16
 1269              	HAL_UART_AbortReceive:
 1270              	.LFB141:
1786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1271              		.loc 1 1786 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              	.LVL92:
 1276 0000 10B5     		push	{r4, lr}
 1277              	.LCFI7:
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 4, -8
 1280              		.cfi_offset 14, -4
 1281 0002 0446     		mov	r4, r0
1793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1282              		.loc 1 1793 0
 1283 0004 0268     		ldr	r2, [r0]
 1284 0006 1368     		ldr	r3, [r2]
 1285 0008 23F49073 		bic	r3, r3, #288
 1286 000c 1360     		str	r3, [r2]
1794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1287              		.loc 1 1794 0
 1288 000e 0268     		ldr	r2, [r0]
 1289 0010 9368     		ldr	r3, [r2, #8]
 1290 0012 23F00103 		bic	r3, r3, #1
 1291 0016 9360     		str	r3, [r2, #8]
1798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1292              		.loc 1 1798 0
 1293 0018 0368     		ldr	r3, [r0]
 1294 001a 9A68     		ldr	r2, [r3, #8]
 1295 001c 12F0400F 		tst	r2, #64
 1296 0020 0AD0     		beq	.L106
1800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1297              		.loc 1 1800 0
 1298 0022 9A68     		ldr	r2, [r3, #8]
 1299 0024 22F04002 		bic	r2, r2, #64
 1300 0028 9A60     		str	r2, [r3, #8]
1803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1301              		.loc 1 1803 0
 1302 002a C36E     		ldr	r3, [r0, #108]
 1303 002c 23B1     		cbz	r3, .L106
1807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1304              		.loc 1 1807 0
 1305 002e 0022     		movs	r2, #0
 1306 0030 9A63     		str	r2, [r3, #56]
1809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1307              		.loc 1 1809 0
 1308 0032 C06E     		ldr	r0, [r0, #108]
 1309              	.LVL93:
 1310 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1311              	.LVL94:
 1312              	.L106:
1814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1313              		.loc 1 1814 0
 1314 0038 0020     		movs	r0, #0
 1315 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
ARM GAS  /tmp/ccWz3gvT.s 			page 92


1817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1316              		.loc 1 1817 0
 1317 003e 2368     		ldr	r3, [r4]
 1318 0040 0F22     		movs	r2, #15
 1319 0042 1A62     		str	r2, [r3, #32]
1820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1320              		.loc 1 1820 0
 1321 0044 2268     		ldr	r2, [r4]
 1322 0046 138B     		ldrh	r3, [r2, #24]
 1323 0048 9BB2     		uxth	r3, r3
 1324 004a 43F00803 		orr	r3, r3, #8
 1325 004e 1383     		strh	r3, [r2, #24]	@ movhi
1823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1326              		.loc 1 1823 0
 1327 0050 2023     		movs	r3, #32
 1328 0052 84F87230 		strb	r3, [r4, #114]
1826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1329              		.loc 1 1826 0
 1330 0056 10BD     		pop	{r4, pc}
 1331              		.cfi_endproc
 1332              	.LFE141:
 1334              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1335              		.align	1
 1336              		.weak	HAL_UART_TxCpltCallback
 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1340              		.fpu fpv4-sp-d16
 1342              	HAL_UART_TxCpltCallback:
 1343              	.LFB146:
2426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1344              		.loc 1 2426 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348              		@ link register save eliminated.
 1349              	.LVL95:
 1350 0000 7047     		bx	lr
 1351              		.cfi_endproc
 1352              	.LFE146:
 1354              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1355              		.align	1
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1359              		.fpu fpv4-sp-d16
 1361              	UART_DMATransmitCplt:
 1362              	.LFB168:
3296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1363              		.loc 1 3296 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              	.LVL96:
3296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1368              		.loc 1 3296 0
 1369 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccWz3gvT.s 			page 93


 1370              	.LCFI8:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 3, -8
 1373              		.cfi_offset 14, -4
3297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1374              		.loc 1 3297 0
 1375 0002 836A     		ldr	r3, [r0, #40]
 1376              	.LVL97:
3300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1377              		.loc 1 3300 0
 1378 0004 0268     		ldr	r2, [r0]
 1379 0006 1268     		ldr	r2, [r2]
 1380 0008 12F0200F 		tst	r2, #32
 1381 000c 0DD1     		bne	.L110
3302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1382              		.loc 1 3302 0
 1383 000e 0022     		movs	r2, #0
 1384 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
3306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1385              		.loc 1 3306 0
 1386 0014 1968     		ldr	r1, [r3]
 1387 0016 8A68     		ldr	r2, [r1, #8]
 1388 0018 22F08002 		bic	r2, r2, #128
 1389 001c 8A60     		str	r2, [r1, #8]
3309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1390              		.loc 1 3309 0
 1391 001e 1A68     		ldr	r2, [r3]
 1392 0020 1368     		ldr	r3, [r2]
 1393              	.LVL98:
 1394 0022 43F04003 		orr	r3, r3, #64
 1395 0026 1360     		str	r3, [r2]
 1396 0028 08BD     		pop	{r3, pc}
 1397              	.LVL99:
 1398              	.L110:
3319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1399              		.loc 1 3319 0
 1400 002a 1846     		mov	r0, r3
 1401              	.LVL100:
 1402 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1403              	.LVL101:
 1404 0030 08BD     		pop	{r3, pc}
 1405              		.cfi_endproc
 1406              	.LFE168:
 1408              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1409              		.align	1
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv4-sp-d16
 1415              	UART_EndTransmit_IT:
 1416              	.LFB180:
3694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
ARM GAS  /tmp/ccWz3gvT.s 			page 94


3700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
3725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
ARM GAS  /tmp/ccWz3gvT.s 			page 95


3757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
3762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart pointer to a UART_HandleTypeDef structure that contains
3773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1417              		.loc 1 3777 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              	.LVL102:
 1422 0000 08B5     		push	{r3, lr}
 1423              	.LCFI9:
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 3, -8
 1426              		.cfi_offset 14, -4
3778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1427              		.loc 1 3779 0
 1428 0002 0168     		ldr	r1, [r0]
 1429 0004 0A68     		ldr	r2, [r1]
 1430 0006 22F04002 		bic	r2, r2, #64
 1431 000a 0A60     		str	r2, [r1]
3780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1432              		.loc 1 3782 0
 1433 000c 2022     		movs	r2, #32
 1434 000e 80F87120 		strb	r2, [r0, #113]
3783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 1435              		.loc 1 3785 0
 1436 0012 0022     		movs	r2, #0
 1437 0014 4266     		str	r2, [r0, #100]
3786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
ARM GAS  /tmp/ccWz3gvT.s 			page 96


 1438              		.loc 1 3792 0
 1439 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1440              	.LVL103:
 1441 001a 08BD     		pop	{r3, pc}
 1442              		.cfi_endproc
 1443              	.LFE180:
 1445              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1446              		.align	1
 1447              		.weak	HAL_UART_TxHalfCpltCallback
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_UART_TxHalfCpltCallback:
 1454              	.LFB147:
2441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1455              		.loc 1 2441 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
 1460              	.LVL104:
 1461 0000 7047     		bx	lr
 1462              		.cfi_endproc
 1463              	.LFE147:
 1465              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1466              		.align	1
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu fpv4-sp-d16
 1472              	UART_DMATxHalfCplt:
 1473              	.LFB169:
3330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1474              		.loc 1 3330 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              	.LVL105:
3330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1479              		.loc 1 3330 0
 1480 0000 08B5     		push	{r3, lr}
 1481              	.LCFI10:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 3, -8
 1484              		.cfi_offset 14, -4
 1485              	.LVL106:
3338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1486              		.loc 1 3338 0
 1487 0002 806A     		ldr	r0, [r0, #40]
 1488              	.LVL107:
 1489 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1490              	.LVL108:
 1491 0008 08BD     		pop	{r3, pc}
 1492              		.cfi_endproc
 1493              	.LFE169:
 1495              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccWz3gvT.s 			page 97


 1496              		.align	1
 1497              		.weak	HAL_UART_RxCpltCallback
 1498              		.syntax unified
 1499              		.thumb
 1500              		.thumb_func
 1501              		.fpu fpv4-sp-d16
 1503              	HAL_UART_RxCpltCallback:
 1504              	.LFB148:
2456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1505              		.loc 1 2456 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
 1510              	.LVL109:
 1511 0000 7047     		bx	lr
 1512              		.cfi_endproc
 1513              	.LFE148:
 1515              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1516              		.align	1
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
 1522              	UART_RxISR_8BIT:
 1523              	.LFB181:
3793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1524              		.loc 1 3802 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              	.LVL110:
3803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1529              		.loc 1 3803 0
 1530 0000 B0F85C20 		ldrh	r2, [r0, #92]
 1531              	.LVL111:
3804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1532              		.loc 1 3807 0
 1533 0004 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1534 0008 DBB2     		uxtb	r3, r3
 1535 000a 222B     		cmp	r3, #34
 1536 000c 06D0     		beq	.L126
3808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
ARM GAS  /tmp/ccWz3gvT.s 			page 98


3811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
3813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
3829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1537              		.loc 1 3842 0
 1538 000e 0268     		ldr	r2, [r0]
 1539              	.LVL112:
 1540 0010 138B     		ldrh	r3, [r2, #24]
 1541 0012 9BB2     		uxth	r3, r3
 1542 0014 43F00803 		orr	r3, r3, #8
 1543 0018 1383     		strh	r3, [r2, #24]	@ movhi
 1544              	.LVL113:
3843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1545              		.loc 1 3844 0
 1546 001a 7047     		bx	lr
 1547              	.LVL114:
 1548              	.L126:
3802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1549              		.loc 1 3802 0
 1550 001c 10B5     		push	{r4, lr}
 1551              	.LCFI11:
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 4, -8
 1554              		.cfi_offset 14, -4
3809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1555              		.loc 1 3809 0
 1556 001e 0368     		ldr	r3, [r0]
 1557 0020 998C     		ldrh	r1, [r3, #36]
ARM GAS  /tmp/ccWz3gvT.s 			page 99


 1558              	.LVL115:
3810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1559              		.loc 1 3810 0
 1560 0022 436D     		ldr	r3, [r0, #84]
 1561 0024 5C1C     		adds	r4, r3, #1
 1562 0026 4465     		str	r4, [r0, #84]
 1563 0028 D2B2     		uxtb	r2, r2
 1564              	.LVL116:
 1565 002a 0A40     		ands	r2, r2, r1
 1566 002c 1A70     		strb	r2, [r3]
 1567              	.LVL117:
3812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1568              		.loc 1 3812 0
 1569 002e B0F85A30 		ldrh	r3, [r0, #90]
 1570 0032 9BB2     		uxth	r3, r3
 1571 0034 013B     		subs	r3, r3, #1
 1572 0036 9BB2     		uxth	r3, r3
 1573 0038 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1574 003c 03B1     		cbz	r3, .L127
 1575 003e 10BD     		pop	{r4, pc}
 1576              	.L127:
3818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1577              		.loc 1 3818 0
 1578 0040 0268     		ldr	r2, [r0]
 1579 0042 1368     		ldr	r3, [r2]
 1580 0044 23F49073 		bic	r3, r3, #288
 1581 0048 1360     		str	r3, [r2]
3822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1582              		.loc 1 3822 0
 1583 004a 0268     		ldr	r2, [r0]
 1584 004c 9368     		ldr	r3, [r2, #8]
 1585 004e 23F00103 		bic	r3, r3, #1
 1586 0052 9360     		str	r3, [r2, #8]
3825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1587              		.loc 1 3825 0
 1588 0054 2023     		movs	r3, #32
 1589 0056 80F87230 		strb	r3, [r0, #114]
3828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1590              		.loc 1 3828 0
 1591 005a 0023     		movs	r3, #0
 1592 005c 0366     		str	r3, [r0, #96]
3835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1593              		.loc 1 3835 0
 1594 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1595              	.LVL118:
 1596 0062 10BD     		pop	{r4, pc}
 1597              		.cfi_endproc
 1598              	.LFE181:
 1600              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1601              		.align	1
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv4-sp-d16
 1607              	UART_RxISR_16BIT:
 1608              	.LFB182:
3845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 100


3846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1609              		.loc 1 3854 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              	.LVL119:
 1614 0000 08B5     		push	{r3, lr}
 1615              	.LCFI12:
 1616              		.cfi_def_cfa_offset 8
 1617              		.cfi_offset 3, -8
 1618              		.cfi_offset 14, -4
3855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1619              		.loc 1 3856 0
 1620 0002 B0F85C20 		ldrh	r2, [r0, #92]
 1621              	.LVL120:
3857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1622              		.loc 1 3860 0
 1623 0006 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1624 000a DBB2     		uxtb	r3, r3
 1625 000c 222B     		cmp	r3, #34
 1626 000e 06D0     		beq	.L132
3861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2;
3866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
3868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
3884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 101


3885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1627              		.loc 1 3897 0
 1628 0010 0268     		ldr	r2, [r0]
 1629              	.LVL121:
 1630 0012 138B     		ldrh	r3, [r2, #24]
 1631 0014 9BB2     		uxth	r3, r3
 1632 0016 43F00803 		orr	r3, r3, #8
 1633 001a 1383     		strh	r3, [r2, #24]	@ movhi
 1634              	.LVL122:
 1635              	.L128:
 1636 001c 08BD     		pop	{r3, pc}
 1637              	.LVL123:
 1638              	.L132:
3862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1639              		.loc 1 3862 0
 1640 001e 0368     		ldr	r3, [r0]
 1641 0020 998C     		ldrh	r1, [r3, #36]
 1642              	.LVL124:
3863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1643              		.loc 1 3863 0
 1644 0022 436D     		ldr	r3, [r0, #84]
 1645              	.LVL125:
3864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2;
 1646              		.loc 1 3864 0
 1647 0024 0A40     		ands	r2, r2, r1
 1648              	.LVL126:
 1649 0026 1A80     		strh	r2, [r3]	@ movhi
 1650              	.LVL127:
3865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1651              		.loc 1 3865 0
 1652 0028 436D     		ldr	r3, [r0, #84]
 1653              	.LVL128:
 1654 002a 0233     		adds	r3, r3, #2
 1655 002c 4365     		str	r3, [r0, #84]
3867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1656              		.loc 1 3867 0
 1657 002e B0F85A30 		ldrh	r3, [r0, #90]
 1658 0032 9BB2     		uxth	r3, r3
 1659 0034 013B     		subs	r3, r3, #1
 1660 0036 9BB2     		uxth	r3, r3
 1661 0038 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1662 003c 002B     		cmp	r3, #0
 1663 003e EDD1     		bne	.L128
3873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1664              		.loc 1 3873 0
ARM GAS  /tmp/ccWz3gvT.s 			page 102


 1665 0040 0268     		ldr	r2, [r0]
 1666 0042 1368     		ldr	r3, [r2]
 1667 0044 23F49073 		bic	r3, r3, #288
 1668 0048 1360     		str	r3, [r2]
3877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1669              		.loc 1 3877 0
 1670 004a 0268     		ldr	r2, [r0]
 1671 004c 9368     		ldr	r3, [r2, #8]
 1672 004e 23F00103 		bic	r3, r3, #1
 1673 0052 9360     		str	r3, [r2, #8]
3880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1674              		.loc 1 3880 0
 1675 0054 2023     		movs	r3, #32
 1676 0056 80F87230 		strb	r3, [r0, #114]
3883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1677              		.loc 1 3883 0
 1678 005a 0023     		movs	r3, #0
 1679 005c 0366     		str	r3, [r0, #96]
3890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1680              		.loc 1 3890 0
 1681 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1682              	.LVL129:
 1683 0062 08BD     		pop	{r3, pc}
 1684              		.cfi_endproc
 1685              	.LFE182:
 1687              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1688              		.align	1
 1689              		.syntax unified
 1690              		.thumb
 1691              		.thumb_func
 1692              		.fpu fpv4-sp-d16
 1694              	UART_DMAReceiveCplt:
 1695              	.LFB170:
3348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1696              		.loc 1 3348 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 0
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700              	.LVL130:
 1701 0000 08B5     		push	{r3, lr}
 1702              	.LCFI13:
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 3, -8
 1705              		.cfi_offset 14, -4
3349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1706              		.loc 1 3349 0
 1707 0002 836A     		ldr	r3, [r0, #40]
 1708              	.LVL131:
3352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1709              		.loc 1 3352 0
 1710 0004 0268     		ldr	r2, [r0]
 1711 0006 1268     		ldr	r2, [r2]
 1712 0008 12F0200F 		tst	r2, #32
 1713 000c 14D1     		bne	.L134
3354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1714              		.loc 1 3354 0
 1715 000e 0022     		movs	r2, #0
ARM GAS  /tmp/ccWz3gvT.s 			page 103


 1716 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1717              		.loc 1 3357 0
 1718 0014 1968     		ldr	r1, [r3]
 1719 0016 0A68     		ldr	r2, [r1]
 1720 0018 22F48072 		bic	r2, r2, #256
 1721 001c 0A60     		str	r2, [r1]
3358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1722              		.loc 1 3358 0
 1723 001e 1968     		ldr	r1, [r3]
 1724 0020 8A68     		ldr	r2, [r1, #8]
 1725 0022 22F00102 		bic	r2, r2, #1
 1726 0026 8A60     		str	r2, [r1, #8]
3362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1727              		.loc 1 3362 0
 1728 0028 1968     		ldr	r1, [r3]
 1729 002a 8A68     		ldr	r2, [r1, #8]
 1730 002c 22F04002 		bic	r2, r2, #64
 1731 0030 8A60     		str	r2, [r1, #8]
3365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1732              		.loc 1 3365 0
 1733 0032 2022     		movs	r2, #32
 1734 0034 83F87220 		strb	r2, [r3, #114]
 1735              	.L134:
3373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1736              		.loc 1 3373 0
 1737 0038 1846     		mov	r0, r3
 1738              	.LVL132:
 1739 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1740              	.LVL133:
 1741 003e 08BD     		pop	{r3, pc}
 1742              		.cfi_endproc
 1743              	.LFE170:
 1745              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1746              		.align	1
 1747              		.weak	HAL_UART_RxHalfCpltCallback
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1751              		.fpu fpv4-sp-d16
 1753              	HAL_UART_RxHalfCpltCallback:
 1754              	.LFB149:
2471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1755              		.loc 1 2471 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
 1760              	.LVL134:
 1761 0000 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE149:
 1765              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1766              		.align	1
 1767              		.syntax unified
 1768              		.thumb
 1769              		.thumb_func
ARM GAS  /tmp/ccWz3gvT.s 			page 104


 1770              		.fpu fpv4-sp-d16
 1772              	UART_DMARxHalfCplt:
 1773              	.LFB171:
3383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1774              		.loc 1 3383 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 0
 1777              		@ frame_needed = 0, uses_anonymous_args = 0
 1778              	.LVL135:
3383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1779              		.loc 1 3383 0
 1780 0000 08B5     		push	{r3, lr}
 1781              	.LCFI14:
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 3, -8
 1784              		.cfi_offset 14, -4
 1785              	.LVL136:
3391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1786              		.loc 1 3391 0
 1787 0002 806A     		ldr	r0, [r0, #40]
 1788              	.LVL137:
 1789 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1790              	.LVL138:
 1791 0008 08BD     		pop	{r3, pc}
 1792              		.cfi_endproc
 1793              	.LFE171:
 1795              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1796              		.align	1
 1797              		.weak	HAL_UART_ErrorCallback
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu fpv4-sp-d16
 1803              	HAL_UART_ErrorCallback:
 1804              	.LFB150:
2486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1805              		.loc 1 2486 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 0
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              		@ link register save eliminated.
 1810              	.LVL139:
 1811 0000 7047     		bx	lr
 1812              		.cfi_endproc
 1813              	.LFE150:
 1815              		.section	.text.UART_DMAError,"ax",%progbits
 1816              		.align	1
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	UART_DMAError:
 1823              	.LFB172:
3401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1824              		.loc 1 3401 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWz3gvT.s 			page 105


 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              	.LVL140:
3401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1829              		.loc 1 3401 0
 1830 0000 10B5     		push	{r4, lr}
 1831              	.LCFI15:
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
3402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1835              		.loc 1 3402 0
 1836 0002 846A     		ldr	r4, [r0, #40]
 1837              	.LVL141:
3405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1838              		.loc 1 3405 0
 1839 0004 94F87130 		ldrb	r3, [r4, #113]	@ zero_extendqisi2
 1840 0008 DBB2     		uxtb	r3, r3
 1841 000a 212B     		cmp	r3, #33
 1842 000c 0CD0     		beq	.L144
 1843              	.LVL142:
 1844              	.L141:
3413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1845              		.loc 1 3413 0
 1846 000e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1847 0012 DBB2     		uxtb	r3, r3
 1848 0014 222B     		cmp	r3, #34
 1849 0016 13D0     		beq	.L145
 1850              	.L142:
3420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1851              		.loc 1 3420 0
 1852 0018 636F     		ldr	r3, [r4, #116]
 1853 001a 43F01003 		orr	r3, r3, #16
 1854 001e 6367     		str	r3, [r4, #116]
3427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1855              		.loc 1 3427 0
 1856 0020 2046     		mov	r0, r4
 1857 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1858              	.LVL143:
 1859 0026 10BD     		pop	{r4, pc}
 1860              	.LVL144:
 1861              	.L144:
3406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1862              		.loc 1 3406 0
 1863 0028 2368     		ldr	r3, [r4]
 1864 002a 9B68     		ldr	r3, [r3, #8]
 1865 002c 13F0800F 		tst	r3, #128
 1866 0030 EDD0     		beq	.L141
3408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1867              		.loc 1 3408 0
 1868 0032 0023     		movs	r3, #0
 1869 0034 A4F85230 		strh	r3, [r4, #82]	@ movhi
3409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1870              		.loc 1 3409 0
 1871 0038 2046     		mov	r0, r4
 1872              	.LVL145:
 1873 003a FFF7FEFF 		bl	UART_EndTxTransfer
 1874              	.LVL146:
ARM GAS  /tmp/ccWz3gvT.s 			page 106


 1875 003e E6E7     		b	.L141
 1876              	.L145:
3414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1877              		.loc 1 3414 0
 1878 0040 2368     		ldr	r3, [r4]
 1879 0042 9B68     		ldr	r3, [r3, #8]
 1880 0044 13F0400F 		tst	r3, #64
 1881 0048 E6D0     		beq	.L142
3416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1882              		.loc 1 3416 0
 1883 004a 0023     		movs	r3, #0
 1884 004c A4F85A30 		strh	r3, [r4, #90]	@ movhi
3417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1885              		.loc 1 3417 0
 1886 0050 2046     		mov	r0, r4
 1887 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 1888              	.LVL147:
 1889 0056 DFE7     		b	.L142
 1890              		.cfi_endproc
 1891              	.LFE172:
 1893              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1894              		.align	1
 1895              		.global	HAL_UART_IRQHandler
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu fpv4-sp-d16
 1901              	HAL_UART_IRQHandler:
 1902              	.LFB145:
2179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1903              		.loc 1 2179 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              	.LVL148:
 1908 0000 38B5     		push	{r3, r4, r5, lr}
 1909              	.LCFI16:
 1910              		.cfi_def_cfa_offset 16
 1911              		.cfi_offset 3, -16
 1912              		.cfi_offset 4, -12
 1913              		.cfi_offset 5, -8
 1914              		.cfi_offset 14, -4
 1915 0002 0446     		mov	r4, r0
2180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1916              		.loc 1 2180 0
 1917 0004 0268     		ldr	r2, [r0]
 1918 0006 D369     		ldr	r3, [r2, #28]
 1919              	.LVL149:
2181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1920              		.loc 1 2181 0
 1921 0008 1168     		ldr	r1, [r2]
 1922              	.LVL150:
2182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
 1923              		.loc 1 2182 0
 1924 000a 9068     		ldr	r0, [r2, #8]
 1925              	.LVL151:
2187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 107


 1926              		.loc 1 2187 0
 1927 000c 13F00F05 		ands	r5, r3, #15
 1928              	.LVL152:
 1929 0010 0CD1     		bne	.L147
2195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
 1930              		.loc 1 2195 0
 1931 0012 13F0200F 		tst	r3, #32
 1932 0016 09D0     		beq	.L147
2196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1933              		.loc 1 2196 0
 1934 0018 11F0200F 		tst	r1, #32
 1935 001c 06D0     		beq	.L147
2199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1936              		.loc 1 2199 0
 1937 001e 236E     		ldr	r3, [r4, #96]
 1938              	.LVL153:
 1939 0020 002B     		cmp	r3, #0
 1940 0022 00F09380 		beq	.L146
2201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 1941              		.loc 1 2201 0
 1942 0026 2046     		mov	r0, r4
 1943              	.LVL154:
 1944 0028 9847     		blx	r3
 1945              	.LVL155:
 1946 002a 38BD     		pop	{r3, r4, r5, pc}
 1947              	.LVL156:
 1948              	.L147:
2213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
 1949              		.loc 1 2213 0
 1950 002c 002D     		cmp	r5, #0
 1951 002e 6FD0     		beq	.L149
2214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 1952              		.loc 1 2214 0
 1953 0030 10F00105 		ands	r5, r0, #1
 1954              	.LVL157:
 1955 0034 02D1     		bne	.L150
2215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1956              		.loc 1 2215 0
 1957 0036 11F4907F 		tst	r1, #288
 1958 003a 69D0     		beq	.L149
 1959              	.L150:
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1960              		.loc 1 2219 0
 1961 003c 13F0010F 		tst	r3, #1
 1962 0040 07D0     		beq	.L151
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1963              		.loc 1 2219 0 is_stmt 0 discriminator 1
 1964 0042 11F4807F 		tst	r1, #256
 1965 0046 04D0     		beq	.L151
2221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1966              		.loc 1 2221 0 is_stmt 1
 1967 0048 0120     		movs	r0, #1
 1968              	.LVL158:
 1969 004a 1062     		str	r0, [r2, #32]
2223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1970              		.loc 1 2223 0
 1971 004c 626F     		ldr	r2, [r4, #116]
ARM GAS  /tmp/ccWz3gvT.s 			page 108


 1972 004e 0243     		orrs	r2, r2, r0
 1973 0050 6267     		str	r2, [r4, #116]
 1974              	.L151:
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1975              		.loc 1 2227 0
 1976 0052 13F0020F 		tst	r3, #2
 1977 0056 07D0     		beq	.L152
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1978              		.loc 1 2227 0 is_stmt 0 discriminator 1
 1979 0058 35B1     		cbz	r5, .L152
2229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1980              		.loc 1 2229 0 is_stmt 1
 1981 005a 2268     		ldr	r2, [r4]
 1982 005c 0220     		movs	r0, #2
 1983 005e 1062     		str	r0, [r2, #32]
2231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1984              		.loc 1 2231 0
 1985 0060 626F     		ldr	r2, [r4, #116]
 1986 0062 42F00402 		orr	r2, r2, #4
 1987 0066 6267     		str	r2, [r4, #116]
 1988              	.L152:
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1989              		.loc 1 2235 0
 1990 0068 13F0040F 		tst	r3, #4
 1991 006c 07D0     		beq	.L153
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1992              		.loc 1 2235 0 is_stmt 0 discriminator 1
 1993 006e 35B1     		cbz	r5, .L153
2237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1994              		.loc 1 2237 0 is_stmt 1
 1995 0070 2268     		ldr	r2, [r4]
 1996 0072 0420     		movs	r0, #4
 1997 0074 1062     		str	r0, [r2, #32]
2239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1998              		.loc 1 2239 0
 1999 0076 626F     		ldr	r2, [r4, #116]
 2000 0078 42F00202 		orr	r2, r2, #2
 2001 007c 6267     		str	r2, [r4, #116]
 2002              	.L153:
2248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
 2003              		.loc 1 2248 0
 2004 007e 13F0080F 		tst	r3, #8
 2005 0082 09D0     		beq	.L154
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2006              		.loc 1 2249 0
 2007 0084 11F0200F 		tst	r1, #32
 2008 0088 00D1     		bne	.L155
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2009              		.loc 1 2249 0 is_stmt 0 discriminator 1
 2010 008a 2DB1     		cbz	r5, .L154
 2011              	.L155:
2253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2012              		.loc 1 2253 0 is_stmt 1
 2013 008c 2268     		ldr	r2, [r4]
 2014 008e 0820     		movs	r0, #8
 2015 0090 1062     		str	r0, [r2, #32]
2255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccWz3gvT.s 			page 109


 2016              		.loc 1 2255 0
 2017 0092 626F     		ldr	r2, [r4, #116]
 2018 0094 0243     		orrs	r2, r2, r0
 2019 0096 6267     		str	r2, [r4, #116]
 2020              	.L154:
2259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2021              		.loc 1 2259 0
 2022 0098 626F     		ldr	r2, [r4, #116]
 2023 009a 002A     		cmp	r2, #0
 2024 009c 56D0     		beq	.L146
2267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2025              		.loc 1 2267 0
 2026 009e 13F0200F 		tst	r3, #32
 2027 00a2 06D0     		beq	.L156
2268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2028              		.loc 1 2268 0
 2029 00a4 11F0200F 		tst	r1, #32
 2030 00a8 03D0     		beq	.L156
2271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2031              		.loc 1 2271 0
 2032 00aa 236E     		ldr	r3, [r4, #96]
 2033              	.LVL159:
 2034 00ac 0BB1     		cbz	r3, .L156
2273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 2035              		.loc 1 2273 0
 2036 00ae 2046     		mov	r0, r4
 2037 00b0 9847     		blx	r3
 2038              	.LVL160:
 2039              	.L156:
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2040              		.loc 1 2279 0
 2041 00b2 636F     		ldr	r3, [r4, #116]
 2042 00b4 13F0080F 		tst	r3, #8
 2043 00b8 04D1     		bne	.L157
2280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2044              		.loc 1 2280 0 discriminator 1
 2045 00ba 2368     		ldr	r3, [r4]
 2046 00bc 9B68     		ldr	r3, [r3, #8]
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2047              		.loc 1 2279 0 discriminator 1
 2048 00be 13F0400F 		tst	r3, #64
 2049 00c2 1FD0     		beq	.L158
 2050              	.L157:
2285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2051              		.loc 1 2285 0
 2052 00c4 2046     		mov	r0, r4
 2053 00c6 FFF7FEFF 		bl	UART_EndRxTransfer
 2054              	.LVL161:
2288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2055              		.loc 1 2288 0
 2056 00ca 2368     		ldr	r3, [r4]
 2057 00cc 9A68     		ldr	r2, [r3, #8]
 2058 00ce 12F0400F 		tst	r2, #64
 2059 00d2 13D0     		beq	.L159
2290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2060              		.loc 1 2290 0
 2061 00d4 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccWz3gvT.s 			page 110


 2062 00d6 22F04002 		bic	r2, r2, #64
 2063 00da 9A60     		str	r2, [r3, #8]
2293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
 2064              		.loc 1 2293 0
 2065 00dc E36E     		ldr	r3, [r4, #108]
 2066 00de 4BB1     		cbz	r3, .L160
2297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2067              		.loc 1 2297 0
 2068 00e0 1D4A     		ldr	r2, .L166
 2069 00e2 9A63     		str	r2, [r3, #56]
2300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
 2070              		.loc 1 2300 0
 2071 00e4 E06E     		ldr	r0, [r4, #108]
 2072 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2073              	.LVL162:
 2074 00ea 78B3     		cbz	r0, .L146
2303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
 2075              		.loc 1 2303 0
 2076 00ec E06E     		ldr	r0, [r4, #108]
 2077 00ee 836B     		ldr	r3, [r0, #56]
 2078 00f0 9847     		blx	r3
 2079              	.LVL163:
 2080 00f2 38BD     		pop	{r3, r4, r5, pc}
 2081              	.LVL164:
 2082              	.L160:
2314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2083              		.loc 1 2314 0
 2084 00f4 2046     		mov	r0, r4
 2085 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2086              	.LVL165:
 2087 00fa 38BD     		pop	{r3, r4, r5, pc}
 2088              	.LVL166:
 2089              	.L159:
2327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2090              		.loc 1 2327 0
 2091 00fc 2046     		mov	r0, r4
 2092 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2093              	.LVL167:
 2094 0102 38BD     		pop	{r3, r4, r5, pc}
 2095              	.LVL168:
 2096              	.L158:
2340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2097              		.loc 1 2340 0
 2098 0104 2046     		mov	r0, r4
 2099 0106 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2100              	.LVL169:
2342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2101              		.loc 1 2342 0
 2102 010a 0023     		movs	r3, #0
 2103 010c 6367     		str	r3, [r4, #116]
 2104 010e 38BD     		pop	{r3, r4, r5, pc}
 2105              	.LVL170:
 2106              	.L149:
2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2107              		.loc 1 2350 0
 2108 0110 13F4801F 		tst	r3, #1048576
 2109 0114 02D0     		beq	.L161
ARM GAS  /tmp/ccWz3gvT.s 			page 111


2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2110              		.loc 1 2350 0 is_stmt 0 discriminator 1
 2111 0116 10F4800F 		tst	r0, #4194304
 2112 011a 0AD1     		bne	.L164
 2113              	.L161:
2373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
 2114              		.loc 1 2373 0 is_stmt 1
 2115 011c 13F0800F 		tst	r3, #128
 2116 0120 0ED0     		beq	.L162
2374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2117              		.loc 1 2374 0
 2118 0122 11F0800F 		tst	r1, #128
 2119 0126 0BD0     		beq	.L162
2377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2120              		.loc 1 2377 0
 2121 0128 636E     		ldr	r3, [r4, #100]
 2122              	.LVL171:
 2123 012a 7BB1     		cbz	r3, .L146
2379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2124              		.loc 1 2379 0
 2125 012c 2046     		mov	r0, r4
 2126              	.LVL172:
 2127 012e 9847     		blx	r3
 2128              	.LVL173:
 2129 0130 38BD     		pop	{r3, r4, r5, pc}
 2130              	.LVL174:
 2131              	.L164:
2352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2132              		.loc 1 2352 0
 2133 0132 4FF48013 		mov	r3, #1048576
 2134              	.LVL175:
 2135 0136 1362     		str	r3, [r2, #32]
2362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2136              		.loc 1 2362 0
 2137 0138 2046     		mov	r0, r4
 2138              	.LVL176:
 2139 013a FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2140              	.LVL177:
2364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2141              		.loc 1 2364 0
 2142 013e 38BD     		pop	{r3, r4, r5, pc}
 2143              	.LVL178:
 2144              	.L162:
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2145              		.loc 1 2385 0
 2146 0140 13F0400F 		tst	r3, #64
 2147 0144 02D0     		beq	.L146
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2148              		.loc 1 2385 0 is_stmt 0 discriminator 1
 2149 0146 11F0400F 		tst	r1, #64
 2150 014a 00D1     		bne	.L165
 2151              	.LVL179:
 2152              	.L146:
 2153 014c 38BD     		pop	{r3, r4, r5, pc}
 2154              	.LVL180:
 2155              	.L165:
2387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
ARM GAS  /tmp/ccWz3gvT.s 			page 112


 2156              		.loc 1 2387 0 is_stmt 1
 2157 014e 2046     		mov	r0, r4
 2158              	.LVL181:
 2159 0150 FFF7FEFF 		bl	UART_EndTransmit_IT
 2160              	.LVL182:
2388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2161              		.loc 1 2388 0
 2162 0154 FAE7     		b	.L146
 2163              	.L167:
 2164 0156 00BF     		.align	2
 2165              	.L166:
 2166 0158 00000000 		.word	UART_DMAAbortOnError
 2167              		.cfi_endproc
 2168              	.LFE145:
 2170              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2171              		.align	1
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2175              		.fpu fpv4-sp-d16
 2177              	UART_DMAAbortOnError:
 2178              	.LFB173:
3438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2179              		.loc 1 3438 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL183:
 2184 0000 08B5     		push	{r3, lr}
 2185              	.LCFI17:
 2186              		.cfi_def_cfa_offset 8
 2187              		.cfi_offset 3, -8
 2188              		.cfi_offset 14, -4
3439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2189              		.loc 1 3439 0
 2190 0002 806A     		ldr	r0, [r0, #40]
 2191              	.LVL184:
3440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2192              		.loc 1 3440 0
 2193 0004 0023     		movs	r3, #0
 2194 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2195              		.loc 1 3441 0
 2196 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2197              		.loc 1 3448 0
 2198 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2199              	.LVL185:
 2200 0012 08BD     		pop	{r3, pc}
 2201              		.cfi_endproc
 2202              	.LFE173:
 2204              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2205              		.align	1
 2206              		.weak	HAL_UART_AbortCpltCallback
 2207              		.syntax unified
 2208              		.thumb
 2209              		.thumb_func
ARM GAS  /tmp/ccWz3gvT.s 			page 113


 2210              		.fpu fpv4-sp-d16
 2212              	HAL_UART_AbortCpltCallback:
 2213              	.LFB151:
2501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2214              		.loc 1 2501 0
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 0, uses_anonymous_args = 0
 2218              		@ link register save eliminated.
 2219              	.LVL186:
 2220 0000 7047     		bx	lr
 2221              		.cfi_endproc
 2222              	.LFE151:
 2224              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2225              		.align	1
 2226              		.global	HAL_UART_Abort_IT
 2227              		.syntax unified
 2228              		.thumb
 2229              		.thumb_func
 2230              		.fpu fpv4-sp-d16
 2232              	HAL_UART_Abort_IT:
 2233              	.LFB142:
1843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2234              		.loc 1 1843 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              	.LVL187:
1843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2239              		.loc 1 1843 0
 2240 0000 10B5     		push	{r4, lr}
 2241              	.LCFI18:
 2242              		.cfi_def_cfa_offset 8
 2243              		.cfi_offset 4, -8
 2244              		.cfi_offset 14, -4
 2245 0002 0446     		mov	r4, r0
 2246              	.LVL188:
1851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2247              		.loc 1 1851 0
 2248 0004 0268     		ldr	r2, [r0]
 2249 0006 1368     		ldr	r3, [r2]
 2250 0008 23F4F073 		bic	r3, r3, #480
 2251 000c 1360     		str	r3, [r2]
1852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2252              		.loc 1 1852 0
 2253 000e 0268     		ldr	r2, [r0]
 2254 0010 9368     		ldr	r3, [r2, #8]
 2255 0012 23F00103 		bic	r3, r3, #1
 2256 0016 9360     		str	r3, [r2, #8]
1858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2257              		.loc 1 1858 0
 2258 0018 836E     		ldr	r3, [r0, #104]
 2259 001a 33B1     		cbz	r3, .L172
1862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2260              		.loc 1 1862 0
 2261 001c 0268     		ldr	r2, [r0]
 2262 001e 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccWz3gvT.s 			page 114


 2263 0020 12F0800F 		tst	r2, #128
 2264 0024 1DD0     		beq	.L173
1864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2265              		.loc 1 1864 0
 2266 0026 2D4A     		ldr	r2, .L185
 2267 0028 9A63     		str	r2, [r3, #56]
 2268              	.L172:
1872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2269              		.loc 1 1872 0
 2270 002a E36E     		ldr	r3, [r4, #108]
 2271 002c 33B1     		cbz	r3, .L174
1876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2272              		.loc 1 1876 0
 2273 002e 2268     		ldr	r2, [r4]
 2274 0030 9268     		ldr	r2, [r2, #8]
 2275 0032 12F0400F 		tst	r2, #64
 2276 0036 17D0     		beq	.L175
1878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2277              		.loc 1 1878 0
 2278 0038 294A     		ldr	r2, .L185+4
 2279 003a 9A63     		str	r2, [r3, #56]
 2280              	.L174:
1887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2281              		.loc 1 1887 0
 2282 003c 2368     		ldr	r3, [r4]
 2283 003e 9A68     		ldr	r2, [r3, #8]
 2284 0040 12F0800F 		tst	r2, #128
 2285 0044 13D0     		beq	.L179
1890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2286              		.loc 1 1890 0
 2287 0046 9A68     		ldr	r2, [r3, #8]
 2288 0048 22F08002 		bic	r2, r2, #128
 2289 004c 9A60     		str	r2, [r3, #8]
1893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2290              		.loc 1 1893 0
 2291 004e A06E     		ldr	r0, [r4, #104]
 2292              	.LVL189:
 2293 0050 18B3     		cbz	r0, .L180
1899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2294              		.loc 1 1899 0
 2295 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2296              	.LVL190:
 2297 0056 10B3     		cbz	r0, .L181
1901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2298              		.loc 1 1901 0
 2299 0058 A36E     		ldr	r3, [r4, #104]
 2300 005a 0022     		movs	r2, #0
 2301 005c 9A63     		str	r2, [r3, #56]
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2302              		.loc 1 1844 0
 2303 005e 0122     		movs	r2, #1
 2304 0060 06E0     		b	.L176
 2305              	.LVL191:
 2306              	.L173:
1868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2307              		.loc 1 1868 0
 2308 0062 0022     		movs	r2, #0
ARM GAS  /tmp/ccWz3gvT.s 			page 115


 2309 0064 9A63     		str	r2, [r3, #56]
 2310 0066 E0E7     		b	.L172
 2311              	.L175:
1882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2312              		.loc 1 1882 0
 2313 0068 0022     		movs	r2, #0
 2314 006a 9A63     		str	r2, [r3, #56]
 2315 006c E6E7     		b	.L174
 2316              	.L179:
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2317              		.loc 1 1844 0
 2318 006e 0122     		movs	r2, #1
 2319              	.LVL192:
 2320              	.L176:
1911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2321              		.loc 1 1911 0
 2322 0070 2368     		ldr	r3, [r4]
 2323 0072 9968     		ldr	r1, [r3, #8]
 2324 0074 11F0400F 		tst	r1, #64
 2325 0078 0CD0     		beq	.L177
1913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2326              		.loc 1 1913 0
 2327 007a 9968     		ldr	r1, [r3, #8]
 2328 007c 21F04001 		bic	r1, r1, #64
 2329 0080 9960     		str	r1, [r3, #8]
1916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2330              		.loc 1 1916 0
 2331 0082 E06E     		ldr	r0, [r4, #108]
 2332 0084 30B1     		cbz	r0, .L177
1922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2333              		.loc 1 1922 0
 2334 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2335              	.LVL193:
 2336 008a 50B1     		cbz	r0, .L182
1924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2337              		.loc 1 1924 0
 2338 008c E36E     		ldr	r3, [r4, #108]
 2339 008e 0022     		movs	r2, #0
 2340 0090 9A63     		str	r2, [r3, #56]
 2341              	.LVL194:
1925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2342              		.loc 1 1925 0
 2343 0092 0122     		movs	r2, #1
 2344              	.LVL195:
 2345              	.L177:
1935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2346              		.loc 1 1935 0
 2347 0094 3AB9     		cbnz	r2, .L184
 2348              	.LVL196:
 2349              	.L178:
1977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2350              		.loc 1 1977 0
 2351 0096 0020     		movs	r0, #0
 2352 0098 10BD     		pop	{r4, pc}
 2353              	.LVL197:
 2354              	.L180:
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 116


 2355              		.loc 1 1844 0
 2356 009a 0122     		movs	r2, #1
 2357 009c E8E7     		b	.L176
 2358              	.L181:
1905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2359              		.loc 1 1905 0
 2360 009e 0022     		movs	r2, #0
 2361 00a0 E6E7     		b	.L176
 2362              	.LVL198:
 2363              	.L182:
1929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2364              		.loc 1 1929 0
 2365 00a2 0022     		movs	r2, #0
 2366 00a4 F6E7     		b	.L177
 2367              	.LVL199:
 2368              	.L184:
1938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2369              		.loc 1 1938 0
 2370 00a6 0023     		movs	r3, #0
 2371 00a8 A4F85230 		strh	r3, [r4, #82]	@ movhi
1939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2372              		.loc 1 1939 0
 2373 00ac A4F85A30 		strh	r3, [r4, #90]	@ movhi
1942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2374              		.loc 1 1942 0
 2375 00b0 2366     		str	r3, [r4, #96]
1943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2376              		.loc 1 1943 0
 2377 00b2 6366     		str	r3, [r4, #100]
1946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2378              		.loc 1 1946 0
 2379 00b4 6367     		str	r3, [r4, #116]
1949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2380              		.loc 1 1949 0
 2381 00b6 2368     		ldr	r3, [r4]
 2382 00b8 0F22     		movs	r2, #15
 2383              	.LVL200:
 2384 00ba 1A62     		str	r2, [r3, #32]
1960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2385              		.loc 1 1960 0
 2386 00bc 2268     		ldr	r2, [r4]
 2387 00be 138B     		ldrh	r3, [r2, #24]
 2388 00c0 9BB2     		uxth	r3, r3
 2389 00c2 43F00803 		orr	r3, r3, #8
 2390 00c6 1383     		strh	r3, [r2, #24]	@ movhi
1963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2391              		.loc 1 1963 0
 2392 00c8 2023     		movs	r3, #32
 2393 00ca 84F87130 		strb	r3, [r4, #113]
1964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2394              		.loc 1 1964 0
 2395 00ce 84F87230 		strb	r3, [r4, #114]
1972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2396              		.loc 1 1972 0
 2397 00d2 2046     		mov	r0, r4
 2398 00d4 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2399              	.LVL201:
ARM GAS  /tmp/ccWz3gvT.s 			page 117


 2400 00d8 DDE7     		b	.L178
 2401              	.L186:
 2402 00da 00BF     		.align	2
 2403              	.L185:
 2404 00dc 00000000 		.word	UART_DMATxAbortCallback
 2405 00e0 00000000 		.word	UART_DMARxAbortCallback
 2406              		.cfi_endproc
 2407              	.LFE142:
 2409              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2410              		.align	1
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2414              		.fpu fpv4-sp-d16
 2416              	UART_DMARxAbortCallback:
 2417              	.LFB175:
3517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2418              		.loc 1 3517 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              	.LVL202:
 2423 0000 08B5     		push	{r3, lr}
 2424              	.LCFI19:
 2425              		.cfi_def_cfa_offset 8
 2426              		.cfi_offset 3, -8
 2427              		.cfi_offset 14, -4
3518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2428              		.loc 1 3518 0
 2429 0002 806A     		ldr	r0, [r0, #40]
 2430              	.LVL203:
3520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2431              		.loc 1 3520 0
 2432 0004 C36E     		ldr	r3, [r0, #108]
 2433 0006 0022     		movs	r2, #0
 2434 0008 9A63     		str	r2, [r3, #56]
3523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2435              		.loc 1 3523 0
 2436 000a 836E     		ldr	r3, [r0, #104]
 2437 000c 13B1     		cbz	r3, .L188
3525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2438              		.loc 1 3525 0
 2439 000e 9B6B     		ldr	r3, [r3, #56]
 2440 0010 03B1     		cbz	r3, .L188
 2441              	.LVL204:
 2442              	.L187:
 2443 0012 08BD     		pop	{r3, pc}
 2444              	.LVL205:
 2445              	.L188:
3532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2446              		.loc 1 3532 0
 2447 0014 0023     		movs	r3, #0
 2448 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2449              		.loc 1 3533 0
 2450 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 118


 2451              		.loc 1 3536 0
 2452 001e 4367     		str	r3, [r0, #116]
3539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2453              		.loc 1 3539 0
 2454 0020 0368     		ldr	r3, [r0]
 2455 0022 0F22     		movs	r2, #15
 2456 0024 1A62     		str	r2, [r3, #32]
3542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2457              		.loc 1 3542 0
 2458 0026 0268     		ldr	r2, [r0]
 2459 0028 138B     		ldrh	r3, [r2, #24]
 2460 002a 9BB2     		uxth	r3, r3
 2461 002c 43F00803 		orr	r3, r3, #8
 2462 0030 1383     		strh	r3, [r2, #24]	@ movhi
3545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2463              		.loc 1 3545 0
 2464 0032 2023     		movs	r3, #32
 2465 0034 80F87130 		strb	r3, [r0, #113]
3546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2466              		.loc 1 3546 0
 2467 0038 80F87230 		strb	r3, [r0, #114]
3554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2468              		.loc 1 3554 0
 2469 003c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2470              	.LVL206:
 2471 0040 E7E7     		b	.L187
 2472              		.cfi_endproc
 2473              	.LFE175:
 2475              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2476              		.align	1
 2477              		.syntax unified
 2478              		.thumb
 2479              		.thumb_func
 2480              		.fpu fpv4-sp-d16
 2482              	UART_DMATxAbortCallback:
 2483              	.LFB174:
3461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2484              		.loc 1 3461 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 0
 2487              		@ frame_needed = 0, uses_anonymous_args = 0
 2488              	.LVL207:
 2489 0000 08B5     		push	{r3, lr}
 2490              	.LCFI20:
 2491              		.cfi_def_cfa_offset 8
 2492              		.cfi_offset 3, -8
 2493              		.cfi_offset 14, -4
3462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2494              		.loc 1 3462 0
 2495 0002 806A     		ldr	r0, [r0, #40]
 2496              	.LVL208:
3464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2497              		.loc 1 3464 0
 2498 0004 836E     		ldr	r3, [r0, #104]
 2499 0006 0022     		movs	r2, #0
 2500 0008 9A63     		str	r2, [r3, #56]
3467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccWz3gvT.s 			page 119


 2501              		.loc 1 3467 0
 2502 000a C36E     		ldr	r3, [r0, #108]
 2503 000c 13B1     		cbz	r3, .L192
3469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2504              		.loc 1 3469 0
 2505 000e 9B6B     		ldr	r3, [r3, #56]
 2506 0010 03B1     		cbz	r3, .L192
 2507              	.LVL209:
 2508              	.L191:
 2509 0012 08BD     		pop	{r3, pc}
 2510              	.LVL210:
 2511              	.L192:
3476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2512              		.loc 1 3476 0
 2513 0014 0023     		movs	r3, #0
 2514 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2515              		.loc 1 3477 0
 2516 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2517              		.loc 1 3480 0
 2518 001e 4367     		str	r3, [r0, #116]
3483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2519              		.loc 1 3483 0
 2520 0020 0368     		ldr	r3, [r0]
 2521 0022 0F22     		movs	r2, #15
 2522 0024 1A62     		str	r2, [r3, #32]
3494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2523              		.loc 1 3494 0
 2524 0026 2023     		movs	r3, #32
 2525 0028 80F87130 		strb	r3, [r0, #113]
3495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2526              		.loc 1 3495 0
 2527 002c 80F87230 		strb	r3, [r0, #114]
3503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2528              		.loc 1 3503 0
 2529 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2530              	.LVL211:
 2531 0034 EDE7     		b	.L191
 2532              		.cfi_endproc
 2533              	.LFE174:
 2535              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2536              		.align	1
 2537              		.weak	HAL_UART_AbortTransmitCpltCallback
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2541              		.fpu fpv4-sp-d16
 2543              	HAL_UART_AbortTransmitCpltCallback:
 2544              	.LFB152:
2516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2545              		.loc 1 2516 0
 2546              		.cfi_startproc
 2547              		@ args = 0, pretend = 0, frame = 0
 2548              		@ frame_needed = 0, uses_anonymous_args = 0
 2549              		@ link register save eliminated.
 2550              	.LVL212:
ARM GAS  /tmp/ccWz3gvT.s 			page 120


 2551 0000 7047     		bx	lr
 2552              		.cfi_endproc
 2553              	.LFE152:
 2555              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2556              		.align	1
 2557              		.global	HAL_UART_AbortTransmit_IT
 2558              		.syntax unified
 2559              		.thumb
 2560              		.thumb_func
 2561              		.fpu fpv4-sp-d16
 2563              	HAL_UART_AbortTransmit_IT:
 2564              	.LFB143:
1994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2565              		.loc 1 1994 0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
 2569              	.LVL213:
1994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2570              		.loc 1 1994 0
 2571 0000 10B5     		push	{r4, lr}
 2572              	.LCFI21:
 2573              		.cfi_def_cfa_offset 8
 2574              		.cfi_offset 4, -8
 2575              		.cfi_offset 14, -4
 2576 0002 0446     		mov	r4, r0
2000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2577              		.loc 1 2000 0
 2578 0004 0268     		ldr	r2, [r0]
 2579 0006 1368     		ldr	r3, [r2]
 2580 0008 23F0C003 		bic	r3, r3, #192
 2581 000c 1360     		str	r3, [r2]
2004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2582              		.loc 1 2004 0
 2583 000e 0368     		ldr	r3, [r0]
 2584 0010 9A68     		ldr	r2, [r3, #8]
 2585 0012 12F0800F 		tst	r2, #128
 2586 0016 1BD0     		beq	.L197
2006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2587              		.loc 1 2006 0
 2588 0018 9A68     		ldr	r2, [r3, #8]
 2589 001a 22F08002 		bic	r2, r2, #128
 2590 001e 9A60     		str	r2, [r3, #8]
2009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2591              		.loc 1 2009 0
 2592 0020 836E     		ldr	r3, [r0, #104]
 2593 0022 5BB1     		cbz	r3, .L198
2013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2594              		.loc 1 2013 0
 2595 0024 0F4A     		ldr	r2, .L202
 2596 0026 9A63     		str	r2, [r3, #56]
2016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2597              		.loc 1 2016 0
 2598 0028 806E     		ldr	r0, [r0, #104]
 2599              	.LVL214:
 2600 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2601              	.LVL215:
ARM GAS  /tmp/ccWz3gvT.s 			page 121


 2602 002e 08B9     		cbnz	r0, .L201
 2603              	.L199:
2073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2604              		.loc 1 2073 0
 2605 0030 0020     		movs	r0, #0
 2606 0032 10BD     		pop	{r4, pc}
 2607              	.LVL216:
 2608              	.L201:
2019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2609              		.loc 1 2019 0
 2610 0034 A06E     		ldr	r0, [r4, #104]
 2611 0036 836B     		ldr	r3, [r0, #56]
 2612 0038 9847     		blx	r3
 2613              	.LVL217:
 2614 003a F9E7     		b	.L199
 2615              	.LVL218:
 2616              	.L198:
2025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2617              		.loc 1 2025 0
 2618 003c 0023     		movs	r3, #0
 2619 003e A0F85230 		strh	r3, [r0, #82]	@ movhi
2028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2620              		.loc 1 2028 0
 2621 0042 4366     		str	r3, [r0, #100]
2031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2622              		.loc 1 2031 0
 2623 0044 2023     		movs	r3, #32
 2624 0046 80F87130 		strb	r3, [r0, #113]
2039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2625              		.loc 1 2039 0
 2626 004a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2627              	.LVL219:
 2628 004e EFE7     		b	.L199
 2629              	.LVL220:
 2630              	.L197:
2046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2631              		.loc 1 2046 0
 2632 0050 0023     		movs	r3, #0
 2633 0052 A0F85230 		strh	r3, [r0, #82]	@ movhi
2049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2634              		.loc 1 2049 0
 2635 0056 4366     		str	r3, [r0, #100]
2060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2636              		.loc 1 2060 0
 2637 0058 2023     		movs	r3, #32
 2638 005a 80F87130 		strb	r3, [r0, #113]
2068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2639              		.loc 1 2068 0
 2640 005e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2641              	.LVL221:
 2642 0062 E5E7     		b	.L199
 2643              	.L203:
 2644              		.align	2
 2645              	.L202:
 2646 0064 00000000 		.word	UART_DMATxOnlyAbortCallback
 2647              		.cfi_endproc
 2648              	.LFE143:
ARM GAS  /tmp/ccWz3gvT.s 			page 122


 2650              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2651              		.align	1
 2652              		.syntax unified
 2653              		.thumb
 2654              		.thumb_func
 2655              		.fpu fpv4-sp-d16
 2657              	UART_DMATxOnlyAbortCallback:
 2658              	.LFB176:
3568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2659              		.loc 1 3568 0
 2660              		.cfi_startproc
 2661              		@ args = 0, pretend = 0, frame = 0
 2662              		@ frame_needed = 0, uses_anonymous_args = 0
 2663              	.LVL222:
 2664 0000 08B5     		push	{r3, lr}
 2665              	.LCFI22:
 2666              		.cfi_def_cfa_offset 8
 2667              		.cfi_offset 3, -8
 2668              		.cfi_offset 14, -4
3569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2669              		.loc 1 3569 0
 2670 0002 806A     		ldr	r0, [r0, #40]
 2671              	.LVL223:
3571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2672              		.loc 1 3571 0
 2673 0004 0023     		movs	r3, #0
 2674 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2675              		.loc 1 3582 0
 2676 000a 2023     		movs	r3, #32
 2677 000c 80F87130 		strb	r3, [r0, #113]
3590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2678              		.loc 1 3590 0
 2679 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2680              	.LVL224:
 2681 0014 08BD     		pop	{r3, pc}
 2682              		.cfi_endproc
 2683              	.LFE176:
 2685              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2686              		.align	1
 2687              		.weak	HAL_UART_AbortReceiveCpltCallback
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2691              		.fpu fpv4-sp-d16
 2693              	HAL_UART_AbortReceiveCpltCallback:
 2694              	.LFB153:
2531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2695              		.loc 1 2531 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
 2699              		@ link register save eliminated.
 2700              	.LVL225:
 2701 0000 7047     		bx	lr
 2702              		.cfi_endproc
 2703              	.LFE153:
ARM GAS  /tmp/ccWz3gvT.s 			page 123


 2705              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2706              		.align	1
 2707              		.global	HAL_UART_AbortReceive_IT
 2708              		.syntax unified
 2709              		.thumb
 2710              		.thumb_func
 2711              		.fpu fpv4-sp-d16
 2713              	HAL_UART_AbortReceive_IT:
 2714              	.LFB144:
2090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2715              		.loc 1 2090 0
 2716              		.cfi_startproc
 2717              		@ args = 0, pretend = 0, frame = 0
 2718              		@ frame_needed = 0, uses_anonymous_args = 0
 2719              	.LVL226:
2090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2720              		.loc 1 2090 0
 2721 0000 10B5     		push	{r4, lr}
 2722              	.LCFI23:
 2723              		.cfi_def_cfa_offset 8
 2724              		.cfi_offset 4, -8
 2725              		.cfi_offset 14, -4
 2726 0002 0446     		mov	r4, r0
2096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2727              		.loc 1 2096 0
 2728 0004 0268     		ldr	r2, [r0]
 2729 0006 1368     		ldr	r3, [r2]
 2730 0008 23F49073 		bic	r3, r3, #288
 2731 000c 1360     		str	r3, [r2]
2097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2732              		.loc 1 2097 0
 2733 000e 0268     		ldr	r2, [r0]
 2734 0010 9368     		ldr	r3, [r2, #8]
 2735 0012 23F00103 		bic	r3, r3, #1
 2736 0016 9360     		str	r3, [r2, #8]
2101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2737              		.loc 1 2101 0
 2738 0018 0368     		ldr	r3, [r0]
 2739 001a 9A68     		ldr	r2, [r3, #8]
 2740 001c 12F0400F 		tst	r2, #64
 2741 0020 24D0     		beq	.L208
2103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2742              		.loc 1 2103 0
 2743 0022 9A68     		ldr	r2, [r3, #8]
 2744 0024 22F04002 		bic	r2, r2, #64
 2745 0028 9A60     		str	r2, [r3, #8]
2106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2746              		.loc 1 2106 0
 2747 002a C36E     		ldr	r3, [r0, #108]
 2748 002c 5BB1     		cbz	r3, .L209
2110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2749              		.loc 1 2110 0
 2750 002e 154A     		ldr	r2, .L213
 2751 0030 9A63     		str	r2, [r3, #56]
2113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2752              		.loc 1 2113 0
 2753 0032 C06E     		ldr	r0, [r0, #108]
ARM GAS  /tmp/ccWz3gvT.s 			page 124


 2754              	.LVL227:
 2755 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2756              	.LVL228:
 2757 0038 08B9     		cbnz	r0, .L212
 2758              	.L210:
2171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2759              		.loc 1 2171 0
 2760 003a 0020     		movs	r0, #0
 2761 003c 10BD     		pop	{r4, pc}
 2762              	.LVL229:
 2763              	.L212:
2116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2764              		.loc 1 2116 0
 2765 003e E06E     		ldr	r0, [r4, #108]
 2766 0040 836B     		ldr	r3, [r0, #56]
 2767 0042 9847     		blx	r3
 2768              	.LVL230:
 2769 0044 F9E7     		b	.L210
 2770              	.LVL231:
 2771              	.L209:
2122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2772              		.loc 1 2122 0
 2773 0046 0023     		movs	r3, #0
 2774 0048 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2775              		.loc 1 2125 0
 2776 004c 4365     		str	r3, [r0, #84]
2128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2777              		.loc 1 2128 0
 2778 004e 0368     		ldr	r3, [r0]
 2779 0050 0F22     		movs	r2, #15
 2780 0052 1A62     		str	r2, [r3, #32]
2131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2781              		.loc 1 2131 0
 2782 0054 0268     		ldr	r2, [r0]
 2783 0056 138B     		ldrh	r3, [r2, #24]
 2784 0058 9BB2     		uxth	r3, r3
 2785 005a 43F00803 		orr	r3, r3, #8
 2786 005e 1383     		strh	r3, [r2, #24]	@ movhi
2134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2787              		.loc 1 2134 0
 2788 0060 2023     		movs	r3, #32
 2789 0062 80F87230 		strb	r3, [r0, #114]
2142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2790              		.loc 1 2142 0
 2791 0066 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2792              	.LVL232:
 2793 006a E6E7     		b	.L210
 2794              	.LVL233:
 2795              	.L208:
2149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2796              		.loc 1 2149 0
 2797 006c 0022     		movs	r2, #0
 2798 006e A0F85A20 		strh	r2, [r0, #90]	@ movhi
2152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2799              		.loc 1 2152 0
 2800 0072 4265     		str	r2, [r0, #84]
ARM GAS  /tmp/ccWz3gvT.s 			page 125


2155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2801              		.loc 1 2155 0
 2802 0074 0F22     		movs	r2, #15
 2803 0076 1A62     		str	r2, [r3, #32]
2158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2804              		.loc 1 2158 0
 2805 0078 2023     		movs	r3, #32
 2806 007a 80F87230 		strb	r3, [r0, #114]
2166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2807              		.loc 1 2166 0
 2808 007e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2809              	.LVL234:
 2810 0082 DAE7     		b	.L210
 2811              	.L214:
 2812              		.align	2
 2813              	.L213:
 2814 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 2815              		.cfi_endproc
 2816              	.LFE144:
 2818              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2819              		.align	1
 2820              		.syntax unified
 2821              		.thumb
 2822              		.thumb_func
 2823              		.fpu fpv4-sp-d16
 2825              	UART_DMARxOnlyAbortCallback:
 2826              	.LFB177:
3603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2827              		.loc 1 3603 0
 2828              		.cfi_startproc
 2829              		@ args = 0, pretend = 0, frame = 0
 2830              		@ frame_needed = 0, uses_anonymous_args = 0
 2831              	.LVL235:
 2832 0000 08B5     		push	{r3, lr}
 2833              	.LCFI24:
 2834              		.cfi_def_cfa_offset 8
 2835              		.cfi_offset 3, -8
 2836              		.cfi_offset 14, -4
3604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2837              		.loc 1 3604 0
 2838 0002 806A     		ldr	r0, [r0, #40]
 2839              	.LVL236:
3606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2840              		.loc 1 3606 0
 2841 0004 0023     		movs	r3, #0
 2842 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2843              		.loc 1 3609 0
 2844 000a 0368     		ldr	r3, [r0]
 2845 000c 0F22     		movs	r2, #15
 2846 000e 1A62     		str	r2, [r3, #32]
3612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2847              		.loc 1 3612 0
 2848 0010 0268     		ldr	r2, [r0]
 2849 0012 138B     		ldrh	r3, [r2, #24]
 2850 0014 9BB2     		uxth	r3, r3
 2851 0016 43F00803 		orr	r3, r3, #8
ARM GAS  /tmp/ccWz3gvT.s 			page 126


 2852 001a 1383     		strh	r3, [r2, #24]	@ movhi
3615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2853              		.loc 1 3615 0
 2854 001c 2023     		movs	r3, #32
 2855 001e 80F87230 		strb	r3, [r0, #114]
3623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2856              		.loc 1 3623 0
 2857 0022 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2858              	.LVL237:
 2859 0026 08BD     		pop	{r3, pc}
 2860              		.cfi_endproc
 2861              	.LFE177:
 2863              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2864              		.align	1
 2865              		.global	HAL_MultiProcessor_EnterMuteMode
 2866              		.syntax unified
 2867              		.thumb
 2868              		.thumb_func
 2869              		.fpu fpv4-sp-d16
 2871              	HAL_MultiProcessor_EnterMuteMode:
 2872              	.LFB156:
2617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2873              		.loc 1 2617 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              		@ link register save eliminated.
 2878              	.LVL238:
2618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2879              		.loc 1 2618 0
 2880 0000 0268     		ldr	r2, [r0]
 2881 0002 138B     		ldrh	r3, [r2, #24]
 2882 0004 9BB2     		uxth	r3, r3
 2883 0006 43F00403 		orr	r3, r3, #4
 2884 000a 1383     		strh	r3, [r2, #24]	@ movhi
 2885 000c 7047     		bx	lr
 2886              		.cfi_endproc
 2887              	.LFE156:
 2889              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2890              		.align	1
 2891              		.global	HAL_HalfDuplex_EnableTransmitter
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu fpv4-sp-d16
 2897              	HAL_HalfDuplex_EnableTransmitter:
 2898              	.LFB157:
2627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2899              		.loc 1 2627 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              		@ link register save eliminated.
 2904              	.LVL239:
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2905              		.loc 1 2629 0
 2906 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
ARM GAS  /tmp/ccWz3gvT.s 			page 127


 2907 0004 012B     		cmp	r3, #1
 2908 0006 17D0     		beq	.L220
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2909              		.loc 1 2629 0 is_stmt 0 discriminator 2
 2910 0008 0123     		movs	r3, #1
 2911 000a 80F87030 		strb	r3, [r0, #112]
2630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2912              		.loc 1 2630 0 is_stmt 1 discriminator 2
 2913 000e 2423     		movs	r3, #36
 2914 0010 80F87130 		strb	r3, [r0, #113]
2633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2915              		.loc 1 2633 0 discriminator 2
 2916 0014 0268     		ldr	r2, [r0]
 2917 0016 1368     		ldr	r3, [r2]
 2918 0018 23F00C03 		bic	r3, r3, #12
 2919 001c 1360     		str	r3, [r2]
2636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2920              		.loc 1 2636 0 discriminator 2
 2921 001e 0268     		ldr	r2, [r0]
 2922 0020 1368     		ldr	r3, [r2]
 2923 0022 43F00803 		orr	r3, r3, #8
 2924 0026 1360     		str	r3, [r2]
2638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2925              		.loc 1 2638 0 discriminator 2
 2926 0028 2023     		movs	r3, #32
 2927 002a 80F87130 		strb	r3, [r0, #113]
2641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2928              		.loc 1 2641 0 discriminator 2
 2929 002e 0023     		movs	r3, #0
 2930 0030 80F87030 		strb	r3, [r0, #112]
2643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2931              		.loc 1 2643 0 discriminator 2
 2932 0034 1846     		mov	r0, r3
 2933              	.LVL240:
 2934 0036 7047     		bx	lr
 2935              	.LVL241:
 2936              	.L220:
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2937              		.loc 1 2629 0
 2938 0038 0220     		movs	r0, #2
 2939              	.LVL242:
2644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2940              		.loc 1 2644 0
 2941 003a 7047     		bx	lr
 2942              		.cfi_endproc
 2943              	.LFE157:
 2945              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2946              		.align	1
 2947              		.global	HAL_HalfDuplex_EnableReceiver
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	HAL_HalfDuplex_EnableReceiver:
 2954              	.LFB158:
2652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2955              		.loc 1 2652 0
ARM GAS  /tmp/ccWz3gvT.s 			page 128


 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 0
 2958              		@ frame_needed = 0, uses_anonymous_args = 0
 2959              		@ link register save eliminated.
 2960              	.LVL243:
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2961              		.loc 1 2654 0
 2962 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2963 0004 012B     		cmp	r3, #1
 2964 0006 17D0     		beq	.L223
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2965              		.loc 1 2654 0 is_stmt 0 discriminator 2
 2966 0008 0123     		movs	r3, #1
 2967 000a 80F87030 		strb	r3, [r0, #112]
2655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2968              		.loc 1 2655 0 is_stmt 1 discriminator 2
 2969 000e 2423     		movs	r3, #36
 2970 0010 80F87130 		strb	r3, [r0, #113]
2658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2971              		.loc 1 2658 0 discriminator 2
 2972 0014 0268     		ldr	r2, [r0]
 2973 0016 1368     		ldr	r3, [r2]
 2974 0018 23F00C03 		bic	r3, r3, #12
 2975 001c 1360     		str	r3, [r2]
2661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2976              		.loc 1 2661 0 discriminator 2
 2977 001e 0268     		ldr	r2, [r0]
 2978 0020 1368     		ldr	r3, [r2]
 2979 0022 43F00403 		orr	r3, r3, #4
 2980 0026 1360     		str	r3, [r2]
2663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2981              		.loc 1 2663 0 discriminator 2
 2982 0028 2023     		movs	r3, #32
 2983 002a 80F87130 		strb	r3, [r0, #113]
2666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2984              		.loc 1 2666 0 discriminator 2
 2985 002e 0023     		movs	r3, #0
 2986 0030 80F87030 		strb	r3, [r0, #112]
2668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2987              		.loc 1 2668 0 discriminator 2
 2988 0034 1846     		mov	r0, r3
 2989              	.LVL244:
 2990 0036 7047     		bx	lr
 2991              	.LVL245:
 2992              	.L223:
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2993              		.loc 1 2654 0
 2994 0038 0220     		movs	r0, #2
 2995              	.LVL246:
2669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2996              		.loc 1 2669 0
 2997 003a 7047     		bx	lr
 2998              		.cfi_endproc
 2999              	.LFE158:
 3001              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3002              		.align	1
 3003              		.global	HAL_LIN_SendBreak
ARM GAS  /tmp/ccWz3gvT.s 			page 129


 3004              		.syntax unified
 3005              		.thumb
 3006              		.thumb_func
 3007              		.fpu fpv4-sp-d16
 3009              	HAL_LIN_SendBreak:
 3010              	.LFB159:
2678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 3011              		.loc 1 2678 0
 3012              		.cfi_startproc
 3013              		@ args = 0, pretend = 0, frame = 0
 3014              		@ frame_needed = 0, uses_anonymous_args = 0
 3015              		@ link register save eliminated.
 3016              	.LVL247:
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3017              		.loc 1 2683 0
 3018 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3019 0004 012B     		cmp	r3, #1
 3020 0006 13D0     		beq	.L226
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3021              		.loc 1 2683 0 is_stmt 0 discriminator 2
 3022 0008 0123     		movs	r3, #1
 3023 000a 80F87030 		strb	r3, [r0, #112]
2685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3024              		.loc 1 2685 0 is_stmt 1 discriminator 2
 3025 000e 2423     		movs	r3, #36
 3026 0010 80F87130 		strb	r3, [r0, #113]
2688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3027              		.loc 1 2688 0 discriminator 2
 3028 0014 0268     		ldr	r2, [r0]
 3029 0016 138B     		ldrh	r3, [r2, #24]
 3030 0018 9BB2     		uxth	r3, r3
 3031 001a 43F00203 		orr	r3, r3, #2
 3032 001e 1383     		strh	r3, [r2, #24]	@ movhi
2690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3033              		.loc 1 2690 0 discriminator 2
 3034 0020 2023     		movs	r3, #32
 3035 0022 80F87130 		strb	r3, [r0, #113]
2693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3036              		.loc 1 2693 0 discriminator 2
 3037 0026 0023     		movs	r3, #0
 3038 0028 80F87030 		strb	r3, [r0, #112]
2695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3039              		.loc 1 2695 0 discriminator 2
 3040 002c 1846     		mov	r0, r3
 3041              	.LVL248:
 3042 002e 7047     		bx	lr
 3043              	.LVL249:
 3044              	.L226:
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3045              		.loc 1 2683 0
 3046 0030 0220     		movs	r0, #2
 3047              	.LVL250:
2696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3048              		.loc 1 2696 0
 3049 0032 7047     		bx	lr
 3050              		.cfi_endproc
 3051              	.LFE159:
ARM GAS  /tmp/ccWz3gvT.s 			page 130


 3053              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3054              		.align	1
 3055              		.global	HAL_UART_GetState
 3056              		.syntax unified
 3057              		.thumb
 3058              		.thumb_func
 3059              		.fpu fpv4-sp-d16
 3061              	HAL_UART_GetState:
 3062              	.LFB160:
2725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 3063              		.loc 1 2725 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              		@ link register save eliminated.
 3068              	.LVL251:
2727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3069              		.loc 1 2727 0
 3070 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 3071              	.LVL252:
2728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3072              		.loc 1 2728 0
 3073 0004 90F87200 		ldrb	r0, [r0, #114]	@ zero_extendqisi2
 3074              	.LVL253:
2731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3075              		.loc 1 2731 0
 3076 0008 1843     		orrs	r0, r0, r3
 3077              	.LVL254:
 3078 000a 7047     		bx	lr
 3079              		.cfi_endproc
 3080              	.LFE160:
 3082              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3083              		.align	1
 3084              		.global	HAL_UART_GetError
 3085              		.syntax unified
 3086              		.thumb
 3087              		.thumb_func
 3088              		.fpu fpv4-sp-d16
 3090              	HAL_UART_GetError:
 3091              	.LFB161:
2740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 3092              		.loc 1 2740 0
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 0
 3095              		@ frame_needed = 0, uses_anonymous_args = 0
 3096              		@ link register save eliminated.
 3097              	.LVL255:
2741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3098              		.loc 1 2741 0
 3099 0000 406F     		ldr	r0, [r0, #116]
 3100              	.LVL256:
2742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 3101              		.loc 1 2742 0
 3102 0002 7047     		bx	lr
 3103              		.cfi_endproc
 3104              	.LFE161:
 3106              		.global	__aeabi_uldivmod
ARM GAS  /tmp/ccWz3gvT.s 			page 131


 3107              		.section	.text.UART_SetConfig,"ax",%progbits
 3108              		.align	1
 3109              		.global	UART_SetConfig
 3110              		.syntax unified
 3111              		.thumb
 3112              		.thumb_func
 3113              		.fpu fpv4-sp-d16
 3115              	UART_SetConfig:
 3116              	.LFB162:
2787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3117              		.loc 1 2787 0
 3118              		.cfi_startproc
 3119              		@ args = 0, pretend = 0, frame = 0
 3120              		@ frame_needed = 0, uses_anonymous_args = 0
 3121              	.LVL257:
 3122 0000 2DE9784B 		push	{r3, r4, r5, r6, r8, r9, fp, lr}
 3123              	.LCFI25:
 3124              		.cfi_def_cfa_offset 32
 3125              		.cfi_offset 3, -32
 3126              		.cfi_offset 4, -28
 3127              		.cfi_offset 5, -24
 3128              		.cfi_offset 6, -20
 3129              		.cfi_offset 8, -16
 3130              		.cfi_offset 9, -12
 3131              		.cfi_offset 11, -8
 3132              		.cfi_offset 14, -4
 3133 0004 0446     		mov	r4, r0
 3134              	.LVL258:
2798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3135              		.loc 1 2798 0
 3136 0006 0168     		ldr	r1, [r0]
2823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3137              		.loc 1 2823 0
 3138 0008 8368     		ldr	r3, [r0, #8]
 3139 000a 0269     		ldr	r2, [r0, #16]
 3140 000c 1343     		orrs	r3, r3, r2
 3141 000e 4269     		ldr	r2, [r0, #20]
 3142 0010 1343     		orrs	r3, r3, r2
 3143 0012 C269     		ldr	r2, [r0, #28]
 3144 0014 1343     		orrs	r3, r3, r2
 3145              	.LVL259:
2827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3146              		.loc 1 2827 0
 3147 0016 0868     		ldr	r0, [r1]
 3148              	.LVL260:
 3149 0018 9F4A     		ldr	r2, .L325
 3150 001a 0240     		ands	r2, r2, r0
 3151 001c 1343     		orrs	r3, r3, r2
 3152              	.LVL261:
 3153 001e 0B60     		str	r3, [r1]
 3154              	.LVL262:
2832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3155              		.loc 1 2832 0
 3156 0020 2268     		ldr	r2, [r4]
 3157 0022 5368     		ldr	r3, [r2, #4]
 3158 0024 23F44053 		bic	r3, r3, #12288
 3159 0028 E168     		ldr	r1, [r4, #12]
ARM GAS  /tmp/ccWz3gvT.s 			page 132


 3160 002a 0B43     		orrs	r3, r3, r1
 3161 002c 5360     		str	r3, [r2, #4]
2840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3162              		.loc 1 2840 0
 3163 002e A369     		ldr	r3, [r4, #24]
 3164              	.LVL263:
2842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3165              		.loc 1 2842 0
 3166 0030 2268     		ldr	r2, [r4]
 3167 0032 9A49     		ldr	r1, .L325+4
 3168 0034 8A42     		cmp	r2, r1
 3169 0036 01D0     		beq	.L230
2844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3170              		.loc 1 2844 0
 3171 0038 216A     		ldr	r1, [r4, #32]
 3172 003a 0B43     		orrs	r3, r3, r1
 3173              	.LVL264:
 3174              	.L230:
2846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3175              		.loc 1 2846 0
 3176 003c 9168     		ldr	r1, [r2, #8]
 3177 003e 21F43061 		bic	r1, r1, #2816
 3178 0042 0B43     		orrs	r3, r3, r1
 3179              	.LVL265:
 3180 0044 9360     		str	r3, [r2, #8]
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3181              		.loc 1 2856 0
 3182 0046 2368     		ldr	r3, [r4]
 3183 0048 954A     		ldr	r2, .L325+8
 3184 004a 9342     		cmp	r3, r2
 3185 004c 27D0     		beq	.L313
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3186              		.loc 1 2856 0 is_stmt 0 discriminator 2
 3187 004e 954A     		ldr	r2, .L325+12
 3188 0050 9342     		cmp	r3, r2
 3189 0052 38D0     		beq	.L314
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3190              		.loc 1 2856 0 discriminator 9
 3191 0054 944A     		ldr	r2, .L325+16
 3192 0056 9342     		cmp	r3, r2
 3193 0058 4ED0     		beq	.L315
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3194              		.loc 1 2856 0 discriminator 16
 3195 005a 944A     		ldr	r2, .L325+20
 3196 005c 9342     		cmp	r3, r2
 3197 005e 61D0     		beq	.L316
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3198              		.loc 1 2856 0 discriminator 23
 3199 0060 934A     		ldr	r2, .L325+24
 3200 0062 9342     		cmp	r3, r2
 3201 0064 74D0     		beq	.L317
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3202              		.loc 1 2856 0 discriminator 30
 3203 0066 8D4A     		ldr	r2, .L325+4
 3204 0068 9342     		cmp	r3, r2
 3205 006a 00F08A80 		beq	.L318
2789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
ARM GAS  /tmp/ccWz3gvT.s 			page 133


 3206              		.loc 1 2789 0 is_stmt 1
 3207 006e 1025     		movs	r5, #16
 3208              	.LVL266:
 3209              	.L236:
2859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3210              		.loc 1 2859 0
 3211 0070 8A4A     		ldr	r2, .L325+4
 3212 0072 9342     		cmp	r3, r2
 3213 0074 00F0AA80 		beq	.L319
2958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3214              		.loc 1 2958 0
 3215 0078 E369     		ldr	r3, [r4, #28]
 3216 007a B3F5004F 		cmp	r3, #32768
 3217 007e 00F02C81 		beq	.L320
3017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3218              		.loc 1 3017 0
 3219 0082 082D     		cmp	r5, #8
 3220 0084 00F2B781 		bhi	.L310
 3221 0088 DFE815F0 		tbh	[pc, r5, lsl #1]
 3222              	.L291:
 3223 008c 7601     		.2byte	(.L290-.L291)/2
 3224 008e 8D01     		.2byte	(.L292-.L291)/2
 3225 0090 9701     		.2byte	(.L293-.L291)/2
 3226 0092 B501     		.2byte	(.L310-.L291)/2
 3227 0094 A201     		.2byte	(.L294-.L291)/2
 3228 0096 B501     		.2byte	(.L310-.L291)/2
 3229 0098 B501     		.2byte	(.L310-.L291)/2
 3230 009a B501     		.2byte	(.L310-.L291)/2
 3231 009c AC01     		.2byte	(.L295-.L291)/2
 3232              	.LVL267:
 3233              		.p2align 1
 3234              	.L313:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3235              		.loc 1 2856 0 discriminator 1
 3236 009e 02F55842 		add	r2, r2, #55296
 3237 00a2 D2F88820 		ldr	r2, [r2, #136]
 3238 00a6 02F00302 		and	r2, r2, #3
 3239 00aa 032A     		cmp	r2, #3
 3240 00ac 09D8     		bhi	.L232
 3241 00ae DFE802F0 		tbb	[pc, r2]
 3242              	.L234:
 3243 00b2 02       		.byte	(.L233-.L234)/2
 3244 00b3 04       		.byte	(.L235-.L234)/2
 3245 00b4 81       		.byte	(.L296-.L234)/2
 3246 00b5 06       		.byte	(.L237-.L234)/2
 3247              		.p2align 1
 3248              	.L233:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3249              		.loc 1 2856 0 is_stmt 0
 3250 00b6 0125     		movs	r5, #1
 3251 00b8 DAE7     		b	.L236
 3252              	.L235:
 3253              	.LVL268:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3254              		.loc 1 2856 0 discriminator 5
 3255 00ba 0425     		movs	r5, #4
 3256 00bc D8E7     		b	.L236
ARM GAS  /tmp/ccWz3gvT.s 			page 134


 3257              	.LVL269:
 3258              	.L237:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3259              		.loc 1 2856 0 discriminator 7
 3260 00be 0825     		movs	r5, #8
 3261 00c0 D6E7     		b	.L236
 3262              	.LVL270:
 3263              	.L232:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3264              		.loc 1 2856 0 discriminator 3
 3265 00c2 1025     		movs	r5, #16
 3266 00c4 D4E7     		b	.L236
 3267              	.L314:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3268              		.loc 1 2856 0 discriminator 8
 3269 00c6 02F5E632 		add	r2, r2, #117760
 3270 00ca D2F88820 		ldr	r2, [r2, #136]
 3271 00ce 02F00C02 		and	r2, r2, #12
 3272 00d2 0C2A     		cmp	r2, #12
 3273 00d4 0ED8     		bhi	.L239
 3274 00d6 DFE802F0 		tbb	[pc, r2]
 3275              	.L241:
 3276 00da 07       		.byte	(.L240-.L241)/2
 3277 00db 0D       		.byte	(.L239-.L241)/2
 3278 00dc 0D       		.byte	(.L239-.L241)/2
 3279 00dd 0D       		.byte	(.L239-.L241)/2
 3280 00de 09       		.byte	(.L242-.L241)/2
 3281 00df 0D       		.byte	(.L239-.L241)/2
 3282 00e0 0D       		.byte	(.L239-.L241)/2
 3283 00e1 0D       		.byte	(.L239-.L241)/2
 3284 00e2 6F       		.byte	(.L297-.L241)/2
 3285 00e3 0D       		.byte	(.L239-.L241)/2
 3286 00e4 0D       		.byte	(.L239-.L241)/2
 3287 00e5 0D       		.byte	(.L239-.L241)/2
 3288 00e6 0B       		.byte	(.L243-.L241)/2
 3289 00e7 00       		.p2align 1
 3290              	.L240:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3291              		.loc 1 2856 0
 3292 00e8 0025     		movs	r5, #0
 3293 00ea C1E7     		b	.L236
 3294              	.L242:
 3295              	.LVL271:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3296              		.loc 1 2856 0 discriminator 12
 3297 00ec 0425     		movs	r5, #4
 3298 00ee BFE7     		b	.L236
 3299              	.LVL272:
 3300              	.L243:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3301              		.loc 1 2856 0 discriminator 14
 3302 00f0 0825     		movs	r5, #8
 3303 00f2 BDE7     		b	.L236
 3304              	.LVL273:
 3305              	.L239:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3306              		.loc 1 2856 0 discriminator 10
ARM GAS  /tmp/ccWz3gvT.s 			page 135


 3307 00f4 1025     		movs	r5, #16
 3308 00f6 BBE7     		b	.L236
 3309              	.L315:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3310              		.loc 1 2856 0 discriminator 15
 3311 00f8 02F5E432 		add	r2, r2, #116736
 3312 00fc D2F88820 		ldr	r2, [r2, #136]
 3313 0100 02F03002 		and	r2, r2, #48
 3314 0104 102A     		cmp	r2, #16
 3315 0106 09D0     		beq	.L246
 3316 0108 05D9     		bls	.L321
 3317 010a 202A     		cmp	r2, #32
 3318 010c 56D0     		beq	.L298
 3319 010e 302A     		cmp	r2, #48
 3320 0110 06D1     		bne	.L245
 3321              	.LVL274:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3322              		.loc 1 2856 0 discriminator 21
 3323 0112 0825     		movs	r5, #8
 3324 0114 ACE7     		b	.L236
 3325              	.LVL275:
 3326              	.L321:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3327              		.loc 1 2856 0 discriminator 15
 3328 0116 1AB9     		cbnz	r2, .L245
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3329              		.loc 1 2856 0
 3330 0118 0025     		movs	r5, #0
 3331 011a A9E7     		b	.L236
 3332              	.L246:
 3333              	.LVL276:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3334              		.loc 1 2856 0 discriminator 19
 3335 011c 0425     		movs	r5, #4
 3336 011e A7E7     		b	.L236
 3337              	.LVL277:
 3338              	.L245:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3339              		.loc 1 2856 0 discriminator 17
 3340 0120 1025     		movs	r5, #16
 3341 0122 A5E7     		b	.L236
 3342              	.L316:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3343              		.loc 1 2856 0 discriminator 22
 3344 0124 02F5E232 		add	r2, r2, #115712
 3345 0128 D2F88820 		ldr	r2, [r2, #136]
 3346 012c 02F0C002 		and	r2, r2, #192
 3347 0130 402A     		cmp	r2, #64
 3348 0132 09D0     		beq	.L252
 3349 0134 05D9     		bls	.L322
 3350 0136 802A     		cmp	r2, #128
 3351 0138 42D0     		beq	.L299
 3352 013a C02A     		cmp	r2, #192
 3353 013c 06D1     		bne	.L251
 3354              	.LVL278:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3355              		.loc 1 2856 0 discriminator 28
ARM GAS  /tmp/ccWz3gvT.s 			page 136


 3356 013e 0825     		movs	r5, #8
 3357 0140 96E7     		b	.L236
 3358              	.LVL279:
 3359              	.L322:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3360              		.loc 1 2856 0 discriminator 22
 3361 0142 1AB9     		cbnz	r2, .L251
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3362              		.loc 1 2856 0
 3363 0144 0025     		movs	r5, #0
 3364 0146 93E7     		b	.L236
 3365              	.L252:
 3366              	.LVL280:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3367              		.loc 1 2856 0 discriminator 26
 3368 0148 0425     		movs	r5, #4
 3369 014a 91E7     		b	.L236
 3370              	.LVL281:
 3371              	.L251:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3372              		.loc 1 2856 0 discriminator 24
 3373 014c 1025     		movs	r5, #16
 3374 014e 8FE7     		b	.L236
 3375              	.L317:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3376              		.loc 1 2856 0 discriminator 29
 3377 0150 02F5E032 		add	r2, r2, #114688
 3378 0154 D2F88820 		ldr	r2, [r2, #136]
 3379 0158 02F44072 		and	r2, r2, #768
 3380 015c B2F5807F 		cmp	r2, #256
 3381 0160 0BD0     		beq	.L258
 3382 0162 07D9     		bls	.L323
 3383 0164 B2F5007F 		cmp	r2, #512
 3384 0168 2CD0     		beq	.L300
 3385 016a B2F5407F 		cmp	r2, #768
 3386 016e 06D1     		bne	.L257
 3387              	.LVL282:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3388              		.loc 1 2856 0 discriminator 35
 3389 0170 0825     		movs	r5, #8
 3390 0172 7DE7     		b	.L236
 3391              	.LVL283:
 3392              	.L323:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3393              		.loc 1 2856 0 discriminator 29
 3394 0174 1AB9     		cbnz	r2, .L257
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3395              		.loc 1 2856 0
 3396 0176 0025     		movs	r5, #0
 3397 0178 7AE7     		b	.L236
 3398              	.L258:
 3399              	.LVL284:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3400              		.loc 1 2856 0 discriminator 33
 3401 017a 0425     		movs	r5, #4
 3402 017c 78E7     		b	.L236
 3403              	.LVL285:
ARM GAS  /tmp/ccWz3gvT.s 			page 137


 3404              	.L257:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3405              		.loc 1 2856 0 discriminator 31
 3406 017e 1025     		movs	r5, #16
 3407 0180 76E7     		b	.L236
 3408              	.L318:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3409              		.loc 1 2856 0 discriminator 36
 3410 0182 02F5C832 		add	r2, r2, #102400
 3411 0186 D2F88820 		ldr	r2, [r2, #136]
 3412 018a 02F44062 		and	r2, r2, #3072
 3413 018e B2F5806F 		cmp	r2, #1024
 3414 0192 0BD0     		beq	.L263
 3415 0194 07D9     		bls	.L324
 3416 0196 B2F5006F 		cmp	r2, #2048
 3417 019a 15D0     		beq	.L302
 3418 019c B2F5406F 		cmp	r2, #3072
 3419 01a0 06D1     		bne	.L262
 3420              	.LVL286:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3421              		.loc 1 2856 0 discriminator 41
 3422 01a2 0825     		movs	r5, #8
 3423 01a4 64E7     		b	.L236
 3424              	.LVL287:
 3425              	.L324:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3426              		.loc 1 2856 0 discriminator 36
 3427 01a6 1AB9     		cbnz	r2, .L262
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3428              		.loc 1 2856 0
 3429 01a8 0025     		movs	r5, #0
 3430 01aa 61E7     		b	.L236
 3431              	.L263:
 3432              	.LVL288:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3433              		.loc 1 2856 0 discriminator 39
 3434 01ac 0425     		movs	r5, #4
 3435 01ae 5FE7     		b	.L236
 3436              	.LVL289:
 3437              	.L262:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3438              		.loc 1 2856 0 discriminator 37
 3439 01b0 1025     		movs	r5, #16
 3440 01b2 5DE7     		b	.L236
 3441              	.L296:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3442              		.loc 1 2856 0
 3443 01b4 0225     		movs	r5, #2
 3444 01b6 5BE7     		b	.L236
 3445              	.L297:
 3446 01b8 0225     		movs	r5, #2
 3447 01ba 59E7     		b	.L236
 3448              	.L298:
 3449 01bc 0225     		movs	r5, #2
 3450 01be 57E7     		b	.L236
 3451              	.L299:
 3452 01c0 0225     		movs	r5, #2
ARM GAS  /tmp/ccWz3gvT.s 			page 138


 3453 01c2 55E7     		b	.L236
 3454              	.L300:
 3455 01c4 0225     		movs	r5, #2
 3456 01c6 53E7     		b	.L236
 3457              	.L302:
 3458 01c8 0225     		movs	r5, #2
 3459 01ca 51E7     		b	.L236
 3460              	.LVL290:
 3461              	.L319:
2862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3462              		.loc 1 2862 0 is_stmt 1
 3463 01cc 082D     		cmp	r5, #8
 3464 01ce 11D8     		bhi	.L268
 3465 01d0 DFE805F0 		tbb	[pc, r5]
 3466              	.L270:
 3467 01d4 08       		.byte	(.L269-.L270)/2
 3468 01d5 10       		.byte	(.L268-.L270)/2
 3469 01d6 05       		.byte	(.L271-.L270)/2
 3470 01d7 10       		.byte	(.L268-.L270)/2
 3471 01d8 0C       		.byte	(.L272-.L270)/2
 3472 01d9 10       		.byte	(.L268-.L270)/2
 3473 01da 10       		.byte	(.L268-.L270)/2
 3474 01db 10       		.byte	(.L268-.L270)/2
 3475 01dc 13       		.byte	(.L303-.L270)/2
 3476 01dd 00       		.p2align 1
 3477              	.L271:
2875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3478              		.loc 1 2875 0
 3479 01de 3548     		ldr	r0, .L325+28
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3480              		.loc 1 2792 0
 3481 01e0 0026     		movs	r6, #0
 3482 01e2 0DE0     		b	.L273
 3483              	.L269:
2868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3484              		.loc 1 2868 0
 3485 01e4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3486              	.LVL291:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3487              		.loc 1 2792 0
 3488 01e8 0026     		movs	r6, #0
2870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3489              		.loc 1 2870 0
 3490 01ea 09E0     		b	.L273
 3491              	.LVL292:
 3492              	.L272:
2882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3493              		.loc 1 2882 0
 3494 01ec FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3495              	.LVL293:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3496              		.loc 1 2792 0
 3497 01f0 0026     		movs	r6, #0
2884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3498              		.loc 1 2884 0
 3499 01f2 05E0     		b	.L273
 3500              	.LVL294:
ARM GAS  /tmp/ccWz3gvT.s 			page 139


 3501              	.L268:
2793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3502              		.loc 1 2793 0
 3503 01f4 0020     		movs	r0, #0
2894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3504              		.loc 1 2894 0
 3505 01f6 0126     		movs	r6, #1
2895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3506              		.loc 1 2895 0
 3507 01f8 02E0     		b	.L273
 3508              	.LVL295:
 3509              	.L303:
2889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3510              		.loc 1 2889 0
 3511 01fa 4FF40040 		mov	r0, #32768
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3512              		.loc 1 2792 0
 3513 01fe 0026     		movs	r6, #0
 3514              	.LVL296:
 3515              	.L273:
2899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3516              		.loc 1 2899 0
 3517 0200 0028     		cmp	r0, #0
 3518 0202 00F0CA80 		beq	.L274
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3519              		.loc 1 2902 0
 3520 0206 6268     		ldr	r2, [r4, #4]
 3521 0208 02EB4203 		add	r3, r2, r2, lsl #1
 3522 020c 9842     		cmp	r0, r3
 3523 020e C0F0F580 		bcc	.L304
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3524              		.loc 1 2902 0 is_stmt 0 discriminator 1
 3525 0212 B0EB023F 		cmp	r0, r2, lsl #12
 3526 0216 00F2F380 		bhi	.L305
2909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3527              		.loc 1 2909 0 is_stmt 1
 3528 021a 082D     		cmp	r5, #8
 3529 021c 5AD8     		bhi	.L306
 3530 021e DFE805F0 		tbb	[pc, r5]
 3531              	.L277:
 3532 0222 05       		.byte	(.L276-.L277)/2
 3533 0223 59       		.byte	(.L306-.L277)/2
 3534 0224 1F       		.byte	(.L278-.L277)/2
 3535 0225 59       		.byte	(.L306-.L277)/2
 3536 0226 29       		.byte	(.L279-.L277)/2
 3537 0227 59       		.byte	(.L306-.L277)/2
 3538 0228 59       		.byte	(.L306-.L277)/2
 3539 0229 59       		.byte	(.L306-.L277)/2
 3540 022a 4F       		.byte	(.L280-.L277)/2
 3541 022b 00       		.p2align 1
 3542              	.L276:
2915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3543              		.loc 1 2915 0
 3544 022c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3545              	.LVL297:
 3546 0230 0023     		movs	r3, #0
 3547 0232 4FEA1069 		lsr	r9, r0, #24
ARM GAS  /tmp/ccWz3gvT.s 			page 140


 3548 0236 4FEA0028 		lsl	r8, r0, #8
 3549 023a 6268     		ldr	r2, [r4, #4]
 3550 023c 5008     		lsrs	r0, r2, #1
 3551 023e 18EB000B 		adds	fp, r8, r0
 3552 0242 49F1000C 		adc	ip, r9, #0
 3553 0246 5846     		mov	r0, fp
 3554 0248 6146     		mov	r1, ip
 3555 024a FFF7FEFF 		bl	__aeabi_uldivmod
 3556              	.LVL298:
 3557              	.L275:
2946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3558              		.loc 1 2946 0
 3559 024e A0F54072 		sub	r2, r0, #768
 3560 0252 194B     		ldr	r3, .L325+32
 3561 0254 9A42     		cmp	r2, r3
 3562 0256 00F2D580 		bhi	.L307
2948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3563              		.loc 1 2948 0
 3564 025a 2368     		ldr	r3, [r4]
 3565 025c D860     		str	r0, [r3, #12]
 3566 025e 9CE0     		b	.L274
 3567              	.LVL299:
 3568              	.L278:
2922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3569              		.loc 1 2922 0
 3570 0260 5508     		lsrs	r5, r2, #1
 3571              	.LVL300:
 3572 0262 0023     		movs	r3, #0
 3573 0264 1548     		ldr	r0, .L325+36
 3574              	.LVL301:
 3575 0266 0021     		movs	r1, #0
 3576 0268 4019     		adds	r0, r0, r5
 3577 026a 41F10001 		adc	r1, r1, #0
 3578 026e FFF7FEFF 		bl	__aeabi_uldivmod
 3579              	.LVL302:
2924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
 3580              		.loc 1 2924 0
 3581 0272 ECE7     		b	.L275
 3582              	.LVL303:
 3583              	.L279:
2929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3584              		.loc 1 2929 0
 3585 0274 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3586              	.LVL304:
 3587 0278 0023     		movs	r3, #0
 3588 027a 4FEA1069 		lsr	r9, r0, #24
 3589 027e 4FEA0028 		lsl	r8, r0, #8
 3590 0282 6268     		ldr	r2, [r4, #4]
 3591 0284 5008     		lsrs	r0, r2, #1
 3592 0286 18EB000B 		adds	fp, r8, r0
 3593 028a 49F1000C 		adc	ip, r9, #0
 3594 028e 5846     		mov	r0, fp
 3595 0290 6146     		mov	r1, ip
 3596 0292 FFF7FEFF 		bl	__aeabi_uldivmod
 3597              	.LVL305:
2931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
 3598              		.loc 1 2931 0
ARM GAS  /tmp/ccWz3gvT.s 			page 141


 3599 0296 DAE7     		b	.L275
 3600              	.L326:
 3601              		.align	2
 3602              	.L325:
 3603 0298 F369FFEF 		.word	-268473869
 3604 029c 00800040 		.word	1073774592
 3605 02a0 00380140 		.word	1073821696
 3606 02a4 00440040 		.word	1073759232
 3607 02a8 00480040 		.word	1073760256
 3608 02ac 004C0040 		.word	1073761280
 3609 02b0 00500040 		.word	1073762304
 3610 02b4 0024F400 		.word	16000000
 3611 02b8 FFFC0F00 		.word	1047807
 3612 02bc 000024F4 		.word	-198967296
 3613              	.LVL306:
 3614              	.L280:
2936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3615              		.loc 1 2936 0
 3616 02c0 5008     		lsrs	r0, r2, #1
 3617              	.LVL307:
 3618 02c2 0021     		movs	r1, #0
 3619 02c4 0023     		movs	r3, #0
 3620 02c6 10F50000 		adds	r0, r0, #8388608
 3621 02ca 41F10001 		adc	r1, r1, #0
 3622 02ce FFF7FEFF 		bl	__aeabi_uldivmod
 3623              	.LVL308:
2938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
 3624              		.loc 1 2938 0
 3625 02d2 BCE7     		b	.L275
 3626              	.LVL309:
 3627              	.L306:
2941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 3628              		.loc 1 2941 0
 3629 02d4 0126     		movs	r6, #1
 3630              	.LVL310:
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3631              		.loc 1 2791 0
 3632 02d6 0020     		movs	r0, #0
 3633              	.LVL311:
 3634 02d8 B9E7     		b	.L275
 3635              	.LVL312:
 3636              	.L320:
2960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3637              		.loc 1 2960 0
 3638 02da 082D     		cmp	r5, #8
 3639 02dc 49D8     		bhi	.L308
 3640 02de DFE805F0 		tbb	[pc, r5]
 3641              	.L284:
 3642 02e2 05       		.byte	(.L283-.L284)/2
 3643 02e3 1E       		.byte	(.L285-.L284)/2
 3644 02e4 29       		.byte	(.L286-.L284)/2
 3645 02e5 48       		.byte	(.L308-.L284)/2
 3646 02e6 34       		.byte	(.L287-.L284)/2
 3647 02e7 48       		.byte	(.L308-.L284)/2
 3648 02e8 48       		.byte	(.L308-.L284)/2
 3649 02e9 48       		.byte	(.L308-.L284)/2
 3650 02ea 3F       		.byte	(.L288-.L284)/2
ARM GAS  /tmp/ccWz3gvT.s 			page 142


 3651 02eb 00       		.p2align 1
 3652              	.L283:
2966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3653              		.loc 1 2966 0
 3654 02ec FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3655              	.LVL313:
 3656 02f0 6268     		ldr	r2, [r4, #4]
 3657 02f2 5308     		lsrs	r3, r2, #1
 3658 02f4 03EB4003 		add	r3, r3, r0, lsl #1
 3659 02f8 B3FBF2F3 		udiv	r3, r3, r2
 3660 02fc 9BB2     		uxth	r3, r3
 3661              	.LVL314:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3662              		.loc 1 2792 0
 3663 02fe 0026     		movs	r6, #0
 3664              	.LVL315:
 3665              	.L282:
3004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3666              		.loc 1 3004 0
 3667 0300 A3F11001 		sub	r1, r3, #16
 3668 0304 4FF6EF72 		movw	r2, #65519
 3669 0308 9142     		cmp	r1, r2
 3670 030a 7DD8     		bhi	.L309
3006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3671              		.loc 1 3006 0
 3672 030c 9AB2     		uxth	r2, r3
 3673 030e 22F00F02 		bic	r2, r2, #15
 3674              	.LVL316:
3007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3675              		.loc 1 3007 0
 3676 0312 C3F34203 		ubfx	r3, r3, #1, #3
 3677              	.LVL317:
 3678 0316 1343     		orrs	r3, r3, r2
 3679              	.LVL318:
3008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3680              		.loc 1 3008 0
 3681 0318 2268     		ldr	r2, [r4]
 3682 031a D360     		str	r3, [r2, #12]
 3683 031c 3DE0     		b	.L274
 3684              	.LVL319:
 3685              	.L285:
2973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3686              		.loc 1 2973 0
 3687 031e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3688              	.LVL320:
 3689 0322 6268     		ldr	r2, [r4, #4]
 3690 0324 5308     		lsrs	r3, r2, #1
 3691 0326 03EB4003 		add	r3, r3, r0, lsl #1
 3692 032a B3FBF2F3 		udiv	r3, r3, r2
 3693 032e 9BB2     		uxth	r3, r3
 3694              	.LVL321:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3695              		.loc 1 2792 0
 3696 0330 0026     		movs	r6, #0
2975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3697              		.loc 1 2975 0
 3698 0332 E5E7     		b	.L282
ARM GAS  /tmp/ccWz3gvT.s 			page 143


 3699              	.LVL322:
 3700              	.L286:
2980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3701              		.loc 1 2980 0
 3702 0334 6268     		ldr	r2, [r4, #4]
 3703 0336 5308     		lsrs	r3, r2, #1
 3704 0338 03F1F473 		add	r3, r3, #31981568
 3705 033c 03F59043 		add	r3, r3, #18432
 3706 0340 B3FBF2F3 		udiv	r3, r3, r2
 3707 0344 9BB2     		uxth	r3, r3
 3708              	.LVL323:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3709              		.loc 1 2792 0
 3710 0346 0026     		movs	r6, #0
2982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3711              		.loc 1 2982 0
 3712 0348 DAE7     		b	.L282
 3713              	.LVL324:
 3714              	.L287:
2987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3715              		.loc 1 2987 0
 3716 034a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3717              	.LVL325:
 3718 034e 6268     		ldr	r2, [r4, #4]
 3719 0350 5308     		lsrs	r3, r2, #1
 3720 0352 03EB4003 		add	r3, r3, r0, lsl #1
 3721 0356 B3FBF2F3 		udiv	r3, r3, r2
 3722 035a 9BB2     		uxth	r3, r3
 3723              	.LVL326:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3724              		.loc 1 2792 0
 3725 035c 0026     		movs	r6, #0
2989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3726              		.loc 1 2989 0
 3727 035e CFE7     		b	.L282
 3728              	.LVL327:
 3729              	.L288:
2994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3730              		.loc 1 2994 0
 3731 0360 6268     		ldr	r2, [r4, #4]
 3732 0362 5308     		lsrs	r3, r2, #1
 3733 0364 03F58033 		add	r3, r3, #65536
 3734 0368 B3FBF2F3 		udiv	r3, r3, r2
 3735 036c 9BB2     		uxth	r3, r3
 3736              	.LVL328:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3737              		.loc 1 2792 0
 3738 036e 0026     		movs	r6, #0
2996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3739              		.loc 1 2996 0
 3740 0370 C6E7     		b	.L282
 3741              	.LVL329:
 3742              	.L308:
2999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3743              		.loc 1 2999 0
 3744 0372 0126     		movs	r6, #1
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
ARM GAS  /tmp/ccWz3gvT.s 			page 144


 3745              		.loc 1 2791 0
 3746 0374 0023     		movs	r3, #0
 3747 0376 C3E7     		b	.L282
 3748              	.L290:
3023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3749              		.loc 1 3023 0
 3750 0378 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3751              	.LVL330:
 3752 037c 6368     		ldr	r3, [r4, #4]
 3753 037e 00EB5300 		add	r0, r0, r3, lsr #1
 3754 0382 B0FBF3F0 		udiv	r0, r0, r3
 3755 0386 80B2     		uxth	r0, r0
 3756              	.LVL331:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3757              		.loc 1 2792 0
 3758 0388 0026     		movs	r6, #0
 3759              	.LVL332:
 3760              	.L289:
3061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3761              		.loc 1 3061 0
 3762 038a A0F11002 		sub	r2, r0, #16
 3763 038e 4FF6EF73 		movw	r3, #65519
 3764 0392 9A42     		cmp	r2, r3
 3765 0394 3AD8     		bhi	.L311
3063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3766              		.loc 1 3063 0
 3767 0396 2368     		ldr	r3, [r4]
 3768 0398 D860     		str	r0, [r3, #12]
 3769              	.LVL333:
 3770              	.L274:
3078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 3771              		.loc 1 3078 0
 3772 039a 0023     		movs	r3, #0
 3773 039c 2366     		str	r3, [r4, #96]
3079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3774              		.loc 1 3079 0
 3775 039e 6366     		str	r3, [r4, #100]
3082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3776              		.loc 1 3082 0
 3777 03a0 3046     		mov	r0, r6
 3778 03a2 BDE8788B 		pop	{r3, r4, r5, r6, r8, r9, fp, pc}
 3779              	.LVL334:
 3780              	.L292:
3030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3781              		.loc 1 3030 0
 3782 03a6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3783              	.LVL335:
 3784 03aa 6368     		ldr	r3, [r4, #4]
 3785 03ac 00EB5300 		add	r0, r0, r3, lsr #1
 3786 03b0 B0FBF3F0 		udiv	r0, r0, r3
 3787 03b4 80B2     		uxth	r0, r0
 3788              	.LVL336:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3789              		.loc 1 2792 0
 3790 03b6 0026     		movs	r6, #0
3032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3791              		.loc 1 3032 0
ARM GAS  /tmp/ccWz3gvT.s 			page 145


 3792 03b8 E7E7     		b	.L289
 3793              	.LVL337:
 3794              	.L293:
3037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3795              		.loc 1 3037 0
 3796 03ba 6368     		ldr	r3, [r4, #4]
 3797 03bc 5808     		lsrs	r0, r3, #1
 3798 03be 00F57400 		add	r0, r0, #15990784
 3799 03c2 00F51050 		add	r0, r0, #9216
 3800 03c6 B0FBF3F0 		udiv	r0, r0, r3
 3801 03ca 80B2     		uxth	r0, r0
 3802              	.LVL338:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3803              		.loc 1 2792 0
 3804 03cc 0026     		movs	r6, #0
3039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3805              		.loc 1 3039 0
 3806 03ce DCE7     		b	.L289
 3807              	.LVL339:
 3808              	.L294:
3044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3809              		.loc 1 3044 0
 3810 03d0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3811              	.LVL340:
 3812 03d4 6368     		ldr	r3, [r4, #4]
 3813 03d6 00EB5300 		add	r0, r0, r3, lsr #1
 3814 03da B0FBF3F0 		udiv	r0, r0, r3
 3815 03de 80B2     		uxth	r0, r0
 3816              	.LVL341:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3817              		.loc 1 2792 0
 3818 03e0 0026     		movs	r6, #0
3046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3819              		.loc 1 3046 0
 3820 03e2 D2E7     		b	.L289
 3821              	.LVL342:
 3822              	.L295:
3051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3823              		.loc 1 3051 0
 3824 03e4 6368     		ldr	r3, [r4, #4]
 3825 03e6 5808     		lsrs	r0, r3, #1
 3826 03e8 00F50040 		add	r0, r0, #32768
 3827 03ec B0FBF3F0 		udiv	r0, r0, r3
 3828 03f0 80B2     		uxth	r0, r0
 3829              	.LVL343:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3830              		.loc 1 2792 0
 3831 03f2 0026     		movs	r6, #0
3053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3832              		.loc 1 3053 0
 3833 03f4 C9E7     		b	.L289
 3834              	.LVL344:
 3835              	.L310:
3056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3836              		.loc 1 3056 0
 3837 03f6 0126     		movs	r6, #1
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
ARM GAS  /tmp/ccWz3gvT.s 			page 146


 3838              		.loc 1 2791 0
 3839 03f8 0020     		movs	r0, #0
 3840 03fa C6E7     		b	.L289
 3841              	.LVL345:
 3842              	.L304:
2905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3843              		.loc 1 2905 0
 3844 03fc 0126     		movs	r6, #1
 3845              	.LVL346:
 3846 03fe CCE7     		b	.L274
 3847              	.LVL347:
 3848              	.L305:
 3849 0400 0126     		movs	r6, #1
 3850              	.LVL348:
 3851 0402 CAE7     		b	.L274
 3852              	.LVL349:
 3853              	.L307:
2952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3854              		.loc 1 2952 0
 3855 0404 0126     		movs	r6, #1
 3856              	.LVL350:
 3857 0406 C8E7     		b	.L274
 3858              	.LVL351:
 3859              	.L309:
3012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3860              		.loc 1 3012 0
 3861 0408 0126     		movs	r6, #1
 3862              	.LVL352:
 3863 040a C6E7     		b	.L274
 3864              	.LVL353:
 3865              	.L311:
3067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3866              		.loc 1 3067 0
 3867 040c 0126     		movs	r6, #1
 3868              	.LVL354:
 3869 040e C4E7     		b	.L274
 3870              		.cfi_endproc
 3871              	.LFE162:
 3873              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3874              		.align	1
 3875              		.global	UART_AdvFeatureConfig
 3876              		.syntax unified
 3877              		.thumb
 3878              		.thumb_func
 3879              		.fpu fpv4-sp-d16
 3881              	UART_AdvFeatureConfig:
 3882              	.LFB163:
3090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3883              		.loc 1 3090 0
 3884              		.cfi_startproc
 3885              		@ args = 0, pretend = 0, frame = 0
 3886              		@ frame_needed = 0, uses_anonymous_args = 0
 3887              		@ link register save eliminated.
 3888              	.LVL355:
3095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3889              		.loc 1 3095 0
 3890 0000 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/ccWz3gvT.s 			page 147


 3891 0002 13F0010F 		tst	r3, #1
 3892 0006 06D0     		beq	.L328
3098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3893              		.loc 1 3098 0
 3894 0008 0268     		ldr	r2, [r0]
 3895 000a 5368     		ldr	r3, [r2, #4]
 3896 000c 23F40033 		bic	r3, r3, #131072
 3897 0010 816A     		ldr	r1, [r0, #40]
 3898 0012 0B43     		orrs	r3, r3, r1
 3899 0014 5360     		str	r3, [r2, #4]
 3900              	.L328:
3102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3901              		.loc 1 3102 0
 3902 0016 436A     		ldr	r3, [r0, #36]
 3903 0018 13F0020F 		tst	r3, #2
 3904 001c 06D0     		beq	.L329
3105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3905              		.loc 1 3105 0
 3906 001e 0268     		ldr	r2, [r0]
 3907 0020 5368     		ldr	r3, [r2, #4]
 3908 0022 23F48033 		bic	r3, r3, #65536
 3909 0026 C16A     		ldr	r1, [r0, #44]
 3910 0028 0B43     		orrs	r3, r3, r1
 3911 002a 5360     		str	r3, [r2, #4]
 3912              	.L329:
3109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3913              		.loc 1 3109 0
 3914 002c 436A     		ldr	r3, [r0, #36]
 3915 002e 13F0040F 		tst	r3, #4
 3916 0032 06D0     		beq	.L330
3112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3917              		.loc 1 3112 0
 3918 0034 0268     		ldr	r2, [r0]
 3919 0036 5368     		ldr	r3, [r2, #4]
 3920 0038 23F48023 		bic	r3, r3, #262144
 3921 003c 016B     		ldr	r1, [r0, #48]
 3922 003e 0B43     		orrs	r3, r3, r1
 3923 0040 5360     		str	r3, [r2, #4]
 3924              	.L330:
3116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3925              		.loc 1 3116 0
 3926 0042 436A     		ldr	r3, [r0, #36]
 3927 0044 13F0080F 		tst	r3, #8
 3928 0048 06D0     		beq	.L331
3119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3929              		.loc 1 3119 0
 3930 004a 0268     		ldr	r2, [r0]
 3931 004c 5368     		ldr	r3, [r2, #4]
 3932 004e 23F40043 		bic	r3, r3, #32768
 3933 0052 416B     		ldr	r1, [r0, #52]
 3934 0054 0B43     		orrs	r3, r3, r1
 3935 0056 5360     		str	r3, [r2, #4]
 3936              	.L331:
3123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3937              		.loc 1 3123 0
 3938 0058 436A     		ldr	r3, [r0, #36]
 3939 005a 13F0100F 		tst	r3, #16
ARM GAS  /tmp/ccWz3gvT.s 			page 148


 3940 005e 06D0     		beq	.L332
3126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3941              		.loc 1 3126 0
 3942 0060 0268     		ldr	r2, [r0]
 3943 0062 9368     		ldr	r3, [r2, #8]
 3944 0064 23F48053 		bic	r3, r3, #4096
 3945 0068 816B     		ldr	r1, [r0, #56]
 3946 006a 0B43     		orrs	r3, r3, r1
 3947 006c 9360     		str	r3, [r2, #8]
 3948              	.L332:
3130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3949              		.loc 1 3130 0
 3950 006e 436A     		ldr	r3, [r0, #36]
 3951 0070 13F0200F 		tst	r3, #32
 3952 0074 06D0     		beq	.L333
3133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3953              		.loc 1 3133 0
 3954 0076 0268     		ldr	r2, [r0]
 3955 0078 9368     		ldr	r3, [r2, #8]
 3956 007a 23F40053 		bic	r3, r3, #8192
 3957 007e C16B     		ldr	r1, [r0, #60]
 3958 0080 0B43     		orrs	r3, r3, r1
 3959 0082 9360     		str	r3, [r2, #8]
 3960              	.L333:
3137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3961              		.loc 1 3137 0
 3962 0084 436A     		ldr	r3, [r0, #36]
 3963 0086 13F0400F 		tst	r3, #64
 3964 008a 0AD0     		beq	.L334
3141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3965              		.loc 1 3141 0
 3966 008c 0268     		ldr	r2, [r0]
 3967 008e 5368     		ldr	r3, [r2, #4]
 3968 0090 23F48013 		bic	r3, r3, #1048576
 3969 0094 016C     		ldr	r1, [r0, #64]
 3970 0096 0B43     		orrs	r3, r3, r1
 3971 0098 5360     		str	r3, [r2, #4]
3143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3972              		.loc 1 3143 0
 3973 009a 036C     		ldr	r3, [r0, #64]
 3974 009c B3F5801F 		cmp	r3, #1048576
 3975 00a0 0BD0     		beq	.L336
 3976              	.L334:
3151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3977              		.loc 1 3151 0
 3978 00a2 436A     		ldr	r3, [r0, #36]
 3979 00a4 13F0800F 		tst	r3, #128
 3980 00a8 06D0     		beq	.L327
3154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3981              		.loc 1 3154 0
 3982 00aa 0268     		ldr	r2, [r0]
 3983 00ac 5368     		ldr	r3, [r2, #4]
 3984 00ae 23F40023 		bic	r3, r3, #524288
 3985 00b2 816C     		ldr	r1, [r0, #72]
 3986 00b4 0B43     		orrs	r3, r3, r1
 3987 00b6 5360     		str	r3, [r2, #4]
 3988              	.L327:
ARM GAS  /tmp/ccWz3gvT.s 			page 149


 3989 00b8 7047     		bx	lr
 3990              	.L336:
3146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3991              		.loc 1 3146 0
 3992 00ba 0268     		ldr	r2, [r0]
 3993 00bc 5368     		ldr	r3, [r2, #4]
 3994 00be 23F4C003 		bic	r3, r3, #6291456
 3995 00c2 416C     		ldr	r1, [r0, #68]
 3996 00c4 0B43     		orrs	r3, r3, r1
 3997 00c6 5360     		str	r3, [r2, #4]
 3998 00c8 EBE7     		b	.L334
 3999              		.cfi_endproc
 4000              	.LFE163:
 4002              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4003              		.align	1
 4004              		.global	UART_WaitOnFlagUntilTimeout
 4005              		.syntax unified
 4006              		.thumb
 4007              		.thumb_func
 4008              		.fpu fpv4-sp-d16
 4010              	UART_WaitOnFlagUntilTimeout:
 4011              	.LFB165:
3214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 4012              		.loc 1 3214 0
 4013              		.cfi_startproc
 4014              		@ args = 4, pretend = 0, frame = 0
 4015              		@ frame_needed = 0, uses_anonymous_args = 0
 4016              	.LVL356:
 4017 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4018              	.LCFI26:
 4019              		.cfi_def_cfa_offset 24
 4020              		.cfi_offset 4, -24
 4021              		.cfi_offset 5, -20
 4022              		.cfi_offset 6, -16
 4023              		.cfi_offset 7, -12
 4024              		.cfi_offset 8, -8
 4025              		.cfi_offset 14, -4
 4026 0004 0546     		mov	r5, r0
 4027 0006 0F46     		mov	r7, r1
 4028 0008 1646     		mov	r6, r2
 4029 000a 9846     		mov	r8, r3
 4030 000c 069C     		ldr	r4, [sp, #24]
 4031              	.LVL357:
 4032              	.L339:
3216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4033              		.loc 1 3216 0
 4034 000e 2B68     		ldr	r3, [r5]
 4035 0010 DB69     		ldr	r3, [r3, #28]
 4036 0012 37EA0303 		bics	r3, r7, r3
 4037 0016 0CBF     		ite	eq
 4038 0018 0123     		moveq	r3, #1
 4039 001a 0023     		movne	r3, #0
 4040 001c B342     		cmp	r3, r6
 4041 001e 1ED1     		bne	.L344
3219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4042              		.loc 1 3219 0
 4043 0020 B4F1FF3F 		cmp	r4, #-1
ARM GAS  /tmp/ccWz3gvT.s 			page 150


 4044 0024 F3D0     		beq	.L339
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4045              		.loc 1 3221 0
 4046 0026 2CB1     		cbz	r4, .L340
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4047              		.loc 1 3221 0 is_stmt 0 discriminator 1
 4048 0028 FFF7FEFF 		bl	HAL_GetTick
 4049              	.LVL358:
 4050 002c A0EB0800 		sub	r0, r0, r8
 4051 0030 8442     		cmp	r4, r0
 4052 0032 ECD2     		bcs	.L339
 4053              	.L340:
3227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 4054              		.loc 1 3227 0 is_stmt 1
 4055 0034 2A68     		ldr	r2, [r5]
 4056 0036 1368     		ldr	r3, [r2]
 4057 0038 23F4D073 		bic	r3, r3, #416
 4058 003c 1360     		str	r3, [r2]
3229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4059              		.loc 1 3229 0
 4060 003e 2A68     		ldr	r2, [r5]
 4061 0040 9368     		ldr	r3, [r2, #8]
 4062 0042 23F00103 		bic	r3, r3, #1
 4063 0046 9360     		str	r3, [r2, #8]
3231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4064              		.loc 1 3231 0
 4065 0048 2023     		movs	r3, #32
 4066 004a 85F87130 		strb	r3, [r5, #113]
3232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4067              		.loc 1 3232 0
 4068 004e 85F87230 		strb	r3, [r5, #114]
3235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4069              		.loc 1 3235 0
 4070 0052 0023     		movs	r3, #0
 4071 0054 85F87030 		strb	r3, [r5, #112]
3237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4072              		.loc 1 3237 0
 4073 0058 0320     		movs	r0, #3
 4074 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4075              	.LVL359:
 4076              	.L344:
3241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4077              		.loc 1 3241 0
 4078 005e 0020     		movs	r0, #0
3242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4079              		.loc 1 3242 0
 4080 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4081              		.cfi_endproc
 4082              	.LFE165:
 4084              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4085              		.align	1
 4086              		.global	HAL_UART_Transmit
 4087              		.syntax unified
 4088              		.thumb
 4089              		.thumb_func
 4090              		.fpu fpv4-sp-d16
 4092              	HAL_UART_Transmit:
ARM GAS  /tmp/ccWz3gvT.s 			page 151


 4093              	.LFB130:
1090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4094              		.loc 1 1090 0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 0
 4097              		@ frame_needed = 0, uses_anonymous_args = 0
 4098              	.LVL360:
 4099 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4100              	.LCFI27:
 4101              		.cfi_def_cfa_offset 24
 4102              		.cfi_offset 4, -24
 4103              		.cfi_offset 5, -20
 4104              		.cfi_offset 6, -16
 4105              		.cfi_offset 7, -12
 4106              		.cfi_offset 8, -8
 4107              		.cfi_offset 14, -4
 4108 0004 82B0     		sub	sp, sp, #8
 4109              	.LCFI28:
 4110              		.cfi_def_cfa_offset 32
 4111 0006 1E46     		mov	r6, r3
 4112              	.LVL361:
1095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4113              		.loc 1 1095 0
 4114 0008 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4115              	.LVL362:
 4116 000c DBB2     		uxtb	r3, r3
 4117 000e 202B     		cmp	r3, #32
 4118 0010 04D0     		beq	.L358
1148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4119              		.loc 1 1148 0
 4120 0012 0223     		movs	r3, #2
 4121              	.LVL363:
 4122              	.L346:
1150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4123              		.loc 1 1150 0
 4124 0014 1846     		mov	r0, r3
 4125 0016 02B0     		add	sp, sp, #8
 4126              	.LCFI29:
 4127              		.cfi_remember_state
 4128              		.cfi_def_cfa_offset 24
 4129              		@ sp needed
 4130 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4131              	.LVL364:
 4132              	.L358:
 4133              	.LCFI30:
 4134              		.cfi_restore_state
 4135 001c 0446     		mov	r4, r0
 4136 001e 0D46     		mov	r5, r1
 4137 0020 9046     		mov	r8, r2
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4138              		.loc 1 1097 0
 4139 0022 0029     		cmp	r1, #0
 4140 0024 4ED0     		beq	.L352
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4141              		.loc 1 1097 0 is_stmt 0 discriminator 1
 4142 0026 002A     		cmp	r2, #0
 4143 0028 4ED0     		beq	.L353
ARM GAS  /tmp/ccWz3gvT.s 			page 152


1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4144              		.loc 1 1103 0 is_stmt 1
 4145 002a 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4146 002e 012B     		cmp	r3, #1
 4147 0030 01D1     		bne	.L359
 4148 0032 0223     		movs	r3, #2
 4149 0034 EEE7     		b	.L346
 4150              	.L359:
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4151              		.loc 1 1103 0 is_stmt 0 discriminator 2
 4152 0036 0123     		movs	r3, #1
 4153 0038 80F87030 		strb	r3, [r0, #112]
1105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4154              		.loc 1 1105 0 is_stmt 1 discriminator 2
 4155 003c 0023     		movs	r3, #0
 4156 003e 4367     		str	r3, [r0, #116]
1106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4157              		.loc 1 1106 0 discriminator 2
 4158 0040 2123     		movs	r3, #33
 4159 0042 80F87130 		strb	r3, [r0, #113]
1109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4160              		.loc 1 1109 0 discriminator 2
 4161 0046 FFF7FEFF 		bl	HAL_GetTick
 4162              	.LVL365:
 4163 004a 0746     		mov	r7, r0
 4164              	.LVL366:
1111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 4165              		.loc 1 1111 0 discriminator 2
 4166 004c A4F85080 		strh	r8, [r4, #80]	@ movhi
1112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4167              		.loc 1 1112 0 discriminator 2
 4168 0050 A4F85280 		strh	r8, [r4, #82]	@ movhi
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4169              		.loc 1 1114 0 discriminator 2
 4170 0054 0AE0     		b	.L347
 4171              	.LVL367:
 4172              	.L348:
1128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4173              		.loc 1 1128 0
 4174 0056 2368     		ldr	r3, [r4]
 4175              	.LVL368:
 4176 0058 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4177 005a 1A85     		strh	r2, [r3, #40]	@ movhi
 4178 005c 0135     		adds	r5, r5, #1
 4179              	.LVL369:
 4180              	.L349:
1130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4181              		.loc 1 1130 0
 4182 005e B4F85230 		ldrh	r3, [r4, #82]
 4183 0062 9BB2     		uxth	r3, r3
 4184 0064 013B     		subs	r3, r3, #1
 4185 0066 9BB2     		uxth	r3, r3
 4186 0068 A4F85230 		strh	r3, [r4, #82]	@ movhi
 4187              	.L347:
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4188              		.loc 1 1114 0
 4189 006c B4F85230 		ldrh	r3, [r4, #82]
ARM GAS  /tmp/ccWz3gvT.s 			page 153


 4190 0070 9BB2     		uxth	r3, r3
 4191 0072 ABB1     		cbz	r3, .L360
1116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4192              		.loc 1 1116 0
 4193 0074 0096     		str	r6, [sp]
 4194 0076 3B46     		mov	r3, r7
 4195 0078 0022     		movs	r2, #0
 4196 007a 8021     		movs	r1, #128
 4197 007c 2046     		mov	r0, r4
 4198 007e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4199              	.LVL370:
 4200 0082 18BB     		cbnz	r0, .L355
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4201              		.loc 1 1120 0
 4202 0084 A368     		ldr	r3, [r4, #8]
 4203 0086 B3F5805F 		cmp	r3, #4096
 4204 008a E4D1     		bne	.L348
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4205              		.loc 1 1120 0 is_stmt 0 discriminator 1
 4206 008c 2369     		ldr	r3, [r4, #16]
 4207 008e 002B     		cmp	r3, #0
 4208 0090 E1D1     		bne	.L348
 4209              	.LVL371:
1123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4210              		.loc 1 1123 0 is_stmt 1
 4211 0092 2268     		ldr	r2, [r4]
 4212 0094 35F8023B 		ldrh	r3, [r5], #2
 4213              	.LVL372:
 4214 0098 C3F30803 		ubfx	r3, r3, #0, #9
 4215 009c 1385     		strh	r3, [r2, #40]	@ movhi
 4216              	.LVL373:
1124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4217              		.loc 1 1124 0
 4218 009e DEE7     		b	.L349
 4219              	.LVL374:
 4220              	.L360:
1133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4221              		.loc 1 1133 0
 4222 00a0 0096     		str	r6, [sp]
 4223 00a2 3B46     		mov	r3, r7
 4224 00a4 0022     		movs	r2, #0
 4225 00a6 4021     		movs	r1, #64
 4226 00a8 2046     		mov	r0, r4
 4227 00aa FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4228              	.LVL375:
 4229 00ae 0346     		mov	r3, r0
 4230 00b0 08B1     		cbz	r0, .L361
1135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4231              		.loc 1 1135 0
 4232 00b2 0323     		movs	r3, #3
 4233 00b4 AEE7     		b	.L346
 4234              	.L361:
1139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4235              		.loc 1 1139 0
 4236 00b6 2022     		movs	r2, #32
 4237 00b8 84F87120 		strb	r2, [r4, #113]
1142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccWz3gvT.s 			page 154


 4238              		.loc 1 1142 0
 4239 00bc 0022     		movs	r2, #0
 4240 00be 84F87020 		strb	r2, [r4, #112]
1144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4241              		.loc 1 1144 0
 4242 00c2 A7E7     		b	.L346
 4243              	.LVL376:
 4244              	.L352:
1099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4245              		.loc 1 1099 0
 4246 00c4 0123     		movs	r3, #1
 4247 00c6 A5E7     		b	.L346
 4248              	.L353:
 4249 00c8 0123     		movs	r3, #1
 4250 00ca A3E7     		b	.L346
 4251              	.LVL377:
 4252              	.L355:
1118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4253              		.loc 1 1118 0
 4254 00cc 0323     		movs	r3, #3
 4255 00ce A1E7     		b	.L346
 4256              		.cfi_endproc
 4257              	.LFE130:
 4259              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4260              		.align	1
 4261              		.global	HAL_UART_Receive
 4262              		.syntax unified
 4263              		.thumb
 4264              		.thumb_func
 4265              		.fpu fpv4-sp-d16
 4267              	HAL_UART_Receive:
 4268              	.LFB131:
1165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4269              		.loc 1 1165 0
 4270              		.cfi_startproc
 4271              		@ args = 0, pretend = 0, frame = 0
 4272              		@ frame_needed = 0, uses_anonymous_args = 0
 4273              	.LVL378:
 4274 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4275              	.LCFI31:
 4276              		.cfi_def_cfa_offset 24
 4277              		.cfi_offset 4, -24
 4278              		.cfi_offset 5, -20
 4279              		.cfi_offset 6, -16
 4280              		.cfi_offset 7, -12
 4281              		.cfi_offset 8, -8
 4282              		.cfi_offset 14, -4
 4283 0004 82B0     		sub	sp, sp, #8
 4284              	.LCFI32:
 4285              		.cfi_def_cfa_offset 32
 4286 0006 1E46     		mov	r6, r3
 4287              	.LVL379:
1171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4288              		.loc 1 1171 0
 4289 0008 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 4290              	.LVL380:
 4291 000c DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccWz3gvT.s 			page 155


 4292 000e 202B     		cmp	r3, #32
 4293 0010 03D0     		beq	.L380
1224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4294              		.loc 1 1224 0
 4295 0012 0220     		movs	r0, #2
 4296              	.LVL381:
 4297              	.L363:
1226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4298              		.loc 1 1226 0
 4299 0014 02B0     		add	sp, sp, #8
 4300              	.LCFI33:
 4301              		.cfi_remember_state
 4302              		.cfi_def_cfa_offset 24
 4303              		@ sp needed
 4304 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4305              	.LVL382:
 4306              	.L380:
 4307              	.LCFI34:
 4308              		.cfi_restore_state
 4309 001a 0446     		mov	r4, r0
 4310 001c 0D46     		mov	r5, r1
 4311 001e 9046     		mov	r8, r2
1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4312              		.loc 1 1173 0
 4313 0020 0029     		cmp	r1, #0
 4314 0022 6FD0     		beq	.L375
1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4315              		.loc 1 1173 0 is_stmt 0 discriminator 1
 4316 0024 002A     		cmp	r2, #0
 4317 0026 6FD0     		beq	.L376
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4318              		.loc 1 1179 0 is_stmt 1
 4319 0028 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4320 002c 012B     		cmp	r3, #1
 4321 002e 01D1     		bne	.L381
 4322 0030 0220     		movs	r0, #2
 4323              	.LVL383:
 4324 0032 EFE7     		b	.L363
 4325              	.LVL384:
 4326              	.L381:
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4327              		.loc 1 1179 0 is_stmt 0 discriminator 2
 4328 0034 0123     		movs	r3, #1
 4329 0036 80F87030 		strb	r3, [r0, #112]
1181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4330              		.loc 1 1181 0 is_stmt 1 discriminator 2
 4331 003a 0023     		movs	r3, #0
 4332 003c 4367     		str	r3, [r0, #116]
1182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4333              		.loc 1 1182 0 discriminator 2
 4334 003e 2223     		movs	r3, #34
 4335 0040 80F87230 		strb	r3, [r0, #114]
1185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4336              		.loc 1 1185 0 discriminator 2
 4337 0044 FFF7FEFF 		bl	HAL_GetTick
 4338              	.LVL385:
 4339 0048 0746     		mov	r7, r0
ARM GAS  /tmp/ccWz3gvT.s 			page 156


 4340              	.LVL386:
1187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4341              		.loc 1 1187 0 discriminator 2
 4342 004a A4F85880 		strh	r8, [r4, #88]	@ movhi
1188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4343              		.loc 1 1188 0 discriminator 2
 4344 004e A4F85A80 		strh	r8, [r4, #90]	@ movhi
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4345              		.loc 1 1191 0 discriminator 2
 4346 0052 A368     		ldr	r3, [r4, #8]
 4347 0054 B3F5805F 		cmp	r3, #4096
 4348 0058 06D0     		beq	.L382
 4349 005a A3B9     		cbnz	r3, .L367
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4350              		.loc 1 1191 0 is_stmt 0 discriminator 5
 4351 005c 2369     		ldr	r3, [r4, #16]
 4352 005e 73B9     		cbnz	r3, .L368
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4353              		.loc 1 1191 0 discriminator 7
 4354 0060 FF23     		movs	r3, #255
 4355 0062 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4356 0066 11E0     		b	.L366
 4357              	.L382:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4358              		.loc 1 1191 0 discriminator 1
 4359 0068 2369     		ldr	r3, [r4, #16]
 4360 006a 23B9     		cbnz	r3, .L365
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4361              		.loc 1 1191 0 discriminator 3
 4362 006c 40F2FF13 		movw	r3, #511
 4363 0070 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4364 0074 0AE0     		b	.L366
 4365              	.L365:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4366              		.loc 1 1191 0 discriminator 4
 4367 0076 FF23     		movs	r3, #255
 4368 0078 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4369 007c 06E0     		b	.L366
 4370              	.L368:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4371              		.loc 1 1191 0 discriminator 8
 4372 007e 7F23     		movs	r3, #127
 4373 0080 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4374 0084 02E0     		b	.L366
 4375              	.L367:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4376              		.loc 1 1191 0 discriminator 6
 4377 0086 B3F1805F 		cmp	r3, #268435456
 4378 008a 02D0     		beq	.L383
 4379              	.L366:
1192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4380              		.loc 1 1192 0 is_stmt 1
 4381 008c B4F85C80 		ldrh	r8, [r4, #92]
 4382              	.LVL387:
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4383              		.loc 1 1195 0
 4384 0090 17E0     		b	.L370
ARM GAS  /tmp/ccWz3gvT.s 			page 157


 4385              	.LVL388:
 4386              	.L383:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4387              		.loc 1 1191 0 discriminator 9
 4388 0092 2369     		ldr	r3, [r4, #16]
 4389 0094 1BB9     		cbnz	r3, .L369
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4390              		.loc 1 1191 0 is_stmt 0 discriminator 10
 4391 0096 7F23     		movs	r3, #127
 4392 0098 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4393 009c F6E7     		b	.L366
 4394              	.L369:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4395              		.loc 1 1191 0 discriminator 11
 4396 009e 3F23     		movs	r3, #63
 4397 00a0 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4398 00a4 F2E7     		b	.L366
 4399              	.LVL389:
 4400              	.L371:
1209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4401              		.loc 1 1209 0 is_stmt 1
 4402 00a6 2368     		ldr	r3, [r4]
 4403 00a8 9A8C     		ldrh	r2, [r3, #36]
 4404 00aa 5FFA88F3 		uxtb	r3, r8
 4405 00ae 1340     		ands	r3, r3, r2
 4406 00b0 2B70     		strb	r3, [r5]
 4407 00b2 0135     		adds	r5, r5, #1
 4408              	.LVL390:
 4409              	.L372:
1211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4410              		.loc 1 1211 0
 4411 00b4 B4F85A30 		ldrh	r3, [r4, #90]
 4412 00b8 9BB2     		uxth	r3, r3
 4413 00ba 013B     		subs	r3, r3, #1
 4414 00bc 9BB2     		uxth	r3, r3
 4415 00be A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4416              	.L370:
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4417              		.loc 1 1195 0
 4418 00c2 B4F85A30 		ldrh	r3, [r4, #90]
 4419 00c6 9BB2     		uxth	r3, r3
 4420 00c8 ABB1     		cbz	r3, .L384
1197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4421              		.loc 1 1197 0
 4422 00ca 0096     		str	r6, [sp]
 4423 00cc 3B46     		mov	r3, r7
 4424 00ce 0022     		movs	r2, #0
 4425 00d0 2021     		movs	r1, #32
 4426 00d2 2046     		mov	r0, r4
 4427 00d4 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4428              	.LVL391:
 4429 00d8 C0B9     		cbnz	r0, .L378
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4430              		.loc 1 1201 0
 4431 00da A368     		ldr	r3, [r4, #8]
 4432 00dc B3F5805F 		cmp	r3, #4096
 4433 00e0 E1D1     		bne	.L371
ARM GAS  /tmp/ccWz3gvT.s 			page 158


1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4434              		.loc 1 1201 0 is_stmt 0 discriminator 1
 4435 00e2 2369     		ldr	r3, [r4, #16]
 4436 00e4 002B     		cmp	r3, #0
 4437 00e6 DED1     		bne	.L371
 4438              	.LVL392:
1204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4439              		.loc 1 1204 0 is_stmt 1
 4440 00e8 2368     		ldr	r3, [r4]
 4441 00ea 9B8C     		ldrh	r3, [r3, #36]
 4442 00ec 08EA0303 		and	r3, r8, r3
 4443 00f0 25F8023B 		strh	r3, [r5], #2	@ movhi
 4444              	.LVL393:
1205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4445              		.loc 1 1205 0
 4446 00f4 DEE7     		b	.L372
 4447              	.LVL394:
 4448              	.L384:
1215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4449              		.loc 1 1215 0
 4450 00f6 2023     		movs	r3, #32
 4451 00f8 84F87230 		strb	r3, [r4, #114]
1218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4452              		.loc 1 1218 0
 4453 00fc 0020     		movs	r0, #0
 4454 00fe 84F87000 		strb	r0, [r4, #112]
1220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4455              		.loc 1 1220 0
 4456 0102 87E7     		b	.L363
 4457              	.LVL395:
 4458              	.L375:
1175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4459              		.loc 1 1175 0
 4460 0104 0120     		movs	r0, #1
 4461              	.LVL396:
 4462 0106 85E7     		b	.L363
 4463              	.LVL397:
 4464              	.L376:
 4465 0108 0120     		movs	r0, #1
 4466              	.LVL398:
 4467 010a 83E7     		b	.L363
 4468              	.LVL399:
 4469              	.L378:
1199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4470              		.loc 1 1199 0
 4471 010c 0320     		movs	r0, #3
 4472 010e 81E7     		b	.L363
 4473              		.cfi_endproc
 4474              	.LFE131:
 4476              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4477              		.align	1
 4478              		.global	UART_CheckIdleState
 4479              		.syntax unified
 4480              		.thumb
 4481              		.thumb_func
 4482              		.fpu fpv4-sp-d16
 4484              	UART_CheckIdleState:
ARM GAS  /tmp/ccWz3gvT.s 			page 159


 4485              	.LFB164:
3164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4486              		.loc 1 3164 0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 0
 4489              		@ frame_needed = 0, uses_anonymous_args = 0
 4490              	.LVL400:
 4491 0000 30B5     		push	{r4, r5, lr}
 4492              	.LCFI35:
 4493              		.cfi_def_cfa_offset 12
 4494              		.cfi_offset 4, -12
 4495              		.cfi_offset 5, -8
 4496              		.cfi_offset 14, -4
 4497 0002 83B0     		sub	sp, sp, #12
 4498              	.LCFI36:
 4499              		.cfi_def_cfa_offset 24
 4500 0004 0446     		mov	r4, r0
 4501              	.LVL401:
3168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4502              		.loc 1 3168 0
 4503 0006 0023     		movs	r3, #0
 4504 0008 4367     		str	r3, [r0, #116]
3171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4505              		.loc 1 3171 0
 4506 000a FFF7FEFF 		bl	HAL_GetTick
 4507              	.LVL402:
 4508 000e 0546     		mov	r5, r0
 4509              	.LVL403:
3174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4510              		.loc 1 3174 0
 4511 0010 2368     		ldr	r3, [r4]
 4512 0012 1B68     		ldr	r3, [r3]
 4513 0014 13F0080F 		tst	r3, #8
 4514 0018 0ED1     		bne	.L392
 4515              	.LVL404:
 4516              	.L386:
3184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4517              		.loc 1 3184 0
 4518 001a 2368     		ldr	r3, [r4]
 4519 001c 1B68     		ldr	r3, [r3]
 4520 001e 13F0040F 		tst	r3, #4
 4521 0022 17D1     		bne	.L393
 4522              	.L388:
3195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4523              		.loc 1 3195 0
 4524 0024 2023     		movs	r3, #32
 4525 0026 84F87130 		strb	r3, [r4, #113]
3196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4526              		.loc 1 3196 0
 4527 002a 84F87230 		strb	r3, [r4, #114]
3199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4528              		.loc 1 3199 0
 4529 002e 0020     		movs	r0, #0
 4530 0030 84F87000 		strb	r0, [r4, #112]
 4531              	.L387:
3202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4532              		.loc 1 3202 0
ARM GAS  /tmp/ccWz3gvT.s 			page 160


 4533 0034 03B0     		add	sp, sp, #12
 4534              	.LCFI37:
 4535              		.cfi_remember_state
 4536              		.cfi_def_cfa_offset 12
 4537              		@ sp needed
 4538 0036 30BD     		pop	{r4, r5, pc}
 4539              	.LVL405:
 4540              	.L392:
 4541              	.LCFI38:
 4542              		.cfi_restore_state
3177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4543              		.loc 1 3177 0
 4544 0038 6FF07E43 		mvn	r3, #-33554432
 4545 003c 0093     		str	r3, [sp]
 4546 003e 0346     		mov	r3, r0
 4547 0040 0022     		movs	r2, #0
 4548 0042 4FF40011 		mov	r1, #2097152
 4549 0046 2046     		mov	r0, r4
 4550              	.LVL406:
 4551 0048 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4552              	.LVL407:
 4553 004c 0028     		cmp	r0, #0
 4554 004e E4D0     		beq	.L386
3180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4555              		.loc 1 3180 0
 4556 0050 0320     		movs	r0, #3
 4557 0052 EFE7     		b	.L387
 4558              	.L393:
3187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4559              		.loc 1 3187 0
 4560 0054 6FF07E43 		mvn	r3, #-33554432
 4561 0058 0093     		str	r3, [sp]
 4562 005a 2B46     		mov	r3, r5
 4563 005c 0022     		movs	r2, #0
 4564 005e 4FF48001 		mov	r1, #4194304
 4565 0062 2046     		mov	r0, r4
 4566 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4567              	.LVL408:
 4568 0068 0028     		cmp	r0, #0
 4569 006a DBD0     		beq	.L388
3190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4570              		.loc 1 3190 0
 4571 006c 0320     		movs	r0, #3
 4572 006e E1E7     		b	.L387
 4573              		.cfi_endproc
 4574              	.LFE164:
 4576              		.section	.text.HAL_UART_Init,"ax",%progbits
 4577              		.align	1
 4578              		.global	HAL_UART_Init
 4579              		.syntax unified
 4580              		.thumb
 4581              		.thumb_func
 4582              		.fpu fpv4-sp-d16
 4584              	HAL_UART_Init:
 4585              	.LFB123:
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4586              		.loc 1 328 0
ARM GAS  /tmp/ccWz3gvT.s 			page 161


 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 0
 4589              		@ frame_needed = 0, uses_anonymous_args = 0
 4590              	.LVL409:
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4591              		.loc 1 330 0
 4592 0000 78B3     		cbz	r0, .L398
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4593              		.loc 1 328 0
 4594 0002 10B5     		push	{r4, lr}
 4595              	.LCFI39:
 4596              		.cfi_def_cfa_offset 8
 4597              		.cfi_offset 4, -8
 4598              		.cfi_offset 14, -4
 4599 0004 0446     		mov	r4, r0
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4600              		.loc 1 346 0
 4601 0006 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4602 000a 0BB3     		cbz	r3, .L403
 4603              	.LVL410:
 4604              	.L396:
 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4605              		.loc 1 367 0
 4606 000c 2423     		movs	r3, #36
 4607 000e 84F87130 		strb	r3, [r4, #113]
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4608              		.loc 1 370 0
 4609 0012 2268     		ldr	r2, [r4]
 4610 0014 1368     		ldr	r3, [r2]
 4611 0016 23F00103 		bic	r3, r3, #1
 4612 001a 1360     		str	r3, [r2]
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4613              		.loc 1 373 0
 4614 001c 2046     		mov	r0, r4
 4615 001e FFF7FEFF 		bl	UART_SetConfig
 4616              	.LVL411:
 4617 0022 0128     		cmp	r0, #1
 4618 0024 1FD0     		beq	.L395
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4619              		.loc 1 378 0
 4620 0026 636A     		ldr	r3, [r4, #36]
 4621 0028 BBB9     		cbnz	r3, .L404
 4622              	.L397:
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4623              		.loc 1 386 0
 4624 002a 2268     		ldr	r2, [r4]
 4625 002c 5368     		ldr	r3, [r2, #4]
 4626 002e 23F49043 		bic	r3, r3, #18432
 4627 0032 5360     		str	r3, [r2, #4]
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4628              		.loc 1 387 0
 4629 0034 2268     		ldr	r2, [r4]
 4630 0036 9368     		ldr	r3, [r2, #8]
 4631 0038 23F02A03 		bic	r3, r3, #42
 4632 003c 9360     		str	r3, [r2, #8]
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4633              		.loc 1 390 0
ARM GAS  /tmp/ccWz3gvT.s 			page 162


 4634 003e 2268     		ldr	r2, [r4]
 4635 0040 1368     		ldr	r3, [r2]
 4636 0042 43F00103 		orr	r3, r3, #1
 4637 0046 1360     		str	r3, [r2]
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4638              		.loc 1 393 0
 4639 0048 2046     		mov	r0, r4
 4640 004a FFF7FEFF 		bl	UART_CheckIdleState
 4641              	.LVL412:
 4642 004e 10BD     		pop	{r4, pc}
 4643              	.LVL413:
 4644              	.L403:
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4645              		.loc 1 349 0
 4646 0050 80F87030 		strb	r3, [r0, #112]
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4647              		.loc 1 363 0
 4648 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 4649              	.LVL414:
 4650 0058 D8E7     		b	.L396
 4651              	.L404:
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4652              		.loc 1 380 0
 4653 005a 2046     		mov	r0, r4
 4654 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4655              	.LVL415:
 4656 0060 E3E7     		b	.L397
 4657              	.LVL416:
 4658              	.L398:
 4659              	.LCFI40:
 4660              		.cfi_def_cfa_offset 0
 4661              		.cfi_restore 4
 4662              		.cfi_restore 14
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4663              		.loc 1 332 0
 4664 0062 0120     		movs	r0, #1
 4665              	.LVL417:
 4666 0064 7047     		bx	lr
 4667              	.LVL418:
 4668              	.L395:
 4669              	.LCFI41:
 4670              		.cfi_def_cfa_offset 8
 4671              		.cfi_offset 4, -8
 4672              		.cfi_offset 14, -4
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4673              		.loc 1 394 0
 4674 0066 10BD     		pop	{r4, pc}
 4675              		.cfi_endproc
 4676              	.LFE123:
 4678              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4679              		.align	1
 4680              		.global	HAL_HalfDuplex_Init
 4681              		.syntax unified
 4682              		.thumb
 4683              		.thumb_func
 4684              		.fpu fpv4-sp-d16
 4686              	HAL_HalfDuplex_Init:
ARM GAS  /tmp/ccWz3gvT.s 			page 163


 4687              	.LFB124:
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4688              		.loc 1 403 0
 4689              		.cfi_startproc
 4690              		@ args = 0, pretend = 0, frame = 0
 4691              		@ frame_needed = 0, uses_anonymous_args = 0
 4692              	.LVL419:
 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4693              		.loc 1 405 0
 4694 0000 0028     		cmp	r0, #0
 4695 0002 34D0     		beq	.L409
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4696              		.loc 1 403 0
 4697 0004 10B5     		push	{r4, lr}
 4698              	.LCFI42:
 4699              		.cfi_def_cfa_offset 8
 4700              		.cfi_offset 4, -8
 4701              		.cfi_offset 14, -4
 4702 0006 0446     		mov	r4, r0
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4703              		.loc 1 413 0
 4704 0008 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4705 000c 33B3     		cbz	r3, .L414
 4706              	.LVL420:
 4707              	.L407:
 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4708              		.loc 1 434 0
 4709 000e 2423     		movs	r3, #36
 4710 0010 84F87130 		strb	r3, [r4, #113]
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4711              		.loc 1 437 0
 4712 0014 2268     		ldr	r2, [r4]
 4713 0016 1368     		ldr	r3, [r2]
 4714 0018 23F00103 		bic	r3, r3, #1
 4715 001c 1360     		str	r3, [r2]
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4716              		.loc 1 440 0
 4717 001e 2046     		mov	r0, r4
 4718 0020 FFF7FEFF 		bl	UART_SetConfig
 4719              	.LVL421:
 4720 0024 0128     		cmp	r0, #1
 4721 0026 24D0     		beq	.L406
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4722              		.loc 1 445 0
 4723 0028 636A     		ldr	r3, [r4, #36]
 4724 002a E3B9     		cbnz	r3, .L415
 4725              	.L408:
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4726              		.loc 1 453 0
 4727 002c 2268     		ldr	r2, [r4]
 4728 002e 5368     		ldr	r3, [r2, #4]
 4729 0030 23F49043 		bic	r3, r3, #18432
 4730 0034 5360     		str	r3, [r2, #4]
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4731              		.loc 1 454 0
 4732 0036 2268     		ldr	r2, [r4]
 4733 0038 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccWz3gvT.s 			page 164


 4734 003a 23F02203 		bic	r3, r3, #34
 4735 003e 9360     		str	r3, [r2, #8]
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4736              		.loc 1 457 0
 4737 0040 2268     		ldr	r2, [r4]
 4738 0042 9368     		ldr	r3, [r2, #8]
 4739 0044 43F00803 		orr	r3, r3, #8
 4740 0048 9360     		str	r3, [r2, #8]
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4741              		.loc 1 460 0
 4742 004a 2268     		ldr	r2, [r4]
 4743 004c 1368     		ldr	r3, [r2]
 4744 004e 43F00103 		orr	r3, r3, #1
 4745 0052 1360     		str	r3, [r2]
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4746              		.loc 1 463 0
 4747 0054 2046     		mov	r0, r4
 4748 0056 FFF7FEFF 		bl	UART_CheckIdleState
 4749              	.LVL422:
 4750 005a 10BD     		pop	{r4, pc}
 4751              	.LVL423:
 4752              	.L414:
 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4753              		.loc 1 416 0
 4754 005c 80F87030 		strb	r3, [r0, #112]
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4755              		.loc 1 430 0
 4756 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 4757              	.LVL424:
 4758 0064 D3E7     		b	.L407
 4759              	.L415:
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4760              		.loc 1 447 0
 4761 0066 2046     		mov	r0, r4
 4762 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4763              	.LVL425:
 4764 006c DEE7     		b	.L408
 4765              	.LVL426:
 4766              	.L409:
 4767              	.LCFI43:
 4768              		.cfi_def_cfa_offset 0
 4769              		.cfi_restore 4
 4770              		.cfi_restore 14
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4771              		.loc 1 407 0
 4772 006e 0120     		movs	r0, #1
 4773              	.LVL427:
 4774 0070 7047     		bx	lr
 4775              	.LVL428:
 4776              	.L406:
 4777              	.LCFI44:
 4778              		.cfi_def_cfa_offset 8
 4779              		.cfi_offset 4, -8
 4780              		.cfi_offset 14, -4
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4781              		.loc 1 464 0
 4782 0072 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccWz3gvT.s 			page 165


 4783              		.cfi_endproc
 4784              	.LFE124:
 4786              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4787              		.align	1
 4788              		.global	HAL_LIN_Init
 4789              		.syntax unified
 4790              		.thumb
 4791              		.thumb_func
 4792              		.fpu fpv4-sp-d16
 4794              	HAL_LIN_Init:
 4795              	.LFB125:
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4796              		.loc 1 478 0
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 0
 4799              		@ frame_needed = 0, uses_anonymous_args = 0
 4800              	.LVL429:
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4801              		.loc 1 480 0
 4802 0000 0028     		cmp	r0, #0
 4803 0002 43D0     		beq	.L420
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4804              		.loc 1 478 0
 4805 0004 38B5     		push	{r3, r4, r5, lr}
 4806              	.LCFI45:
 4807              		.cfi_def_cfa_offset 16
 4808              		.cfi_offset 3, -16
 4809              		.cfi_offset 4, -12
 4810              		.cfi_offset 5, -8
 4811              		.cfi_offset 14, -4
 4812 0006 0446     		mov	r4, r0
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4813              		.loc 1 491 0
 4814 0008 C369     		ldr	r3, [r0, #28]
 4815 000a B3F5004F 		cmp	r3, #32768
 4816 000e 3FD0     		beq	.L421
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4817              		.loc 1 496 0
 4818 0010 8368     		ldr	r3, [r0, #8]
 4819 0012 002B     		cmp	r3, #0
 4820 0014 3ED1     		bne	.L422
 4821 0016 0D46     		mov	r5, r1
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4822              		.loc 1 501 0
 4823 0018 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4824 001c 002B     		cmp	r3, #0
 4825 001e 2CD0     		beq	.L427
 4826              	.LVL430:
 4827              	.L418:
 522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4828              		.loc 1 522 0
 4829 0020 2423     		movs	r3, #36
 4830 0022 84F87130 		strb	r3, [r4, #113]
 525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4831              		.loc 1 525 0
 4832 0026 2268     		ldr	r2, [r4]
 4833 0028 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccWz3gvT.s 			page 166


 4834 002a 23F00103 		bic	r3, r3, #1
 4835 002e 1360     		str	r3, [r2]
 528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4836              		.loc 1 528 0
 4837 0030 2046     		mov	r0, r4
 4838 0032 FFF7FEFF 		bl	UART_SetConfig
 4839              	.LVL431:
 4840 0036 0128     		cmp	r0, #1
 4841 0038 2DD0     		beq	.L417
 533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4842              		.loc 1 533 0
 4843 003a 636A     		ldr	r3, [r4, #36]
 4844 003c 13BB     		cbnz	r3, .L428
 4845              	.L419:
 541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4846              		.loc 1 541 0
 4847 003e 2268     		ldr	r2, [r4]
 4848 0040 5368     		ldr	r3, [r2, #4]
 4849 0042 23F40063 		bic	r3, r3, #2048
 4850 0046 5360     		str	r3, [r2, #4]
 542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4851              		.loc 1 542 0
 4852 0048 2268     		ldr	r2, [r4]
 4853 004a 9368     		ldr	r3, [r2, #8]
 4854 004c 23F02A03 		bic	r3, r3, #42
 4855 0050 9360     		str	r3, [r2, #8]
 545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4856              		.loc 1 545 0
 4857 0052 2268     		ldr	r2, [r4]
 4858 0054 5368     		ldr	r3, [r2, #4]
 4859 0056 43F48043 		orr	r3, r3, #16384
 4860 005a 5360     		str	r3, [r2, #4]
 548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4861              		.loc 1 548 0
 4862 005c 2268     		ldr	r2, [r4]
 4863 005e 5368     		ldr	r3, [r2, #4]
 4864 0060 23F02003 		bic	r3, r3, #32
 4865 0064 2B43     		orrs	r3, r3, r5
 4866 0066 5360     		str	r3, [r2, #4]
 551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4867              		.loc 1 551 0
 4868 0068 2268     		ldr	r2, [r4]
 4869 006a 1368     		ldr	r3, [r2]
 4870 006c 43F00103 		orr	r3, r3, #1
 4871 0070 1360     		str	r3, [r2]
 554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4872              		.loc 1 554 0
 4873 0072 2046     		mov	r0, r4
 4874 0074 FFF7FEFF 		bl	UART_CheckIdleState
 4875              	.LVL432:
 4876 0078 38BD     		pop	{r3, r4, r5, pc}
 4877              	.LVL433:
 4878              	.L427:
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4879              		.loc 1 504 0
 4880 007a 80F87030 		strb	r3, [r0, #112]
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/ccWz3gvT.s 			page 167


 4881              		.loc 1 518 0
 4882 007e FFF7FEFF 		bl	HAL_UART_MspInit
 4883              	.LVL434:
 4884 0082 CDE7     		b	.L418
 4885              	.L428:
 535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4886              		.loc 1 535 0
 4887 0084 2046     		mov	r0, r4
 4888 0086 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4889              	.LVL435:
 4890 008a D8E7     		b	.L419
 4891              	.LVL436:
 4892              	.L420:
 4893              	.LCFI46:
 4894              		.cfi_def_cfa_offset 0
 4895              		.cfi_restore 3
 4896              		.cfi_restore 4
 4897              		.cfi_restore 5
 4898              		.cfi_restore 14
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4899              		.loc 1 482 0
 4900 008c 0120     		movs	r0, #1
 4901              	.LVL437:
 4902 008e 7047     		bx	lr
 4903              	.LVL438:
 4904              	.L421:
 4905              	.LCFI47:
 4906              		.cfi_def_cfa_offset 16
 4907              		.cfi_offset 3, -16
 4908              		.cfi_offset 4, -12
 4909              		.cfi_offset 5, -8
 4910              		.cfi_offset 14, -4
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4911              		.loc 1 493 0
 4912 0090 0120     		movs	r0, #1
 4913              	.LVL439:
 4914 0092 38BD     		pop	{r3, r4, r5, pc}
 4915              	.LVL440:
 4916              	.L422:
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4917              		.loc 1 498 0
 4918 0094 0120     		movs	r0, #1
 4919              	.LVL441:
 4920              	.L417:
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4921              		.loc 1 555 0
 4922 0096 38BD     		pop	{r3, r4, r5, pc}
 4923              		.cfi_endproc
 4924              	.LFE125:
 4926              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4927              		.align	1
 4928              		.global	HAL_MultiProcessor_Init
 4929              		.syntax unified
 4930              		.thumb
 4931              		.thumb_func
 4932              		.fpu fpv4-sp-d16
 4934              	HAL_MultiProcessor_Init:
ARM GAS  /tmp/ccWz3gvT.s 			page 168


 4935              	.LFB126:
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4936              		.loc 1 577 0
 4937              		.cfi_startproc
 4938              		@ args = 0, pretend = 0, frame = 0
 4939              		@ frame_needed = 0, uses_anonymous_args = 0
 4940              	.LVL442:
 579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4941              		.loc 1 579 0
 4942 0000 0028     		cmp	r0, #0
 4943 0002 42D0     		beq	.L434
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4944              		.loc 1 577 0
 4945 0004 70B5     		push	{r4, r5, r6, lr}
 4946              	.LCFI48:
 4947              		.cfi_def_cfa_offset 16
 4948              		.cfi_offset 4, -16
 4949              		.cfi_offset 5, -12
 4950              		.cfi_offset 6, -8
 4951              		.cfi_offset 14, -4
 4952 0006 0446     		mov	r4, r0
 4953 0008 1546     		mov	r5, r2
 4954 000a 0E46     		mov	r6, r1
 587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4955              		.loc 1 587 0
 4956 000c 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4957 0010 53B3     		cbz	r3, .L439
 4958              	.LVL443:
 4959              	.L431:
 608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4960              		.loc 1 608 0
 4961 0012 2423     		movs	r3, #36
 4962 0014 84F87130 		strb	r3, [r4, #113]
 611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4963              		.loc 1 611 0
 4964 0018 2268     		ldr	r2, [r4]
 4965 001a 1368     		ldr	r3, [r2]
 4966 001c 23F00103 		bic	r3, r3, #1
 4967 0020 1360     		str	r3, [r2]
 614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4968              		.loc 1 614 0
 4969 0022 2046     		mov	r0, r4
 4970 0024 FFF7FEFF 		bl	UART_SetConfig
 4971              	.LVL444:
 4972 0028 0128     		cmp	r0, #1
 4973 002a 30D0     		beq	.L430
 619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4974              		.loc 1 619 0
 4975 002c 636A     		ldr	r3, [r4, #36]
 4976 002e 03BB     		cbnz	r3, .L440
 4977              	.L432:
 627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4978              		.loc 1 627 0
 4979 0030 2268     		ldr	r2, [r4]
 4980 0032 5368     		ldr	r3, [r2, #4]
 4981 0034 23F49043 		bic	r3, r3, #18432
 4982 0038 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccWz3gvT.s 			page 169


 628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4983              		.loc 1 628 0
 4984 003a 2268     		ldr	r2, [r4]
 4985 003c 9368     		ldr	r3, [r2, #8]
 4986 003e 23F02A03 		bic	r3, r3, #42
 4987 0042 9360     		str	r3, [r2, #8]
 630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4988              		.loc 1 630 0
 4989 0044 B5F5006F 		cmp	r5, #2048
 4990 0048 17D0     		beq	.L441
 4991              	.L433:
 637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4992              		.loc 1 637 0
 4993 004a 2368     		ldr	r3, [r4]
 4994 004c 1A68     		ldr	r2, [r3]
 4995 004e 22F40062 		bic	r2, r2, #2048
 4996 0052 1543     		orrs	r5, r5, r2
 4997              	.LVL445:
 4998 0054 1D60     		str	r5, [r3]
 640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4999              		.loc 1 640 0
 5000 0056 2268     		ldr	r2, [r4]
 5001 0058 1368     		ldr	r3, [r2]
 5002 005a 43F00103 		orr	r3, r3, #1
 5003 005e 1360     		str	r3, [r2]
 643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5004              		.loc 1 643 0
 5005 0060 2046     		mov	r0, r4
 5006 0062 FFF7FEFF 		bl	UART_CheckIdleState
 5007              	.LVL446:
 5008 0066 70BD     		pop	{r4, r5, r6, pc}
 5009              	.LVL447:
 5010              	.L439:
 590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5011              		.loc 1 590 0
 5012 0068 80F87030 		strb	r3, [r0, #112]
 604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5013              		.loc 1 604 0
 5014 006c FFF7FEFF 		bl	HAL_UART_MspInit
 5015              	.LVL448:
 5016 0070 CFE7     		b	.L431
 5017              	.L440:
 621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5018              		.loc 1 621 0
 5019 0072 2046     		mov	r0, r4
 5020 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5021              	.LVL449:
 5022 0078 DAE7     		b	.L432
 5023              	.L441:
 633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5024              		.loc 1 633 0
 5025 007a 2368     		ldr	r3, [r4]
 5026 007c 5968     		ldr	r1, [r3, #4]
 5027 007e 21F07F41 		bic	r1, r1, #-16777216
 5028 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 5029 0086 5E60     		str	r6, [r3, #4]
 5030 0088 DFE7     		b	.L433
ARM GAS  /tmp/ccWz3gvT.s 			page 170


 5031              	.LVL450:
 5032              	.L434:
 5033              	.LCFI49:
 5034              		.cfi_def_cfa_offset 0
 5035              		.cfi_restore 4
 5036              		.cfi_restore 5
 5037              		.cfi_restore 6
 5038              		.cfi_restore 14
 581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5039              		.loc 1 581 0
 5040 008a 0120     		movs	r0, #1
 5041              	.LVL451:
 5042 008c 7047     		bx	lr
 5043              	.LVL452:
 5044              	.L430:
 5045              	.LCFI50:
 5046              		.cfi_def_cfa_offset 16
 5047              		.cfi_offset 4, -16
 5048              		.cfi_offset 5, -12
 5049              		.cfi_offset 6, -8
 5050              		.cfi_offset 14, -4
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5051              		.loc 1 644 0
 5052 008e 70BD     		pop	{r4, r5, r6, pc}
 5053              		.cfi_endproc
 5054              	.LFE126:
 5056              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5057              		.align	1
 5058              		.global	HAL_MultiProcessor_EnableMuteMode
 5059              		.syntax unified
 5060              		.thumb
 5061              		.thumb_func
 5062              		.fpu fpv4-sp-d16
 5064              	HAL_MultiProcessor_EnableMuteMode:
 5065              	.LFB154:
2575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5066              		.loc 1 2575 0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 0
 5069              		@ frame_needed = 0, uses_anonymous_args = 0
 5070              	.LVL453:
 5071 0000 08B5     		push	{r3, lr}
 5072              	.LCFI51:
 5073              		.cfi_def_cfa_offset 8
 5074              		.cfi_offset 3, -8
 5075              		.cfi_offset 14, -4
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5076              		.loc 1 2577 0
 5077 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5078 0006 012B     		cmp	r3, #1
 5079 0008 01D1     		bne	.L446
 5080 000a 0220     		movs	r0, #2
 5081              	.LVL454:
2587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5082              		.loc 1 2587 0
 5083 000c 08BD     		pop	{r3, pc}
 5084              	.LVL455:
ARM GAS  /tmp/ccWz3gvT.s 			page 171


 5085              	.L446:
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5086              		.loc 1 2577 0 discriminator 2
 5087 000e 0123     		movs	r3, #1
 5088 0010 80F87030 		strb	r3, [r0, #112]
2579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5089              		.loc 1 2579 0 discriminator 2
 5090 0014 2423     		movs	r3, #36
 5091 0016 80F87130 		strb	r3, [r0, #113]
2582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5092              		.loc 1 2582 0 discriminator 2
 5093 001a 0268     		ldr	r2, [r0]
 5094 001c 1368     		ldr	r3, [r2]
 5095 001e 43F40053 		orr	r3, r3, #8192
 5096 0022 1360     		str	r3, [r2]
2584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5097              		.loc 1 2584 0 discriminator 2
 5098 0024 2023     		movs	r3, #32
 5099 0026 80F87130 		strb	r3, [r0, #113]
2586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5100              		.loc 1 2586 0 discriminator 2
 5101 002a FFF7FEFF 		bl	UART_CheckIdleState
 5102              	.LVL456:
 5103 002e 08BD     		pop	{r3, pc}
 5104              		.cfi_endproc
 5105              	.LFE154:
 5107              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5108              		.align	1
 5109              		.global	HAL_MultiProcessor_DisableMuteMode
 5110              		.syntax unified
 5111              		.thumb
 5112              		.thumb_func
 5113              		.fpu fpv4-sp-d16
 5115              	HAL_MultiProcessor_DisableMuteMode:
 5116              	.LFB155:
2596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5117              		.loc 1 2596 0
 5118              		.cfi_startproc
 5119              		@ args = 0, pretend = 0, frame = 0
 5120              		@ frame_needed = 0, uses_anonymous_args = 0
 5121              	.LVL457:
 5122 0000 08B5     		push	{r3, lr}
 5123              	.LCFI52:
 5124              		.cfi_def_cfa_offset 8
 5125              		.cfi_offset 3, -8
 5126              		.cfi_offset 14, -4
2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5127              		.loc 1 2598 0
 5128 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5129 0006 012B     		cmp	r3, #1
 5130 0008 01D1     		bne	.L451
 5131 000a 0220     		movs	r0, #2
 5132              	.LVL458:
2608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5133              		.loc 1 2608 0
 5134 000c 08BD     		pop	{r3, pc}
 5135              	.LVL459:
ARM GAS  /tmp/ccWz3gvT.s 			page 172


 5136              	.L451:
2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5137              		.loc 1 2598 0 discriminator 2
 5138 000e 0123     		movs	r3, #1
 5139 0010 80F87030 		strb	r3, [r0, #112]
2600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5140              		.loc 1 2600 0 discriminator 2
 5141 0014 2423     		movs	r3, #36
 5142 0016 80F87130 		strb	r3, [r0, #113]
2603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5143              		.loc 1 2603 0 discriminator 2
 5144 001a 0268     		ldr	r2, [r0]
 5145 001c 1368     		ldr	r3, [r2]
 5146 001e 23F40053 		bic	r3, r3, #8192
 5147 0022 1360     		str	r3, [r2]
2605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5148              		.loc 1 2605 0 discriminator 2
 5149 0024 2023     		movs	r3, #32
 5150 0026 80F87130 		strb	r3, [r0, #113]
2607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5151              		.loc 1 2607 0 discriminator 2
 5152 002a FFF7FEFF 		bl	UART_CheckIdleState
 5153              	.LVL460:
 5154 002e 08BD     		pop	{r3, pc}
 5155              		.cfi_endproc
 5156              	.LFE155:
 5158              		.text
 5159              	.Letext0:
 5160              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5161              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5162              		.file 4 "../../core/ST/CMSIS/Include/core_cm4.h"
 5163              		.file 5 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 5164              		.file 6 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 5165              		.file 7 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 5166              		.file 8 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 5167              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 5168              		.file 10 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 5169              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 5170              		.file 12 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 5171              		.file 13 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
ARM GAS  /tmp/ccWz3gvT.s 			page 173


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccWz3gvT.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccWz3gvT.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccWz3gvT.s:46     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccWz3gvT.s:52     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccWz3gvT.s:81     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccWz3gvT.s:87     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccWz3gvT.s:138    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccWz3gvT.s:144    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccWz3gvT.s:202    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccWz3gvT.s:209    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccWz3gvT.s:222    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccWz3gvT.s:229    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccWz3gvT.s:242    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccWz3gvT.s:249    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccWz3gvT.s:315    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:322    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccWz3gvT.s:420    .text.HAL_UART_Transmit_IT:0000000000000070 $d
     /tmp/ccWz3gvT.s:426    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:433    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccWz3gvT.s:589    .text.HAL_UART_Receive_IT:00000000000000cc $d
     /tmp/ccWz3gvT.s:1522   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccWz3gvT.s:1607   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccWz3gvT.s:595    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccWz3gvT.s:602    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccWz3gvT.s:714    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/ccWz3gvT.s:1361   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccWz3gvT.s:1472   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccWz3gvT.s:1822   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccWz3gvT.s:721    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccWz3gvT.s:728    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccWz3gvT.s:844    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/ccWz3gvT.s:1694   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccWz3gvT.s:1772   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccWz3gvT.s:851    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccWz3gvT.s:858    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccWz3gvT.s:937    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccWz3gvT.s:944    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccWz3gvT.s:1017   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccWz3gvT.s:1024   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccWz3gvT.s:1105   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccWz3gvT.s:1112   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccWz3gvT.s:1204   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccWz3gvT.s:1211   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccWz3gvT.s:1262   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccWz3gvT.s:1269   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccWz3gvT.s:1335   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:1342   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccWz3gvT.s:1355   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccWz3gvT.s:1409   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:1415   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccWz3gvT.s:1446   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:1453   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccWz3gvT.s:1466   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccWz3gvT.s:1496   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:1503   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccWz3gvT.s 			page 174


     /tmp/ccWz3gvT.s:1516   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccWz3gvT.s:1601   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccWz3gvT.s:1688   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccWz3gvT.s:1746   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:1753   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccWz3gvT.s:1766   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccWz3gvT.s:1796   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:1803   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccWz3gvT.s:1816   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccWz3gvT.s:1894   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccWz3gvT.s:1901   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccWz3gvT.s:2166   .text.HAL_UART_IRQHandler:0000000000000158 $d
     /tmp/ccWz3gvT.s:2177   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccWz3gvT.s:2171   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccWz3gvT.s:2205   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2212   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccWz3gvT.s:2225   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:2232   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccWz3gvT.s:2404   .text.HAL_UART_Abort_IT:00000000000000dc $d
     /tmp/ccWz3gvT.s:2482   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccWz3gvT.s:2416   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccWz3gvT.s:2410   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2476   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2536   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2543   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccWz3gvT.s:2556   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:2563   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccWz3gvT.s:2646   .text.HAL_UART_AbortTransmit_IT:0000000000000064 $d
     /tmp/ccWz3gvT.s:2657   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccWz3gvT.s:2651   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2686   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2693   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccWz3gvT.s:2706   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccWz3gvT.s:2713   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccWz3gvT.s:2814   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/ccWz3gvT.s:2825   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccWz3gvT.s:2819   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccWz3gvT.s:2864   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccWz3gvT.s:2871   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccWz3gvT.s:2890   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccWz3gvT.s:2897   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccWz3gvT.s:2946   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccWz3gvT.s:2953   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccWz3gvT.s:3002   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccWz3gvT.s:3009   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccWz3gvT.s:3054   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccWz3gvT.s:3061   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccWz3gvT.s:3083   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccWz3gvT.s:3090   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccWz3gvT.s:3108   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccWz3gvT.s:3115   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccWz3gvT.s:3223   .text.UART_SetConfig:000000000000008c $d
     /tmp/ccWz3gvT.s:3233   .text.UART_SetConfig:000000000000009e $t
     /tmp/ccWz3gvT.s:3243   .text.UART_SetConfig:00000000000000b2 $d
     /tmp/ccWz3gvT.s:3247   .text.UART_SetConfig:00000000000000b6 $t
     /tmp/ccWz3gvT.s:3276   .text.UART_SetConfig:00000000000000da $d
     /tmp/ccWz3gvT.s:3467   .text.UART_SetConfig:00000000000001d4 $d
ARM GAS  /tmp/ccWz3gvT.s 			page 175


     /tmp/ccWz3gvT.s:3532   .text.UART_SetConfig:0000000000000222 $d
     /tmp/ccWz3gvT.s:3603   .text.UART_SetConfig:0000000000000298 $d
     /tmp/ccWz3gvT.s:3616   .text.UART_SetConfig:00000000000002c0 $t
     /tmp/ccWz3gvT.s:3642   .text.UART_SetConfig:00000000000002e2 $d
     /tmp/ccWz3gvT.s:3874   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccWz3gvT.s:3881   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccWz3gvT.s:4003   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccWz3gvT.s:4010   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccWz3gvT.s:4085   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccWz3gvT.s:4092   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccWz3gvT.s:4260   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccWz3gvT.s:4267   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccWz3gvT.s:4477   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccWz3gvT.s:4484   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccWz3gvT.s:4577   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccWz3gvT.s:4584   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccWz3gvT.s:4679   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccWz3gvT.s:4686   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccWz3gvT.s:4787   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccWz3gvT.s:4794   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccWz3gvT.s:4927   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccWz3gvT.s:4934   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccWz3gvT.s:5057   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccWz3gvT.s:5064   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccWz3gvT.s:5108   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccWz3gvT.s:5115   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:0000000000000010 $d
     /tmp/ccWz3gvT.s:3289   .text.UART_SetConfig:00000000000000e7 $d
     /tmp/ccWz3gvT.s:3289   .text.UART_SetConfig:00000000000000e8 $t
     /tmp/ccWz3gvT.s:3476   .text.UART_SetConfig:00000000000001dd $d
     /tmp/ccWz3gvT.s:3476   .text.UART_SetConfig:00000000000001de $t
     /tmp/ccWz3gvT.s:3541   .text.UART_SetConfig:000000000000022b $d
     /tmp/ccWz3gvT.s:3541   .text.UART_SetConfig:000000000000022c $t
     /tmp/ccWz3gvT.s:3651   .text.UART_SetConfig:00000000000002eb $d
     /tmp/ccWz3gvT.s:3651   .text.UART_SetConfig:00000000000002ec $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
