ARM GAS  /tmp/ccGLv8ND.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"modem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.process_serial_frame,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	process_serial_frame:
  25              	.LFB125:
  26              		.file 1 "../../shields/Murata/src/modem.c"
   1:../../shields/Murata/src/modem.c **** /* * OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra
   2:../../shields/Murata/src/modem.c ****  * lowpower wireless sensor communication
   3:../../shields/Murata/src/modem.c ****  *
   4:../../shields/Murata/src/modem.c ****  * Copyright 2015 University of Antwerp
   5:../../shields/Murata/src/modem.c ****  *
   6:../../shields/Murata/src/modem.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
   7:../../shields/Murata/src/modem.c ****  * you may not use this file except in compliance with the License.
   8:../../shields/Murata/src/modem.c ****  * You may obtain a copy of the License at
   9:../../shields/Murata/src/modem.c ****  *
  10:../../shields/Murata/src/modem.c ****  *   http://www.apache.org/licenses/LICENSE-2.0
  11:../../shields/Murata/src/modem.c ****  *
  12:../../shields/Murata/src/modem.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../../shields/Murata/src/modem.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  14:../../shields/Murata/src/modem.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../../shields/Murata/src/modem.c ****  * See the License for the specific language governing permissions and
  16:../../shields/Murata/src/modem.c ****  * limitations under the License.
  17:../../shields/Murata/src/modem.c ****  */
  18:../../shields/Murata/src/modem.c **** 
  19:../../shields/Murata/src/modem.c **** #include "modem.h"
  20:../../shields/Murata/src/modem.c **** //#include "debug.h"
  21:../../shields/Murata/src/modem.c **** //#include "log.h"
  22:../../shields/Murata/src/modem.c **** #include "errors.h"
  23:../../shields/Murata/src/modem.c **** #include "fifo.h"
  24:../../shields/Murata/src/modem.c **** #include "alp.h"
  25:../../shields/Murata/src/modem.c **** //#include "scheduler.h"
  26:../../shields/Murata/src/modem.c **** //#include "timer.h"
  27:../../shields/Murata/src/modem.c **** #include "d7ap.h"
  28:../../shields/Murata/src/modem.c **** #include <stdio.h>
  29:../../shields/Murata/src/modem.c **** #include <stdlib.h>
  30:../../shields/Murata/src/modem.c **** //#include "platform.h"
  31:../../shields/Murata/src/modem.c **** #include "modem_interface.h"
  32:../../shields/Murata/src/modem.c **** #include "stm32l4xx_hal.h"
ARM GAS  /tmp/ccGLv8ND.s 			page 2


  33:../../shields/Murata/src/modem.c **** 
  34:../../shields/Murata/src/modem.c **** #define RX_BUFFER_SIZE 256
  35:../../shields/Murata/src/modem.c **** #define CMD_BUFFER_SIZE 256
  36:../../shields/Murata/src/modem.c **** 
  37:../../shields/Murata/src/modem.c **** #if defined(FRAMEWORK_LOG_ENABLED) && defined(FRAMEWORK_MODEM_LOG_ENABLED)
  38:../../shields/Murata/src/modem.c ****   #define DPRINT(...) log_print_string(__VA_ARGS__)
  39:../../shields/Murata/src/modem.c ****   #define DPRINT_DATA(...) log_print_data(__VA_ARGS__)
  40:../../shields/Murata/src/modem.c **** #else
  41:../../shields/Murata/src/modem.c ****     #define DPRINT(...)
  42:../../shields/Murata/src/modem.c ****     #define DPRINT_DATA(...)
  43:../../shields/Murata/src/modem.c **** #endif
  44:../../shields/Murata/src/modem.c **** 
  45:../../shields/Murata/src/modem.c **** 
  46:../../shields/Murata/src/modem.c **** typedef struct {
  47:../../shields/Murata/src/modem.c ****   uint8_t tag_id;
  48:../../shields/Murata/src/modem.c ****   bool is_active;
  49:../../shields/Murata/src/modem.c ****   fifo_t fifo;
  50:../../shields/Murata/src/modem.c ****   uint8_t buffer[256];
  51:../../shields/Murata/src/modem.c **** } command_t;
  52:../../shields/Murata/src/modem.c **** 
  53:../../shields/Murata/src/modem.c **** static UART_HandleTypeDef* uart_handle;
  54:../../shields/Murata/src/modem.c **** static modem_callbacks_t* callbacks;
  55:../../shields/Murata/src/modem.c **** static uint8_t rx_buffer[RX_BUFFER_SIZE];
  56:../../shields/Murata/src/modem.c **** static command_t command; // TODO only one active command supported for now
  57:../../shields/Murata/src/modem.c **** static uint8_t next_tag_id = 0;
  58:../../shields/Murata/src/modem.c **** static bool parsed_header = false;
  59:../../shields/Murata/src/modem.c **** static uint8_t payload_len = 0;
  60:../../shields/Murata/src/modem.c **** extern fifo_t rx_fifo;
  61:../../shields/Murata/src/modem.c **** 
  62:../../shields/Murata/src/modem.c **** static void process_serial_frame(fifo_t* fifo) {
  27              		.loc 1 62 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 296
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 CBB0     		sub	sp, sp, #300
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 320
  43 0004 0446     		mov	r4, r0
  44              	.LVL1:
  63:../../shields/Murata/src/modem.c ****   bool command_completed = false;
  64:../../shields/Murata/src/modem.c ****   bool completed_with_error = false;
  45              		.loc 1 64 0
  46 0006 0025     		movs	r5, #0
  63:../../shields/Murata/src/modem.c ****   bool command_completed = false;
  47              		.loc 1 63 0
  48 0008 2F46     		mov	r7, r5
  49              	.LVL2:
  50              	.L2:
ARM GAS  /tmp/ccGLv8ND.s 			page 3


  65:../../shields/Murata/src/modem.c ****   while(fifo_get_size(fifo)) {
  51              		.loc 1 65 0
  52 000a 2046     		mov	r0, r4
  53 000c FFF7FEFF 		bl	fifo_get_size
  54              	.LVL3:
  55 0010 0028     		cmp	r0, #0
  56 0012 00F08580 		beq	.L23
  57              	.LBB6:
  66:../../shields/Murata/src/modem.c ****     alp_action_t action;
  67:../../shields/Murata/src/modem.c ****     alp_parse_action(fifo, &action);
  58              		.loc 1 67 0
  59 0016 06A9     		add	r1, sp, #24
  60 0018 2046     		mov	r0, r4
  61 001a FFF7FEFF 		bl	alp_parse_action
  62              	.LVL4:
  68:../../shields/Murata/src/modem.c **** 
  69:../../shields/Murata/src/modem.c ****     switch(action.operation) {
  63              		.loc 1 69 0
  64 001e 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
  65 0022 043B     		subs	r3, r3, #4
  66 0024 1F2B     		cmp	r3, #31
  67 0026 75D8     		bhi	.L3
  68 0028 DFE803F0 		tbb	[pc, r3]
  69              	.L5:
  70 002c 1F       		.byte	(.L4-.L5)/2
  71 002d 74       		.byte	(.L3-.L5)/2
  72 002e 74       		.byte	(.L3-.L5)/2
  73 002f 74       		.byte	(.L3-.L5)/2
  74 0030 74       		.byte	(.L3-.L5)/2
  75 0031 74       		.byte	(.L3-.L5)/2
  76 0032 74       		.byte	(.L3-.L5)/2
  77 0033 74       		.byte	(.L3-.L5)/2
  78 0034 74       		.byte	(.L3-.L5)/2
  79 0035 74       		.byte	(.L3-.L5)/2
  80 0036 74       		.byte	(.L3-.L5)/2
  81 0037 74       		.byte	(.L3-.L5)/2
  82 0038 74       		.byte	(.L3-.L5)/2
  83 0039 74       		.byte	(.L3-.L5)/2
  84 003a 74       		.byte	(.L3-.L5)/2
  85 003b 74       		.byte	(.L3-.L5)/2
  86 003c 74       		.byte	(.L3-.L5)/2
  87 003d 74       		.byte	(.L3-.L5)/2
  88 003e 74       		.byte	(.L3-.L5)/2
  89 003f 74       		.byte	(.L3-.L5)/2
  90 0040 74       		.byte	(.L3-.L5)/2
  91 0041 74       		.byte	(.L3-.L5)/2
  92 0042 74       		.byte	(.L3-.L5)/2
  93 0043 74       		.byte	(.L3-.L5)/2
  94 0044 74       		.byte	(.L3-.L5)/2
  95 0045 74       		.byte	(.L3-.L5)/2
  96 0046 74       		.byte	(.L3-.L5)/2
  97 0047 74       		.byte	(.L3-.L5)/2
  98 0048 2B       		.byte	(.L6-.L5)/2
  99 0049 74       		.byte	(.L3-.L5)/2
 100 004a 37       		.byte	(.L7-.L5)/2
 101 004b 10       		.byte	(.L8-.L5)/2
 102              		.p2align 1
ARM GAS  /tmp/ccGLv8ND.s 			page 4


 103              	.L8:
  70:../../shields/Murata/src/modem.c ****       case ALP_OP_RETURN_TAG:
  71:../../shields/Murata/src/modem.c ****         if(action.tag_response.tag_id == command.tag_id) {
 104              		.loc 1 71 0
 105 004c 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 106 0050 3A4B     		ldr	r3, .L26
 107 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 108 0054 9142     		cmp	r1, r2
 109 0056 03D0     		beq	.L24
  72:../../shields/Murata/src/modem.c ****           command_completed = action.tag_response.completed;
  73:../../shields/Murata/src/modem.c ****           completed_with_error = action.tag_response.error;
  74:../../shields/Murata/src/modem.c ****         } else {
  75:../../shields/Murata/src/modem.c ****           printf("received resp with unexpected tag_id (%i vs %i)", action.tag_response.tag_id, com
 110              		.loc 1 75 0
 111 0058 3948     		ldr	r0, .L26+4
 112 005a FFF7FEFF 		bl	printf
 113              	.LVL5:
 114 005e D4E7     		b	.L2
 115              	.L24:
  72:../../shields/Murata/src/modem.c ****           command_completed = action.tag_response.completed;
 116              		.loc 1 72 0
 117 0060 9DF81C70 		ldrb	r7, [sp, #28]	@ zero_extendqisi2
 118              	.LVL6:
  73:../../shields/Murata/src/modem.c ****         } else {
 119              		.loc 1 73 0
 120 0064 9DF81D50 		ldrb	r5, [sp, #29]	@ zero_extendqisi2
 121              	.LVL7:
 122 0068 CFE7     		b	.L2
 123              	.L4:
  76:../../shields/Murata/src/modem.c ****           // TODO unsolicited responses
  77:../../shields/Murata/src/modem.c ****         }
  78:../../shields/Murata/src/modem.c ****         break;
  79:../../shields/Murata/src/modem.c ****       case ALP_OP_WRITE_FILE_DATA:
  80:../../shields/Murata/src/modem.c ****         if(callbacks->write_file_data_callback)
 124              		.loc 1 80 0
 125 006a 364B     		ldr	r3, .L26+8
 126 006c 1B68     		ldr	r3, [r3]
 127 006e DE68     		ldr	r6, [r3, #12]
 128 0070 002E     		cmp	r6, #0
 129 0072 CAD0     		beq	.L2
  81:../../shields/Murata/src/modem.c ****           callbacks->write_file_data_callback(action.file_data_operand.file_offset.file_id,
 130              		.loc 1 81 0
 131 0074 0AAB     		add	r3, sp, #40
 132 0076 099A     		ldr	r2, [sp, #36]
 133 0078 0899     		ldr	r1, [sp, #32]
 134 007a 9DF81C00 		ldrb	r0, [sp, #28]	@ zero_extendqisi2
 135 007e B047     		blx	r6
 136              	.LVL8:
 137 0080 C3E7     		b	.L2
 138              	.L6:
  82:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.file_offset.offset,
  83:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.provided_data_length,
  84:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.data);
  85:../../shields/Murata/src/modem.c ****         break;
  86:../../shields/Murata/src/modem.c ****       case ALP_OP_RETURN_FILE_DATA:
  87:../../shields/Murata/src/modem.c ****         if(callbacks->return_file_data_callback)
 139              		.loc 1 87 0
ARM GAS  /tmp/ccGLv8ND.s 			page 5


 140 0082 304B     		ldr	r3, .L26+8
 141 0084 1B68     		ldr	r3, [r3]
 142 0086 9E68     		ldr	r6, [r3, #8]
 143 0088 002E     		cmp	r6, #0
 144 008a BED0     		beq	.L2
  88:../../shields/Murata/src/modem.c ****           callbacks->return_file_data_callback(action.file_data_operand.file_offset.file_id,
 145              		.loc 1 88 0
 146 008c 0AAB     		add	r3, sp, #40
 147 008e 099A     		ldr	r2, [sp, #36]
 148 0090 0899     		ldr	r1, [sp, #32]
 149 0092 9DF81C00 		ldrb	r0, [sp, #28]	@ zero_extendqisi2
 150 0096 B047     		blx	r6
 151              	.LVL9:
 152 0098 B7E7     		b	.L2
 153              	.L7:
  89:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.file_offset.offset,
  90:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.provided_data_length,
  91:../../shields/Murata/src/modem.c ****                                                action.file_data_operand.data);
  92:../../shields/Murata/src/modem.c ****         break;
  93:../../shields/Murata/src/modem.c ****       case ALP_OP_RETURN_STATUS:
  94:../../shields/Murata/src/modem.c ****         if(action.status.type==ALP_ITF_ID_D7ASP)
 154              		.loc 1 94 0
 155 009a 9DF81C31 		ldrb	r3, [sp, #284]	@ zero_extendqisi2
 156 009e D72B     		cmp	r3, #215
 157 00a0 09D0     		beq	.L25
 158              	.L11:
  95:../../shields/Murata/src/modem.c ****         {
  96:../../shields/Murata/src/modem.c ****           d7ap_session_result_t interface_status = *((d7ap_session_result_t*)action.status.data);
  97:../../shields/Murata/src/modem.c ****           uint8_t addressee_len = d7ap_addressee_id_length(interface_status.addressee.ctrl.id_type)
  98:../../shields/Murata/src/modem.c ****           printf("received resp from: ");
  99:../../shields/Murata/src/modem.c ****           printf(interface_status.addressee.id, addressee_len);
 100:../../shields/Murata/src/modem.c ****         }
 101:../../shields/Murata/src/modem.c ****         if(callbacks->modem_interface_status_callback)
 159              		.loc 1 101 0
 160 00a2 284B     		ldr	r3, .L26+8
 161 00a4 1B68     		ldr	r3, [r3]
 162 00a6 5B68     		ldr	r3, [r3, #4]
 163 00a8 002B     		cmp	r3, #0
 164 00aa AED0     		beq	.L2
 102:../../shields/Murata/src/modem.c ****           callbacks->modem_interface_status_callback(action.status.type,&action.status.data);
 165              		.loc 1 102 0
 166 00ac 07A9     		add	r1, sp, #28
 167 00ae 9DF81C01 		ldrb	r0, [sp, #284]	@ zero_extendqisi2
 168 00b2 9847     		blx	r3
 169              	.LVL10:
 170 00b4 A9E7     		b	.L2
 171              	.L25:
 172              	.LBB7:
  96:../../shields/Murata/src/modem.c ****           uint8_t addressee_len = d7ap_addressee_id_length(interface_status.addressee.ctrl.id_type)
 173              		.loc 1 96 0
 174 00b6 6E46     		mov	r6, sp
 175 00b8 0DF11C0E 		add	lr, sp, #28
 176 00bc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 177 00c0 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 178 00c2 9EE80300 		ldm	lr, {r0, r1}
 179 00c6 46F8040B 		str	r0, [r6], #4
 180 00ca 26F8021B 		strh	r1, [r6], #2	@ movhi
ARM GAS  /tmp/ccGLv8ND.s 			page 6


 181 00ce 090C     		lsrs	r1, r1, #16
 182 00d0 3170     		strb	r1, [r6]
  97:../../shields/Murata/src/modem.c ****           printf("received resp from: ");
 183              		.loc 1 97 0
 184 00d2 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 185 00d6 C3F30113 		ubfx	r3, r3, #4, #2
 186              	.LVL11:
 187              	.LBB8:
 188              	.LBB9:
 189              		.file 2 "../../shields/Murata/inc/d7ap.h"
   1:../../shields/Murata/inc/d7ap.h **** 
   2:../../shields/Murata/inc/d7ap.h **** /* * OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra
   3:../../shields/Murata/inc/d7ap.h ****  * lowpower wireless sensor communication
   4:../../shields/Murata/inc/d7ap.h ****  *
   5:../../shields/Murata/inc/d7ap.h ****  * Copyright 2018 University of Antwerp
   6:../../shields/Murata/inc/d7ap.h ****  * Copyright 2018 CORTUS SA
   7:../../shields/Murata/inc/d7ap.h ****  *
   8:../../shields/Murata/inc/d7ap.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
   9:../../shields/Murata/inc/d7ap.h ****  * you may not use this file except in compliance with the License.
  10:../../shields/Murata/inc/d7ap.h ****  * You may obtain a copy of the License at
  11:../../shields/Murata/inc/d7ap.h ****  *
  12:../../shields/Murata/inc/d7ap.h ****  *   http://www.apache.org/licenses/LICENSE-2.0
  13:../../shields/Murata/inc/d7ap.h ****  *
  14:../../shields/Murata/inc/d7ap.h ****  * Unless required by applicable law or agreed to in writing, software
  15:../../shields/Murata/inc/d7ap.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  16:../../shields/Murata/inc/d7ap.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  17:../../shields/Murata/inc/d7ap.h ****  * See the License for the specific language governing permissions and
  18:../../shields/Murata/inc/d7ap.h ****  * limitations under the License.
  19:../../shields/Murata/inc/d7ap.h ****  *
  20:../../shields/Murata/inc/d7ap.h ****  * \author philippe.nunes@cortus.com
  21:../../shields/Murata/inc/d7ap.h ****  */
  22:../../shields/Murata/inc/d7ap.h **** 
  23:../../shields/Murata/inc/d7ap.h **** /**
  24:../../shields/Murata/inc/d7ap.h ****  * @file d7ap.h
  25:../../shields/Murata/inc/d7ap.h ****  * @addtogroup d7ap
  26:../../shields/Murata/inc/d7ap.h ****  * @ingroup framework
  27:../../shields/Murata/inc/d7ap.h ****  * @{
  28:../../shields/Murata/inc/d7ap.h ****  * @brief D7AP public types (used for modem and/or D7AP stack itself)
  29:../../shields/Murata/inc/d7ap.h ****  *
  30:../../shields/Murata/inc/d7ap.h ****  */
  31:../../shields/Murata/inc/d7ap.h **** 
  32:../../shields/Murata/inc/d7ap.h **** #ifndef D7AP_H
  33:../../shields/Murata/inc/d7ap.h **** #define D7AP_H
  34:../../shields/Murata/inc/d7ap.h **** 
  35:../../shields/Murata/inc/d7ap.h **** #include "types.h"
  36:../../shields/Murata/inc/d7ap.h **** #include "assert.h"
  37:../../shields/Murata/inc/d7ap.h **** 
  38:../../shields/Murata/inc/d7ap.h **** #define D7AP_MAX_CLIENT_COUNT 8
  39:../../shields/Murata/inc/d7ap.h **** 
  40:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_UID_FILE_ID 0x00
  41:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_UID_SIZE 8
  42:../../shields/Murata/inc/d7ap.h **** 
  43:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_FILE_ID 0x02
  44:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE 6
  45:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_GIT_SHA1_SIZE 7
  46:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_SIZE (2 + D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE + D7A_FILE_FIRM
  47:../../shields/Murata/inc/d7ap.h **** 
ARM GAS  /tmp/ccGLv8ND.s 			page 7


  48:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_FILE_ID	0x0A
  49:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_SIZE		6
  50:../../shields/Murata/inc/d7ap.h **** 
  51:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_ID 0x20 // the first access class file
  52:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_SIZE 65
  53:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_COUNT 15
  54:../../shields/Murata/inc/d7ap.h **** 
  55:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY		0x0D
  56:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_SIZE	5
  57:../../shields/Murata/inc/d7ap.h **** 
  58:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY		0x0E
  59:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY_SIZE	16
  60:../../shields/Murata/inc/d7ap.h **** 
  61:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG			0x0F
  62:../../shields/Murata/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG_SIZE	2 + (FRAMEWORK_FS_TRUSTED_NODE_TABLE_SIZE)*(D7A_FILE_N
  63:../../shields/Murata/inc/d7ap.h **** 
  64:../../shields/Murata/inc/d7ap.h **** 
  65:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_NBID_ID_LENGTH 1
  66:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_NOID_ID_LENGTH 0
  67:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_UID_ID_LENGTH   8
  68:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_VID_LENGTH      2
  69:../../shields/Murata/inc/d7ap.h **** 
  70:../../shields/Murata/inc/d7ap.h **** #define ID_TYPE_IS_BROADCAST(id_type) (id_type == ID_TYPE_NBID || id_type == ID_TYPE_NOID)
  71:../../shields/Murata/inc/d7ap.h **** 
  72:../../shields/Murata/inc/d7ap.h **** #define D7A_PAYLOAD_MAX_SIZE 239 // TODO confirm this value when FEC and security are disabled
  73:../../shields/Murata/inc/d7ap.h **** 
  74:../../shields/Murata/inc/d7ap.h **** 
  75:../../shields/Murata/inc/d7ap.h **** typedef enum {
  76:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_NBID = 0,
  77:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_NOID = 1,
  78:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_UID = 2,
  79:../../shields/Murata/inc/d7ap.h ****     ID_TYPE_VID = 3
  80:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_id_type_t;
  81:../../shields/Murata/inc/d7ap.h **** 
  82:../../shields/Murata/inc/d7ap.h **** typedef enum
  83:../../shields/Murata/inc/d7ap.h **** {
  84:../../shields/Murata/inc/d7ap.h ****     AES_NONE = 0, /* No security */
  85:../../shields/Murata/inc/d7ap.h ****     AES_CTR = 0x01, /* data confidentiality */
  86:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_128 = 0x02, /* data authenticity */
  87:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_64 = 0x03, /* data authenticity */
  88:../../shields/Murata/inc/d7ap.h ****     AES_CBC_MAC_32 = 0x04, /* data authenticity */
  89:../../shields/Murata/inc/d7ap.h ****     AES_CCM_128 = 0x05, /* data confidentiality and authenticity*/
  90:../../shields/Murata/inc/d7ap.h ****     AES_CCM_64 = 0x06, /* data confidentiality and authenticity*/
  91:../../shields/Murata/inc/d7ap.h ****     AES_CCM_32 = 0x07, /* data confidentiality and authenticity*/
  92:../../shields/Murata/inc/d7ap.h **** } nls_method_t;
  93:../../shields/Murata/inc/d7ap.h **** 
  94:../../shields/Murata/inc/d7ap.h **** typedef struct {
  95:../../shields/Murata/inc/d7ap.h ****     union {
  96:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
  97:../../shields/Murata/inc/d7ap.h ****         struct {
  98:../../shields/Murata/inc/d7ap.h ****             nls_method_t nls_method : 4;
  99:../../shields/Murata/inc/d7ap.h ****             d7ap_addressee_id_type_t id_type : 2;
 100:../../shields/Murata/inc/d7ap.h ****             uint8_t _rfu : 2;
 101:../../shields/Murata/inc/d7ap.h ****         };
 102:../../shields/Murata/inc/d7ap.h ****     };
 103:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_ctrl_t;
 104:../../shields/Murata/inc/d7ap.h **** 
ARM GAS  /tmp/ccGLv8ND.s 			page 8


 105:../../shields/Murata/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 106:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_ctrl_t ctrl;
 107:../../shields/Murata/inc/d7ap.h ****     union {
 108:../../shields/Murata/inc/d7ap.h ****         uint8_t access_class;
 109:../../shields/Murata/inc/d7ap.h ****         struct {
 110:../../shields/Murata/inc/d7ap.h ****             uint8_t access_mask : 4;
 111:../../shields/Murata/inc/d7ap.h ****             uint8_t access_specifier : 4;
 112:../../shields/Murata/inc/d7ap.h ****         };
 113:../../shields/Murata/inc/d7ap.h ****     };
 114:../../shields/Murata/inc/d7ap.h ****     uint8_t id[8]; // TODO assuming 8 byte id for now
 115:../../shields/Murata/inc/d7ap.h **** } d7ap_addressee_t;
 116:../../shields/Murata/inc/d7ap.h **** 
 117:../../shields/Murata/inc/d7ap.h **** typedef struct {
 118:../../shields/Murata/inc/d7ap.h ****     union {
 119:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
 120:../../shields/Murata/inc/d7ap.h ****         struct {
 121:../../shields/Murata/inc/d7ap.h ****             uint8_t _rfu : 4;
 122:../../shields/Murata/inc/d7ap.h ****             bool ucast : 1;
 123:../../shields/Murata/inc/d7ap.h ****             bool retry : 1;
 124:../../shields/Murata/inc/d7ap.h ****             bool missed : 1;
 125:../../shields/Murata/inc/d7ap.h ****             bool nls : 1;
 126:../../shields/Murata/inc/d7ap.h ****         };
 127:../../shields/Murata/inc/d7ap.h ****     };
 128:../../shields/Murata/inc/d7ap.h **** } d7ap_sp_state_t;
 129:../../shields/Murata/inc/d7ap.h **** 
 130:../../shields/Murata/inc/d7ap.h **** typedef struct
 131:../../shields/Murata/inc/d7ap.h **** {
 132:../../shields/Murata/inc/d7ap.h ****     uint8_t channel_header;         /**< PHY layer channel header */
 133:../../shields/Murata/inc/d7ap.h ****     uint16_t center_freq_index;     /**< The center frequency index of the channel id */
 134:../../shields/Murata/inc/d7ap.h **** } d7ap_channel_t;
 135:../../shields/Murata/inc/d7ap.h **** 
 136:../../shields/Murata/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 137:../../shields/Murata/inc/d7ap.h ****     d7ap_channel_t channel;
 138:../../shields/Murata/inc/d7ap.h ****     uint8_t rx_level;
 139:../../shields/Murata/inc/d7ap.h ****     uint8_t link_budget;
 140:../../shields/Murata/inc/d7ap.h ****     uint8_t link_quality;
 141:../../shields/Murata/inc/d7ap.h ****     uint8_t target_rx_level;
 142:../../shields/Murata/inc/d7ap.h ****     d7ap_sp_state_t status;
 143:../../shields/Murata/inc/d7ap.h ****     uint8_t fifo_token;
 144:../../shields/Murata/inc/d7ap.h ****     uint8_t seqnr;
 145:../../shields/Murata/inc/d7ap.h ****     uint8_t response_to;
 146:../../shields/Murata/inc/d7ap.h ****     bool response_expected;
 147:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_t addressee;
 148:../../shields/Murata/inc/d7ap.h **** } d7ap_session_result_t;
 149:../../shields/Murata/inc/d7ap.h **** 
 150:../../shields/Murata/inc/d7ap.h **** typedef enum  {
 151:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_NO = 0,
 152:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ALL = 1,
 153:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ANY = 2,
 154:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_NO_RPT = 4,
 155:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_ON_ERR = 5,
 156:../../shields/Murata/inc/d7ap.h ****     SESSION_RESP_MODE_PREFERRED = 6,
 157:../../shields/Murata/inc/d7ap.h **** } d7ap_session_resp_mode_t;
 158:../../shields/Murata/inc/d7ap.h **** 
 159:../../shields/Murata/inc/d7ap.h **** typedef enum {
 160:../../shields/Murata/inc/d7ap.h ****     SESSION_RETRY_MODE_NO = 0
 161:../../shields/Murata/inc/d7ap.h **** } d7ap_session_retry_mode_t;
ARM GAS  /tmp/ccGLv8ND.s 			page 9


 162:../../shields/Murata/inc/d7ap.h **** 
 163:../../shields/Murata/inc/d7ap.h **** typedef struct {
 164:../../shields/Murata/inc/d7ap.h ****     union {
 165:../../shields/Murata/inc/d7ap.h ****         uint8_t raw;
 166:../../shields/Murata/inc/d7ap.h ****         struct {
 167:../../shields/Murata/inc/d7ap.h ****             d7ap_session_resp_mode_t qos_resp_mode : 3;
 168:../../shields/Murata/inc/d7ap.h ****             d7ap_session_retry_mode_t qos_retry_mode: 3;
 169:../../shields/Murata/inc/d7ap.h ****             bool qos_record : 1;
 170:../../shields/Murata/inc/d7ap.h ****             bool qos_stop_on_error : 1;
 171:../../shields/Murata/inc/d7ap.h ****         };
 172:../../shields/Murata/inc/d7ap.h ****     };
 173:../../shields/Murata/inc/d7ap.h **** } d7ap_session_qos_t;
 174:../../shields/Murata/inc/d7ap.h **** 
 175:../../shields/Murata/inc/d7ap.h **** typedef struct {
 176:../../shields/Murata/inc/d7ap.h ****     d7ap_session_qos_t qos;
 177:../../shields/Murata/inc/d7ap.h ****     uint8_t dormant_timeout;
 178:../../shields/Murata/inc/d7ap.h ****     d7ap_addressee_t addressee;
 179:../../shields/Murata/inc/d7ap.h **** } d7ap_session_config_t;
 180:../../shields/Murata/inc/d7ap.h **** 
 181:../../shields/Murata/inc/d7ap.h **** typedef void (*d7ap_receive_callback)(uint16_t trans_id, uint8_t* payload, uint8_t len, d7ap_sessio
 182:../../shields/Murata/inc/d7ap.h **** /**
 183:../../shields/Murata/inc/d7ap.h ****  * @brief Called when the stack received an unsolicited message
 184:../../shields/Murata/inc/d7ap.h ****  * @returns true when the unsolicited request will result in a response payload from the upper laye
 185:../../shields/Murata/inc/d7ap.h ****  * the upper layer should return false, so the stack can respond with an ack immediately (if reques
 186:../../shields/Murata/inc/d7ap.h ****  */
 187:../../shields/Murata/inc/d7ap.h **** typedef bool (*d7ap_receive_unsolicited_callback)(uint8_t* payload, uint8_t len, d7ap_session_resul
 188:../../shields/Murata/inc/d7ap.h **** typedef void (*d7ap_transmitted_callback)(uint16_t trans_id, error_t error);
 189:../../shields/Murata/inc/d7ap.h **** 
 190:../../shields/Murata/inc/d7ap.h **** typedef struct{
 191:../../shields/Murata/inc/d7ap.h ****     d7ap_receive_callback  receive_cb;                /*< receive callback,
 192:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, all message received for clientI
 193:../../shields/Murata/inc/d7ap.h ****     d7ap_transmitted_callback transmitted_cb;         /*< send completion callback,
 194:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 195:../../shields/Murata/inc/d7ap.h ****     d7ap_receive_unsolicited_callback unsolicited_cb; /*< unsolicited data callback,
 196:../../shields/Murata/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 197:../../shields/Murata/inc/d7ap.h **** } d7ap_resource_desc_t;
 198:../../shields/Murata/inc/d7ap.h **** 
 199:../../shields/Murata/inc/d7ap.h **** 
 200:../../shields/Murata/inc/d7ap.h **** //=========================== prototypes ======================================
 201:../../shields/Murata/inc/d7ap.h **** /**
 202:../../shields/Murata/inc/d7ap.h ****  * @brief   Initializes d7a module
 203:../../shields/Murata/inc/d7ap.h ****  */
 204:../../shields/Murata/inc/d7ap.h **** void d7ap_init(void);
 205:../../shields/Murata/inc/d7ap.h **** 
 206:../../shields/Murata/inc/d7ap.h **** 
 207:../../shields/Murata/inc/d7ap.h **** /**
 208:../../shields/Murata/inc/d7ap.h ****  * @brief   Register the client callbacks
 209:../../shields/Murata/inc/d7ap.h ****  *
 210:../../shields/Murata/inc/d7ap.h ****  * @param[in] desc pointer to the client resource
 211:../../shields/Murata/inc/d7ap.h ****  *
 212:../../shields/Murata/inc/d7ap.h ****  * @return  the client Id
 213:../../shields/Murata/inc/d7ap.h ****  */
 214:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_register(d7ap_resource_desc_t* desc);
 215:../../shields/Murata/inc/d7ap.h **** 
 216:../../shields/Murata/inc/d7ap.h **** 
 217:../../shields/Murata/inc/d7ap.h **** /**
 218:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the device address UID/VID
ARM GAS  /tmp/ccGLv8ND.s 			page 10


 219:../../shields/Murata/inc/d7ap.h ****  *
 220:../../shields/Murata/inc/d7ap.h ****  * @param[out] *addr   Pointer to the device addressee UID/VID
 221:../../shields/Murata/inc/d7ap.h ****  */
 222:../../shields/Murata/inc/d7ap.h **** void d7ap_get_dev_addr(d7ap_addressee_t* addr);
 223:../../shields/Murata/inc/d7ap.h **** 
 224:../../shields/Murata/inc/d7ap.h **** 
 225:../../shields/Murata/inc/d7ap.h **** /**
 226:../../shields/Murata/inc/d7ap.h ****  * @brief Get the maximum payload size.
 227:../../shields/Murata/inc/d7ap.h ****  *
 228:../../shields/Murata/inc/d7ap.h ****  * @param[in] clientId  The d7A  instance Id.
 229:../../shields/Murata/inc/d7ap.h ****  *
 230:../../shields/Murata/inc/d7ap.h ****  * @returns the maximum payload size in bytes.
 231:../../shields/Murata/inc/d7ap.h ****  */
 232:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_payload_max_size(uint8_t clientId);
 233:../../shields/Murata/inc/d7ap.h **** 
 234:../../shields/Murata/inc/d7ap.h **** 
 235:../../shields/Murata/inc/d7ap.h **** /**
 236:../../shields/Murata/inc/d7ap.h ****  * @brief   Send a packet over DASH7 network
 237:../../shields/Murata/inc/d7ap.h ****  *
 238:../../shields/Murata/inc/d7ap.h ****  * @param[in] clientID  The registered client Id
 239:../../shields/Murata/inc/d7ap.h ****  * @param[in] config    The configuration for the d7a session. Set to NULL to use the current confi
 240:../../shields/Murata/inc/d7ap.h ****  * @param[in] payload   The pointer to the payload buffer
 241:../../shields/Murata/inc/d7ap.h ****  * @param[in] len       The length of the payload
 242:../../shields/Murata/inc/d7ap.h ****  * @param[in] expected_response_len The length of the expected response
 243:../../shields/Murata/inc/d7ap.h ****  * @param[in,out] trans_id   Set the value of this parameter to NULL to cause the function to execu
 244:../../shields/Murata/inc/d7ap.h ****  *                           If this parameter is not NULL, the call executes asynchronously. Upon 
 245:../../shields/Murata/inc/d7ap.h ****  *                           this points to the transaction identifier associated with the asynchro
 246:../../shields/Murata/inc/d7ap.h ****  * @return 0 on success
 247:../../shields/Murata/inc/d7ap.h ****  * @return an error (errno.h) in case of failure
 248:../../shields/Murata/inc/d7ap.h ****  */
 249:../../shields/Murata/inc/d7ap.h **** error_t d7ap_send(uint8_t clientId, d7ap_session_config_t* config, uint8_t* payload,
 250:../../shields/Murata/inc/d7ap.h ****                    uint8_t len, uint8_t expected_response_len, uint16_t* trans_id);
 251:../../shields/Murata/inc/d7ap.h **** 
 252:../../shields/Murata/inc/d7ap.h **** 
 253:../../shields/Murata/inc/d7ap.h **** /**
 254:../../shields/Murata/inc/d7ap.h ****  * @brief   Sets the channels TX power index
 255:../../shields/Murata/inc/d7ap.h ****  *
 256:../../shields/Murata/inc/d7ap.h ****  * @param[in] power  The TX power index (from 1 to 16)
 257:../../shields/Murata/inc/d7ap.h ****  */
 258:../../shields/Murata/inc/d7ap.h **** void d7ap_set_tx_power(uint8_t power);
 259:../../shields/Murata/inc/d7ap.h **** 
 260:../../shields/Murata/inc/d7ap.h **** 
 261:../../shields/Murata/inc/d7ap.h **** /**
 262:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the channels TX power index
 263:../../shields/Murata/inc/d7ap.h ****  *
 264:../../shields/Murata/inc/d7ap.h ****  * @return  The TX power index (from 1 to 16)
 265:../../shields/Murata/inc/d7ap.h ****  */
 266:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_tx_power(void);
 267:../../shields/Murata/inc/d7ap.h **** 
 268:../../shields/Murata/inc/d7ap.h **** 
 269:../../shields/Murata/inc/d7ap.h **** /**
 270:../../shields/Murata/inc/d7ap.h ****  * @brief   Sets the device access class
 271:../../shields/Murata/inc/d7ap.h ****  *
 272:../../shields/Murata/inc/d7ap.h ****  * @param[in] access_class  The device access class
 273:../../shields/Murata/inc/d7ap.h ****  */
 274:../../shields/Murata/inc/d7ap.h **** void d7ap_set_access_class(uint8_t access_class);
 275:../../shields/Murata/inc/d7ap.h **** 
ARM GAS  /tmp/ccGLv8ND.s 			page 11


 276:../../shields/Murata/inc/d7ap.h **** 
 277:../../shields/Murata/inc/d7ap.h **** /**
 278:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the device access class
 279:../../shields/Murata/inc/d7ap.h ****  *
 280:../../shields/Murata/inc/d7ap.h ****  * @return  The device access class
 281:../../shields/Murata/inc/d7ap.h ****  */
 282:../../shields/Murata/inc/d7ap.h **** uint8_t d7ap_get_access_class(void);
 283:../../shields/Murata/inc/d7ap.h **** 
 284:../../shields/Murata/inc/d7ap.h **** /**
 285:../../shields/Murata/inc/d7ap.h ****  * @brief   Gets the length of the addressee Id
 286:../../shields/Murata/inc/d7ap.h ****  *
 287:../../shields/Murata/inc/d7ap.h ****  * @param[in] id_type  The addressee Id type
 288:../../shields/Murata/inc/d7ap.h ****  * @return  The length of the addressee Id according the addressee Id type
 289:../../shields/Murata/inc/d7ap.h ****  */
 290:../../shields/Murata/inc/d7ap.h **** static inline uint8_t d7ap_addressee_id_length(d7ap_addressee_id_type_t id_type) {
 291:../../shields/Murata/inc/d7ap.h ****   switch(id_type)
 190              		.loc 2 291 0
 191 00da 032B     		cmp	r3, #3
 192 00dc 07D8     		bhi	.L12
 193 00de DFE803F0 		tbb	[pc, r3]
 194              	.L14:
 195 00e2 0F       		.byte	(.L21-.L14)/2
 196 00e3 0D       		.byte	(.L15-.L14)/2
 197 00e4 02       		.byte	(.L16-.L14)/2
 198 00e5 04       		.byte	(.L17-.L14)/2
 199              		.p2align 1
 200              	.L16:
 292:../../shields/Murata/inc/d7ap.h ****   {
 293:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NOID:
 294:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_NOID_ID_LENGTH;
 295:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 296:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_NBID_ID_LENGTH;
 297:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 298:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_UID_ID_LENGTH;
 201              		.loc 2 298 0
 202 00e6 0826     		movs	r6, #8
 203 00e8 0BE0     		b	.L13
 204              	.L17:
 299:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_VID:
 300:../../shields/Murata/inc/d7ap.h ****         return ID_TYPE_VID_LENGTH;
 205              		.loc 2 300 0
 206 00ea 0226     		movs	r6, #2
 207 00ec 09E0     		b	.L13
 208              	.L12:
 301:../../shields/Murata/inc/d7ap.h ****       default:
 302:../../shields/Murata/inc/d7ap.h ****         assert(false);
 209              		.loc 2 302 0
 210 00ee 164B     		ldr	r3, .L26+12
 211 00f0 164A     		ldr	r2, .L26+16
 212 00f2 4FF49771 		mov	r1, #302
 213 00f6 1648     		ldr	r0, .L26+20
 214 00f8 FFF7FEFF 		bl	__assert_func
 215              	.LVL12:
 216              	.L15:
 294:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_NBID:
 217              		.loc 2 294 0
 218 00fc 0026     		movs	r6, #0
ARM GAS  /tmp/ccGLv8ND.s 			page 12


 219 00fe 00E0     		b	.L13
 220              	.L21:
 296:../../shields/Murata/inc/d7ap.h ****       case ID_TYPE_UID:
 221              		.loc 2 296 0
 222 0100 0126     		movs	r6, #1
 223              	.L13:
 224              	.LVL13:
 225              	.LBE9:
 226              	.LBE8:
  98:../../shields/Murata/src/modem.c ****           printf(interface_status.addressee.id, addressee_len);
 227              		.loc 1 98 0
 228 0102 1448     		ldr	r0, .L26+24
 229 0104 FFF7FEFF 		bl	printf
 230              	.LVL14:
  99:../../shields/Murata/src/modem.c ****         }
 231              		.loc 1 99 0
 232 0108 3146     		mov	r1, r6
 233 010a 0DF10F00 		add	r0, sp, #15
 234 010e FFF7FEFF 		bl	printf
 235              	.LVL15:
 236 0112 C6E7     		b	.L11
 237              	.L3:
 238              	.LBE7:
 103:../../shields/Murata/src/modem.c ****         break;
 104:../../shields/Murata/src/modem.c ****       default:
 105:../../shields/Murata/src/modem.c ****         assert(false);
 239              		.loc 1 105 0
 240 0114 0C4B     		ldr	r3, .L26+12
 241 0116 104A     		ldr	r2, .L26+28
 242 0118 6921     		movs	r1, #105
 243 011a 1048     		ldr	r0, .L26+32
 244 011c FFF7FEFF 		bl	__assert_func
 245              	.LVL16:
 246              	.L23:
 247              	.LBE6:
 106:../../shields/Murata/src/modem.c ****     }
 107:../../shields/Murata/src/modem.c ****   }
 108:../../shields/Murata/src/modem.c **** 
 109:../../shields/Murata/src/modem.c **** 
 110:../../shields/Murata/src/modem.c ****   if(command_completed) {
 248              		.loc 1 110 0
 249 0120 57B1     		cbz	r7, .L1
 111:../../shields/Murata/src/modem.c ****     DPRINT("LoRaWAN modem command with tag %i completed ", command.tag_id);
 112:../../shields/Murata/src/modem.c ****     if(callbacks->command_completed_callback)
 250              		.loc 1 112 0
 251 0122 084B     		ldr	r3, .L26+8
 252 0124 1B68     		ldr	r3, [r3]
 253 0126 1B68     		ldr	r3, [r3]
 254 0128 1BB1     		cbz	r3, .L20
 113:../../shields/Murata/src/modem.c ****       callbacks->command_completed_callback(completed_with_error,command.tag_id);
 255              		.loc 1 113 0
 256 012a 044A     		ldr	r2, .L26
 257 012c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 258 012e 2846     		mov	r0, r5
 259 0130 9847     		blx	r3
 260              	.LVL17:
 261              	.L20:
ARM GAS  /tmp/ccGLv8ND.s 			page 13


 114:../../shields/Murata/src/modem.c **** 
 115:../../shields/Murata/src/modem.c ****     command.is_active = false;
 262              		.loc 1 115 0
 263 0132 0022     		movs	r2, #0
 264 0134 014B     		ldr	r3, .L26
 265 0136 5A70     		strb	r2, [r3, #1]
 266              	.L1:
 116:../../shields/Murata/src/modem.c ****   }
 117:../../shields/Murata/src/modem.c **** 
 118:../../shields/Murata/src/modem.c **** }
 267              		.loc 1 118 0
 268 0138 4BB0     		add	sp, sp, #300
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 20
 271              		@ sp needed
 272 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 273              	.LVL18:
 274              	.L27:
 275              		.align	2
 276              	.L26:
 277 013c 00000000 		.word	.LANCHOR0
 278 0140 00000000 		.word	.LC0
 279 0144 00000000 		.word	.LANCHOR1
 280 0148 30000000 		.word	.LC1
 281 014c 00000000 		.word	.LANCHOR2
 282 0150 38000000 		.word	.LC2
 283 0154 58000000 		.word	.LC3
 284 0158 00000000 		.word	.LANCHOR3
 285 015c 70000000 		.word	.LC4
 286              		.cfi_endproc
 287              	.LFE125:
 289              		.section	.text.modem_cb_init,"ax",%progbits
 290              		.align	1
 291              		.global	modem_cb_init
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	modem_cb_init:
 298              	.LFB126:
 119:../../shields/Murata/src/modem.c **** 
 120:../../shields/Murata/src/modem.c **** void modem_cb_init(modem_callbacks_t* cbs)
 121:../../shields/Murata/src/modem.c **** {
 299              		.loc 1 121 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL19:
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 122:../../shields/Murata/src/modem.c ****     callbacks = cbs;
 309              		.loc 1 122 0
 310 0002 034B     		ldr	r3, .L31
 311 0004 1860     		str	r0, [r3]
ARM GAS  /tmp/ccGLv8ND.s 			page 14


 123:../../shields/Murata/src/modem.c ****     if(cbs->modem_rebooted_callback)
 312              		.loc 1 123 0
 313 0006 0069     		ldr	r0, [r0, #16]
 314              	.LVL20:
 315 0008 08B1     		cbz	r0, .L28
 124:../../shields/Murata/src/modem.c ****       modem_interface_set_target_rebooted_callback(cbs->modem_rebooted_callback);
 316              		.loc 1 124 0
 317 000a FFF7FEFF 		bl	modem_interface_set_target_rebooted_callback
 318              	.LVL21:
 319              	.L28:
 320 000e 08BD     		pop	{r3, pc}
 321              	.L32:
 322              		.align	2
 323              	.L31:
 324 0010 00000000 		.word	.LANCHOR1
 325              		.cfi_endproc
 326              	.LFE126:
 328              		.section	.text.modem_process_fifo,"ax",%progbits
 329              		.align	1
 330              		.global	modem_process_fifo
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	modem_process_fifo:
 337              	.LFB127:
 125:../../shields/Murata/src/modem.c **** }
 126:../../shields/Murata/src/modem.c **** 
 127:../../shields/Murata/src/modem.c **** void modem_process_fifo()
 128:../../shields/Murata/src/modem.c **** {
 338              		.loc 1 128 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 10B5     		push	{r4, lr}
 343              	.LCFI4:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 4, -8
 346              		.cfi_offset 14, -4
 347              	.LVL22:
 129:../../shields/Murata/src/modem.c ****   uint8_t retries = 0;
 348              		.loc 1 129 0
 349 0002 0024     		movs	r4, #0
 130:../../shields/Murata/src/modem.c ****   while(fifo_get_size(&rx_fifo)&& retries < 50)
 350              		.loc 1 130 0
 351 0004 06E0     		b	.L34
 352              	.LVL23:
 353              	.L36:
 354              	.LBB10:
 131:../../shields/Murata/src/modem.c ****   { 
 132:../../shields/Murata/src/modem.c ****     process_rx_fifo();
 355              		.loc 1 132 0
 356 0006 FFF7FEFF 		bl	process_rx_fifo
 357              	.LVL24:
 133:../../shields/Murata/src/modem.c ****     HAL_Delay(5);
 358              		.loc 1 133 0
 359 000a 0520     		movs	r0, #5
ARM GAS  /tmp/ccGLv8ND.s 			page 15


 360 000c FFF7FEFF 		bl	HAL_Delay
 361              	.LVL25:
 134:../../shields/Murata/src/modem.c ****     retries++;
 362              		.loc 1 134 0
 363 0010 0134     		adds	r4, r4, #1
 364              	.LVL26:
 365 0012 E4B2     		uxtb	r4, r4
 366              	.LVL27:
 367              	.L34:
 368              	.LBE10:
 130:../../shields/Murata/src/modem.c ****   { 
 369              		.loc 1 130 0
 370 0014 0348     		ldr	r0, .L38
 371 0016 FFF7FEFF 		bl	fifo_get_size
 372              	.LVL28:
 373 001a 08B1     		cbz	r0, .L33
 130:../../shields/Murata/src/modem.c ****   { 
 374              		.loc 1 130 0 is_stmt 0 discriminator 1
 375 001c 312C     		cmp	r4, #49
 376 001e F2D9     		bls	.L36
 377              	.L33:
 378 0020 10BD     		pop	{r4, pc}
 379              	.LVL29:
 380              	.L39:
 381 0022 00BF     		.align	2
 382              	.L38:
 383 0024 00000000 		.word	rx_fifo
 384              		.cfi_endproc
 385              	.LFE127:
 387              		.section	.text.modem_init,"ax",%progbits
 388              		.align	1
 389              		.global	modem_init
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	modem_init:
 396              	.LFB128:
 135:../../shields/Murata/src/modem.c ****   }
 136:../../shields/Murata/src/modem.c **** }
 137:../../shields/Murata/src/modem.c **** 
 138:../../shields/Murata/src/modem.c **** //void modem_init(uint8_t uart_idx, uint32_t baudrate)
 139:../../shields/Murata/src/modem.c **** void modem_init(UART_HandleTypeDef* uart)
 140:../../shields/Murata/src/modem.c **** {
 397              		.loc 1 140 0 is_stmt 1
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL30:
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI5:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 141:../../shields/Murata/src/modem.c ****   modem_interface_init(uart);//uart_idx, baudrate, 0, 0); // TODO pins
 407              		.loc 1 141 0
 408 0002 FFF7FEFF 		bl	modem_interface_init
ARM GAS  /tmp/ccGLv8ND.s 			page 16


 409              	.LVL31:
 142:../../shields/Murata/src/modem.c ****   modem_interface_register_handler(&process_serial_frame, SERIAL_MESSAGE_TYPE_ALP_DATA);
 410              		.loc 1 142 0
 411 0006 0121     		movs	r1, #1
 412 0008 0348     		ldr	r0, .L42
 413 000a FFF7FEFF 		bl	modem_interface_register_handler
 414              	.LVL32:
 143:../../shields/Murata/src/modem.c ****   command.is_active = false;
 415              		.loc 1 143 0
 416 000e 0022     		movs	r2, #0
 417 0010 024B     		ldr	r3, .L42+4
 418 0012 5A70     		strb	r2, [r3, #1]
 419 0014 08BD     		pop	{r3, pc}
 420              	.L43:
 421 0016 00BF     		.align	2
 422              	.L42:
 423 0018 00000000 		.word	process_serial_frame
 424 001c 00000000 		.word	.LANCHOR0
 425              		.cfi_endproc
 426              	.LFE128:
 428              		.section	.text.modem_reinit,"ax",%progbits
 429              		.align	1
 430              		.global	modem_reinit
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv4-sp-d16
 436              	modem_reinit:
 437              	.LFB129:
 144:../../shields/Murata/src/modem.c **** }
 145:../../shields/Murata/src/modem.c **** 
 146:../../shields/Murata/src/modem.c **** void modem_reinit() {
 438              		.loc 1 146 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 147:../../shields/Murata/src/modem.c ****   command.is_active = false;
 443              		.loc 1 147 0
 444 0000 0022     		movs	r2, #0
 445 0002 014B     		ldr	r3, .L45
 446 0004 5A70     		strb	r2, [r3, #1]
 447 0006 7047     		bx	lr
 448              	.L46:
 449              		.align	2
 450              	.L45:
 451 0008 00000000 		.word	.LANCHOR0
 452              		.cfi_endproc
 453              	.LFE129:
 455              		.section	.text.modem_send_ping,"ax",%progbits
 456              		.align	1
 457              		.global	modem_send_ping
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu fpv4-sp-d16
 463              	modem_send_ping:
ARM GAS  /tmp/ccGLv8ND.s 			page 17


 464              	.LFB130:
 148:../../shields/Murata/src/modem.c **** }
 149:../../shields/Murata/src/modem.c **** 
 150:../../shields/Murata/src/modem.c **** void modem_send_ping() {
 465              		.loc 1 150 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 8
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 00B5     		push	{lr}
 470              	.LCFI6:
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 14, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              	.LCFI7:
 475              		.cfi_def_cfa_offset 16
 151:../../shields/Murata/src/modem.c ****   uint8_t ping_request[1]={0x01};
 476              		.loc 1 151 0
 477 0004 0121     		movs	r1, #1
 478 0006 02A8     		add	r0, sp, #8
 479 0008 00F8041D 		strb	r1, [r0, #-4]!
 152:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes((uint8_t*) &ping_request, 1, SERIAL_MESSAGE_TYPE_PING_REQUEST);
 480              		.loc 1 152 0
 481 000c 0222     		movs	r2, #2
 482 000e FFF7FEFF 		bl	modem_interface_transfer_bytes
 483              	.LVL33:
 153:../../shields/Murata/src/modem.c **** }
 484              		.loc 1 153 0
 485 0012 03B0     		add	sp, sp, #12
 486              	.LCFI8:
 487              		.cfi_def_cfa_offset 4
 488              		@ sp needed
 489 0014 5DF804FB 		ldr	pc, [sp], #4
 490              		.cfi_endproc
 491              	.LFE130:
 493              		.section	.text.modem_execute_raw_alp,"ax",%progbits
 494              		.align	1
 495              		.global	modem_execute_raw_alp
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	modem_execute_raw_alp:
 502              	.LFB131:
 154:../../shields/Murata/src/modem.c **** 
 155:../../shields/Murata/src/modem.c **** bool modem_execute_raw_alp(uint8_t* alp, uint8_t len) {
 503              		.loc 1 155 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              	.LVL34:
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI9:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
 156:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes(alp, len, SERIAL_MESSAGE_TYPE_ALP_DATA);
 513              		.loc 1 156 0
ARM GAS  /tmp/ccGLv8ND.s 			page 18


 514 0002 0122     		movs	r2, #1
 515 0004 FFF7FEFF 		bl	modem_interface_transfer_bytes
 516              	.LVL35:
 157:../../shields/Murata/src/modem.c **** }
 517              		.loc 1 157 0
 518 0008 08BD     		pop	{r3, pc}
 519              		.cfi_endproc
 520              	.LFE131:
 522              		.section	.text.alloc_command,"ax",%progbits
 523              		.align	1
 524              		.global	alloc_command
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	alloc_command:
 531              	.LFB132:
 158:../../shields/Murata/src/modem.c **** 
 159:../../shields/Murata/src/modem.c **** bool alloc_command() {
 532              		.loc 1 159 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536 0000 70B5     		push	{r4, r5, r6, lr}
 537              	.LCFI10:
 538              		.cfi_def_cfa_offset 16
 539              		.cfi_offset 4, -16
 540              		.cfi_offset 5, -12
 541              		.cfi_offset 6, -8
 542              		.cfi_offset 14, -4
 160:../../shields/Murata/src/modem.c ****   if(command.is_active) {
 543              		.loc 1 160 0
 544 0002 0F4B     		ldr	r3, .L56
 545 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 546 0006 ABB9     		cbnz	r3, .L55
 161:../../shields/Murata/src/modem.c ****     printf("prev command still active");
 162:../../shields/Murata/src/modem.c ****     return false;
 163:../../shields/Murata/src/modem.c ****   }
 164:../../shields/Murata/src/modem.c **** 
 165:../../shields/Murata/src/modem.c ****   command.is_active = true;
 547              		.loc 1 165 0
 548 0008 0D4D     		ldr	r5, .L56
 549 000a 0124     		movs	r4, #1
 550 000c 6C70     		strb	r4, [r5, #1]
 166:../../shields/Murata/src/modem.c ****   fifo_init(&command.fifo, command.buffer, CMD_BUFFER_SIZE);
 551              		.loc 1 166 0
 552 000e 2E1D     		adds	r6, r5, #4
 553 0010 4FF48072 		mov	r2, #256
 554 0014 05F11401 		add	r1, r5, #20
 555 0018 3046     		mov	r0, r6
 556 001a FFF7FEFF 		bl	fifo_init
 557              	.LVL36:
 167:../../shields/Murata/src/modem.c ****   command.tag_id = next_tag_id;
 558              		.loc 1 167 0
 559 001e 094B     		ldr	r3, .L56+4
 560 0020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 561 0022 2970     		strb	r1, [r5]
ARM GAS  /tmp/ccGLv8ND.s 			page 19


 168:../../shields/Murata/src/modem.c ****   next_tag_id++;
 562              		.loc 1 168 0
 563 0024 0A19     		adds	r2, r1, r4
 564 0026 1A70     		strb	r2, [r3]
 169:../../shields/Murata/src/modem.c **** 
 170:../../shields/Murata/src/modem.c ****   alp_append_tag_request_action(&command.fifo, command.tag_id, true);
 565              		.loc 1 170 0
 566 0028 2246     		mov	r2, r4
 567 002a 3046     		mov	r0, r6
 568 002c FFF7FEFF 		bl	alp_append_tag_request_action
 569              	.LVL37:
 171:../../shields/Murata/src/modem.c ****   return true;
 570              		.loc 1 171 0
 571 0030 2046     		mov	r0, r4
 172:../../shields/Murata/src/modem.c **** }
 572              		.loc 1 172 0
 573 0032 70BD     		pop	{r4, r5, r6, pc}
 574              	.L55:
 161:../../shields/Murata/src/modem.c ****     return false;
 575              		.loc 1 161 0
 576 0034 0448     		ldr	r0, .L56+8
 577 0036 FFF7FEFF 		bl	printf
 578              	.LVL38:
 162:../../shields/Murata/src/modem.c ****   }
 579              		.loc 1 162 0
 580 003a 0020     		movs	r0, #0
 581 003c 70BD     		pop	{r4, r5, r6, pc}
 582              	.L57:
 583 003e 00BF     		.align	2
 584              	.L56:
 585 0040 00000000 		.word	.LANCHOR0
 586 0044 00000000 		.word	.LANCHOR4
 587 0048 00000000 		.word	.LC5
 588              		.cfi_endproc
 589              	.LFE132:
 591              		.section	.text.modem_read_file,"ax",%progbits
 592              		.align	1
 593              		.global	modem_read_file
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu fpv4-sp-d16
 599              	modem_read_file:
 600              	.LFB133:
 173:../../shields/Murata/src/modem.c **** 
 174:../../shields/Murata/src/modem.c **** bool modem_read_file(uint8_t file_id, uint32_t offset, uint32_t size) {
 601              		.loc 1 174 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL39:
 606 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 607              	.LCFI11:
 608              		.cfi_def_cfa_offset 32
 609              		.cfi_offset 4, -32
 610              		.cfi_offset 5, -28
 611              		.cfi_offset 6, -24
ARM GAS  /tmp/ccGLv8ND.s 			page 20


 612              		.cfi_offset 7, -20
 613              		.cfi_offset 8, -16
 614              		.cfi_offset 9, -12
 615              		.cfi_offset 10, -8
 616              		.cfi_offset 14, -4
 617 0004 82B0     		sub	sp, sp, #8
 618              	.LCFI12:
 619              		.cfi_def_cfa_offset 40
 620 0006 0546     		mov	r5, r0
 621 0008 0E46     		mov	r6, r1
 622 000a 1746     		mov	r7, r2
 175:../../shields/Murata/src/modem.c ****   if(!alloc_command())
 623              		.loc 1 175 0
 624 000c FFF7FEFF 		bl	alloc_command
 625              	.LVL40:
 626 0010 0446     		mov	r4, r0
 627 0012 18B9     		cbnz	r0, .L61
 628              	.L59:
 176:../../shields/Murata/src/modem.c ****     return false;
 177:../../shields/Murata/src/modem.c **** 
 178:../../shields/Murata/src/modem.c ****   alp_append_read_file_data_action(&command.fifo, file_id, offset, size, true, false);
 179:../../shields/Murata/src/modem.c **** 
 180:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes(command.buffer, fifo_get_size(&command.fifo), SERIAL_MESSAGE_TYPE_
 181:../../shields/Murata/src/modem.c **** 
 182:../../shields/Murata/src/modem.c ****   return true;
 183:../../shields/Murata/src/modem.c **** }
 629              		.loc 1 183 0
 630 0014 2046     		mov	r0, r4
 631 0016 02B0     		add	sp, sp, #8
 632              	.LCFI13:
 633              		.cfi_remember_state
 634              		.cfi_def_cfa_offset 32
 635              		@ sp needed
 636 0018 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 637              	.LVL41:
 638              	.L61:
 639              	.LCFI14:
 640              		.cfi_restore_state
 178:../../shields/Murata/src/modem.c **** 
 641              		.loc 1 178 0
 642 001c DFF83080 		ldr	r8, .L62
 643 0020 08F1040A 		add	r10, r8, #4
 644 0024 0023     		movs	r3, #0
 645 0026 0193     		str	r3, [sp, #4]
 646 0028 4FF00109 		mov	r9, #1
 647 002c CDF80090 		str	r9, [sp]
 648 0030 3B46     		mov	r3, r7
 649 0032 3246     		mov	r2, r6
 650 0034 2946     		mov	r1, r5
 651 0036 5046     		mov	r0, r10
 652 0038 FFF7FEFF 		bl	alp_append_read_file_data_action
 653              	.LVL42:
 180:../../shields/Murata/src/modem.c **** 
 654              		.loc 1 180 0
 655 003c 5046     		mov	r0, r10
 656 003e FFF7FEFF 		bl	fifo_get_size
 657              	.LVL43:
ARM GAS  /tmp/ccGLv8ND.s 			page 21


 658 0042 4A46     		mov	r2, r9
 659 0044 C1B2     		uxtb	r1, r0
 660 0046 08F11400 		add	r0, r8, #20
 661 004a FFF7FEFF 		bl	modem_interface_transfer_bytes
 662              	.LVL44:
 182:../../shields/Murata/src/modem.c **** }
 663              		.loc 1 182 0
 664 004e E1E7     		b	.L59
 665              	.L63:
 666              		.align	2
 667              	.L62:
 668 0050 00000000 		.word	.LANCHOR0
 669              		.cfi_endproc
 670              	.LFE133:
 672              		.section	.text.modem_write_file,"ax",%progbits
 673              		.align	1
 674              		.global	modem_write_file
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv4-sp-d16
 680              	modem_write_file:
 681              	.LFB134:
 184:../../shields/Murata/src/modem.c **** 
 185:../../shields/Murata/src/modem.c **** bool modem_write_file(uint8_t file_id, uint32_t offset, uint32_t size, uint8_t* data) {
 682              		.loc 1 185 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              	.LVL45:
 687 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 688              	.LCFI15:
 689              		.cfi_def_cfa_offset 36
 690              		.cfi_offset 4, -36
 691              		.cfi_offset 5, -32
 692              		.cfi_offset 6, -28
 693              		.cfi_offset 7, -24
 694              		.cfi_offset 8, -20
 695              		.cfi_offset 9, -16
 696              		.cfi_offset 10, -12
 697              		.cfi_offset 11, -8
 698              		.cfi_offset 14, -4
 699 0004 85B0     		sub	sp, sp, #20
 700              	.LCFI16:
 701              		.cfi_def_cfa_offset 56
 702 0006 0546     		mov	r5, r0
 703 0008 0E46     		mov	r6, r1
 704 000a 1746     		mov	r7, r2
 705 000c 9846     		mov	r8, r3
 186:../../shields/Murata/src/modem.c ****   if(!alloc_command())
 706              		.loc 1 186 0
 707 000e FFF7FEFF 		bl	alloc_command
 708              	.LVL46:
 709 0012 0446     		mov	r4, r0
 710 0014 18B9     		cbnz	r0, .L67
 711              	.L65:
 187:../../shields/Murata/src/modem.c ****     return false;
ARM GAS  /tmp/ccGLv8ND.s 			page 22


 188:../../shields/Murata/src/modem.c **** 
 189:../../shields/Murata/src/modem.c ****   alp_append_write_file_data_action(&command.fifo, file_id, offset, size, data, true, false);
 190:../../shields/Murata/src/modem.c **** 
 191:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes(command.buffer, fifo_get_size(&command.fifo), SERIAL_MESSAGE_TYPE_
 192:../../shields/Murata/src/modem.c **** 
 193:../../shields/Murata/src/modem.c ****   return true;
 194:../../shields/Murata/src/modem.c **** }
 712              		.loc 1 194 0
 713 0016 2046     		mov	r0, r4
 714 0018 05B0     		add	sp, sp, #20
 715              	.LCFI17:
 716              		.cfi_remember_state
 717              		.cfi_def_cfa_offset 36
 718              		@ sp needed
 719 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 720              	.LVL47:
 721              	.L67:
 722              	.LCFI18:
 723              		.cfi_restore_state
 189:../../shields/Murata/src/modem.c **** 
 724              		.loc 1 189 0
 725 001e DFF83890 		ldr	r9, .L68
 726 0022 09F1040B 		add	fp, r9, #4
 727 0026 0023     		movs	r3, #0
 728 0028 0293     		str	r3, [sp, #8]
 729 002a 4FF0010A 		mov	r10, #1
 730 002e CDF804A0 		str	r10, [sp, #4]
 731 0032 CDF80080 		str	r8, [sp]
 732 0036 3B46     		mov	r3, r7
 733 0038 3246     		mov	r2, r6
 734 003a 2946     		mov	r1, r5
 735 003c 5846     		mov	r0, fp
 736 003e FFF7FEFF 		bl	alp_append_write_file_data_action
 737              	.LVL48:
 191:../../shields/Murata/src/modem.c **** 
 738              		.loc 1 191 0
 739 0042 5846     		mov	r0, fp
 740 0044 FFF7FEFF 		bl	fifo_get_size
 741              	.LVL49:
 742 0048 5246     		mov	r2, r10
 743 004a C1B2     		uxtb	r1, r0
 744 004c 09F11400 		add	r0, r9, #20
 745 0050 FFF7FEFF 		bl	modem_interface_transfer_bytes
 746              	.LVL50:
 193:../../shields/Murata/src/modem.c **** }
 747              		.loc 1 193 0
 748 0054 DFE7     		b	.L65
 749              	.L69:
 750 0056 00BF     		.align	2
 751              	.L68:
 752 0058 00000000 		.word	.LANCHOR0
 753              		.cfi_endproc
 754              	.LFE134:
 756              		.section	.text.modem_send_unsolicited_response,"ax",%progbits
 757              		.align	1
 758              		.global	modem_send_unsolicited_response
 759              		.syntax unified
ARM GAS  /tmp/ccGLv8ND.s 			page 23


 760              		.thumb
 761              		.thumb_func
 762              		.fpu fpv4-sp-d16
 764              	modem_send_unsolicited_response:
 765              	.LFB135:
 195:../../shields/Murata/src/modem.c **** 
 196:../../shields/Murata/src/modem.c **** bool modem_send_unsolicited_response(uint8_t file_id, uint32_t offset, uint32_t length, uint8_t* da
 197:../../shields/Murata/src/modem.c ****                                      session_config_t* session_config) {
 766              		.loc 1 197 0
 767              		.cfi_startproc
 768              		@ args = 4, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL51:
 771 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 772              	.LCFI19:
 773              		.cfi_def_cfa_offset 32
 774              		.cfi_offset 4, -32
 775              		.cfi_offset 5, -28
 776              		.cfi_offset 6, -24
 777              		.cfi_offset 7, -20
 778              		.cfi_offset 8, -16
 779              		.cfi_offset 9, -12
 780              		.cfi_offset 10, -8
 781              		.cfi_offset 14, -4
 782 0004 82B0     		sub	sp, sp, #8
 783              	.LCFI20:
 784              		.cfi_def_cfa_offset 40
 785 0006 0746     		mov	r7, r0
 786 0008 8846     		mov	r8, r1
 787 000a 9146     		mov	r9, r2
 788 000c 9A46     		mov	r10, r3
 198:../../shields/Murata/src/modem.c ****   if(!alloc_command())
 789              		.loc 1 198 0
 790 000e FFF7FEFF 		bl	alloc_command
 791              	.LVL52:
 792 0012 0446     		mov	r4, r0
 793 0014 C8B1     		cbz	r0, .L71
 199:../../shields/Murata/src/modem.c ****     return false;
 200:../../shields/Murata/src/modem.c **** 
 201:../../shields/Murata/src/modem.c ****   if(session_config->interface_type==DASH7)
 794              		.loc 1 201 0
 795 0016 0A9B     		ldr	r3, [sp, #40]
 796 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 001a D3B1     		cbz	r3, .L76
 202:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_D7ASP, (uint8_t *) &session_config->d7ap_se
 203:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==LORAWAN_OTAA)
 798              		.loc 1 203 0
 799 001c 012B     		cmp	r3, #1
 800 001e 20D0     		beq	.L77
 204:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_LORAWAN_OTAA, (uint8_t *) &session_config->
 205:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==lorawan_ABP)
 801              		.loc 1 205 0
 802 0020 022B     		cmp	r3, #2
 803 0022 26D0     		beq	.L78
 804              	.L73:
 206:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_LORAWAN_ABP, (uint8_t *) &session_config->l
 207:../../shields/Murata/src/modem.c **** 
ARM GAS  /tmp/ccGLv8ND.s 			page 24


 208:../../shields/Murata/src/modem.c ****   alp_append_return_file_data_action(&command.fifo, file_id, offset, length, data);
 805              		.loc 1 208 0
 806 0024 174D     		ldr	r5, .L79
 807 0026 2E1D     		adds	r6, r5, #4
 808 0028 CDF800A0 		str	r10, [sp]
 809 002c 4B46     		mov	r3, r9
 810 002e 4246     		mov	r2, r8
 811 0030 3946     		mov	r1, r7
 812 0032 3046     		mov	r0, r6
 813 0034 FFF7FEFF 		bl	alp_append_return_file_data_action
 814              	.LVL53:
 209:../../shields/Murata/src/modem.c **** 
 210:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes(command.buffer, fifo_get_size(&command.fifo), SERIAL_MESSAGE_TYPE_
 815              		.loc 1 210 0
 816 0038 3046     		mov	r0, r6
 817 003a FFF7FEFF 		bl	fifo_get_size
 818              	.LVL54:
 819 003e 0122     		movs	r2, #1
 820 0040 C1B2     		uxtb	r1, r0
 821 0042 05F11400 		add	r0, r5, #20
 822 0046 FFF7FEFF 		bl	modem_interface_transfer_bytes
 823              	.LVL55:
 824              	.L71:
 211:../../shields/Murata/src/modem.c ****   return true;
 212:../../shields/Murata/src/modem.c **** }
 825              		.loc 1 212 0
 826 004a 2046     		mov	r0, r4
 827 004c 02B0     		add	sp, sp, #8
 828              	.LCFI21:
 829              		.cfi_remember_state
 830              		.cfi_def_cfa_offset 32
 831              		@ sp needed
 832 004e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 833              	.LVL56:
 834              	.L76:
 835              	.LCFI22:
 836              		.cfi_restore_state
 202:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==LORAWAN_OTAA)
 837              		.loc 1 202 0
 838 0052 0C23     		movs	r3, #12
 839 0054 0A9A     		ldr	r2, [sp, #40]
 840 0056 0432     		adds	r2, r2, #4
 841 0058 D721     		movs	r1, #215
 842 005a 0B48     		ldr	r0, .L79+4
 843 005c FFF7FEFF 		bl	alp_append_forward_action
 844              	.LVL57:
 845 0060 E0E7     		b	.L73
 846              	.L77:
 204:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==lorawan_ABP)
 847              		.loc 1 204 0
 848 0062 2223     		movs	r3, #34
 849 0064 0A9A     		ldr	r2, [sp, #40]
 850 0066 0432     		adds	r2, r2, #4
 851 0068 0321     		movs	r1, #3
 852 006a 0748     		ldr	r0, .L79+4
 853 006c FFF7FEFF 		bl	alp_append_forward_action
 854              	.LVL58:
ARM GAS  /tmp/ccGLv8ND.s 			page 25


 855 0070 D8E7     		b	.L73
 856              	.L78:
 206:../../shields/Murata/src/modem.c **** 
 857              		.loc 1 206 0
 858 0072 2C23     		movs	r3, #44
 859 0074 0A9A     		ldr	r2, [sp, #40]
 860 0076 0432     		adds	r2, r2, #4
 861 0078 0221     		movs	r1, #2
 862 007a 0348     		ldr	r0, .L79+4
 863 007c FFF7FEFF 		bl	alp_append_forward_action
 864              	.LVL59:
 865 0080 D0E7     		b	.L73
 866              	.L80:
 867 0082 00BF     		.align	2
 868              	.L79:
 869 0084 00000000 		.word	.LANCHOR0
 870 0088 04000000 		.word	.LANCHOR0+4
 871              		.cfi_endproc
 872              	.LFE135:
 874              		.section	.text.modem_send_raw_unsolicited_response,"ax",%progbits
 875              		.align	1
 876              		.global	modem_send_raw_unsolicited_response
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu fpv4-sp-d16
 882              	modem_send_raw_unsolicited_response:
 883              	.LFB136:
 213:../../shields/Murata/src/modem.c **** 
 214:../../shields/Murata/src/modem.c **** bool modem_send_raw_unsolicited_response(uint8_t* alp_command, uint32_t length,
 215:../../shields/Murata/src/modem.c ****                                          session_config_t* session_config) {
 884              		.loc 1 215 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              	.LVL60:
 889 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 890              	.LCFI23:
 891              		.cfi_def_cfa_offset 24
 892              		.cfi_offset 4, -24
 893              		.cfi_offset 5, -20
 894              		.cfi_offset 6, -16
 895              		.cfi_offset 7, -12
 896              		.cfi_offset 8, -8
 897              		.cfi_offset 14, -4
 898 0004 0746     		mov	r7, r0
 899 0006 8846     		mov	r8, r1
 900 0008 1546     		mov	r5, r2
 216:../../shields/Murata/src/modem.c ****   if(!alloc_command())
 901              		.loc 1 216 0
 902 000a FFF7FEFF 		bl	alloc_command
 903              	.LVL61:
 904 000e 0446     		mov	r4, r0
 905 0010 B0B1     		cbz	r0, .L82
 217:../../shields/Murata/src/modem.c ****     return false;
 218:../../shields/Murata/src/modem.c **** 
 219:../../shields/Murata/src/modem.c ****    if(session_config->interface_type==DASH7)
ARM GAS  /tmp/ccGLv8ND.s 			page 26


 906              		.loc 1 219 0
 907 0012 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 908 0014 BBB1     		cbz	r3, .L87
 220:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_D7ASP, (uint8_t *) &session_config->d7ap_se
 221:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==LORAWAN_OTAA)
 909              		.loc 1 221 0
 910 0016 012B     		cmp	r3, #1
 911 0018 1CD0     		beq	.L88
 222:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_LORAWAN_OTAA, (uint8_t *) &session_config->
 223:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==lorawan_ABP)
 912              		.loc 1 223 0
 913 001a 022B     		cmp	r3, #2
 914 001c 21D0     		beq	.L89
 915              	.L84:
 224:../../shields/Murata/src/modem.c ****     alp_append_forward_action(&command.fifo, ALP_ITF_ID_LORAWAN_ABP, (uint8_t *) &session_config->l
 225:../../shields/Murata/src/modem.c **** 
 226:../../shields/Murata/src/modem.c ****   fifo_put(&command.fifo, alp_command, length);
 916              		.loc 1 226 0
 917 001e 144D     		ldr	r5, .L90
 918              	.LVL62:
 919 0020 2E1D     		adds	r6, r5, #4
 920 0022 1FFA88F2 		uxth	r2, r8
 921 0026 3946     		mov	r1, r7
 922 0028 3046     		mov	r0, r6
 923 002a FFF7FEFF 		bl	fifo_put
 924              	.LVL63:
 227:../../shields/Murata/src/modem.c **** 
 228:../../shields/Murata/src/modem.c ****   modem_interface_transfer_bytes(command.buffer, fifo_get_size(&command.fifo), SERIAL_MESSAGE_TYPE_
 925              		.loc 1 228 0
 926 002e 3046     		mov	r0, r6
 927 0030 FFF7FEFF 		bl	fifo_get_size
 928              	.LVL64:
 929 0034 0122     		movs	r2, #1
 930 0036 C1B2     		uxtb	r1, r0
 931 0038 05F11400 		add	r0, r5, #20
 932 003c FFF7FEFF 		bl	modem_interface_transfer_bytes
 933              	.LVL65:
 934              	.L82:
 229:../../shields/Murata/src/modem.c ****   return true;
 230:../../shields/Murata/src/modem.c **** }
 935              		.loc 1 230 0
 936 0040 2046     		mov	r0, r4
 937 0042 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 938              	.LVL66:
 939              	.L87:
 220:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==LORAWAN_OTAA)
 940              		.loc 1 220 0
 941 0046 0C23     		movs	r3, #12
 942 0048 2A1D     		adds	r2, r5, #4
 943 004a D721     		movs	r1, #215
 944 004c 0948     		ldr	r0, .L90+4
 945 004e FFF7FEFF 		bl	alp_append_forward_action
 946              	.LVL67:
 947 0052 E4E7     		b	.L84
 948              	.L88:
 222:../../shields/Murata/src/modem.c ****   else if(session_config->interface_type==lorawan_ABP)
 949              		.loc 1 222 0
ARM GAS  /tmp/ccGLv8ND.s 			page 27


 950 0054 2223     		movs	r3, #34
 951 0056 2A1D     		adds	r2, r5, #4
 952 0058 0321     		movs	r1, #3
 953 005a 0648     		ldr	r0, .L90+4
 954 005c FFF7FEFF 		bl	alp_append_forward_action
 955              	.LVL68:
 956 0060 DDE7     		b	.L84
 957              	.L89:
 224:../../shields/Murata/src/modem.c **** 
 958              		.loc 1 224 0
 959 0062 2C23     		movs	r3, #44
 960 0064 2A1D     		adds	r2, r5, #4
 961 0066 0221     		movs	r1, #2
 962 0068 0248     		ldr	r0, .L90+4
 963 006a FFF7FEFF 		bl	alp_append_forward_action
 964              	.LVL69:
 965 006e D6E7     		b	.L84
 966              	.L91:
 967              		.align	2
 968              	.L90:
 969 0070 00000000 		.word	.LANCHOR0
 970 0074 04000000 		.word	.LANCHOR0+4
 971              		.cfi_endproc
 972              	.LFE136:
 974              		.section	.text.modem_get_active_tag_id,"ax",%progbits
 975              		.align	1
 976              		.global	modem_get_active_tag_id
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu fpv4-sp-d16
 982              	modem_get_active_tag_id:
 983              	.LFB137:
 231:../../shields/Murata/src/modem.c **** 
 232:../../shields/Murata/src/modem.c **** uint8_t modem_get_active_tag_id()
 233:../../shields/Murata/src/modem.c **** {
 984              		.loc 1 233 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 234:../../shields/Murata/src/modem.c ****   return next_tag_id;
 235:../../shields/Murata/src/modem.c **** }
 989              		.loc 1 235 0
 990 0000 014B     		ldr	r3, .L93
 991 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 992 0004 7047     		bx	lr
 993              	.L94:
 994 0006 00BF     		.align	2
 995              	.L93:
 996 0008 00000000 		.word	.LANCHOR4
 997              		.cfi_endproc
 998              	.LFE137:
 1000              		.section	.bss.callbacks,"aw",%nobits
 1001              		.align	2
 1002              		.set	.LANCHOR1,. + 0
 1005              	callbacks:
ARM GAS  /tmp/ccGLv8ND.s 			page 28


 1006 0000 00000000 		.space	4
 1007              		.section	.bss.command,"aw",%nobits
 1008              		.align	2
 1009              		.set	.LANCHOR0,. + 0
 1012              	command:
 1013 0000 00000000 		.space	276
 1013      00000000 
 1013      00000000 
 1013      00000000 
 1013      00000000 
 1014              		.section	.bss.next_tag_id,"aw",%nobits
 1015              		.set	.LANCHOR4,. + 0
 1018              	next_tag_id:
 1019 0000 00       		.space	1
 1020              		.section	.rodata.__func__.10838,"a",%progbits
 1021              		.align	2
 1022              		.set	.LANCHOR3,. + 0
 1025              	__func__.10838:
 1026 0000 70726F63 		.ascii	"process_serial_frame\000"
 1026      6573735F 
 1026      73657269 
 1026      616C5F66 
 1026      72616D65 
 1027              		.section	.rodata.__func__.5443,"a",%progbits
 1028              		.align	2
 1029              		.set	.LANCHOR2,. + 0
 1032              	__func__.5443:
 1033 0000 64376170 		.ascii	"d7ap_addressee_id_length\000"
 1033      5F616464 
 1033      72657373 
 1033      65655F69 
 1033      645F6C65 
 1034              		.section	.rodata.alloc_command.str1.4,"aMS",%progbits,1
 1035              		.align	2
 1036              	.LC5:
 1037 0000 70726576 		.ascii	"prev command still active\000"
 1037      20636F6D 
 1037      6D616E64 
 1037      20737469 
 1037      6C6C2061 
 1038              		.section	.rodata.process_serial_frame.str1.4,"aMS",%progbits,1
 1039              		.align	2
 1040              	.LC0:
 1041 0000 72656365 		.ascii	"received resp with unexpected tag_id (%i vs %i)\000"
 1041      69766564 
 1041      20726573 
 1041      70207769 
 1041      74682075 
 1042              	.LC1:
 1043 0030 66616C73 		.ascii	"false\000"
 1043      6500
 1044 0036 0000     		.space	2
 1045              	.LC2:
 1046 0038 2E2E2F2E 		.ascii	"../../shields/Murata/inc/d7ap.h\000"
 1046      2E2F7368 
 1046      69656C64 
 1046      732F4D75 
ARM GAS  /tmp/ccGLv8ND.s 			page 29


 1046      72617461 
 1047              	.LC3:
 1048 0058 72656365 		.ascii	"received resp from: \000"
 1048      69766564 
 1048      20726573 
 1048      70206672 
 1048      6F6D3A20 
 1049 006d 000000   		.space	3
 1050              	.LC4:
 1051 0070 2E2E2F2E 		.ascii	"../../shields/Murata/src/modem.c\000"
 1051      2E2F7368 
 1051      69656C64 
 1051      732F4D75 
 1051      72617461 
 1052              		.text
 1053              	.Letext0:
 1054              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1055              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 1056              		.file 5 "../../shields/Murata/inc/lorawan_stack.h"
 1057              		.file 6 "../../shields/Murata/inc/fifo.h"
 1058              		.file 7 "../../shields/Murata/inc/alp.h"
 1059              		.file 8 "../../core/ST/CMSIS/Include/core_cm4.h"
 1060              		.file 9 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1061              		.file 10 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 1062              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1063              		.file 12 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1064              		.file 13 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1065              		.file 14 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1066              		.file 15 "../../shields/Murata/inc/modem_interface.h"
 1067              		.file 16 "../../shields/Murata/inc/modem.h"
 1068              		.file 17 "/usr/include/newlib/sys/lock.h"
 1069              		.file 18 "/usr/include/newlib/sys/_types.h"
 1070              		.file 19 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1071              		.file 20 "/usr/include/newlib/sys/reent.h"
 1072              		.file 21 "/usr/include/newlib/sys/errno.h"
 1073              		.file 22 "/usr/include/newlib/stdlib.h"
 1074              		.file 23 "/usr/include/newlib/stdio.h"
 1075              		.file 24 "/usr/include/newlib/assert.h"
ARM GAS  /tmp/ccGLv8ND.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 modem.c
     /tmp/ccGLv8ND.s:18     .text.process_serial_frame:0000000000000000 $t
     /tmp/ccGLv8ND.s:24     .text.process_serial_frame:0000000000000000 process_serial_frame
     /tmp/ccGLv8ND.s:70     .text.process_serial_frame:000000000000002c $d
     /tmp/ccGLv8ND.s:102    .text.process_serial_frame:000000000000004c $t
     /tmp/ccGLv8ND.s:195    .text.process_serial_frame:00000000000000e2 $d
     /tmp/ccGLv8ND.s:199    .text.process_serial_frame:00000000000000e6 $t
     /tmp/ccGLv8ND.s:277    .text.process_serial_frame:000000000000013c $d
     /tmp/ccGLv8ND.s:290    .text.modem_cb_init:0000000000000000 $t
     /tmp/ccGLv8ND.s:297    .text.modem_cb_init:0000000000000000 modem_cb_init
     /tmp/ccGLv8ND.s:324    .text.modem_cb_init:0000000000000010 $d
     /tmp/ccGLv8ND.s:329    .text.modem_process_fifo:0000000000000000 $t
     /tmp/ccGLv8ND.s:336    .text.modem_process_fifo:0000000000000000 modem_process_fifo
     /tmp/ccGLv8ND.s:383    .text.modem_process_fifo:0000000000000024 $d
     /tmp/ccGLv8ND.s:388    .text.modem_init:0000000000000000 $t
     /tmp/ccGLv8ND.s:395    .text.modem_init:0000000000000000 modem_init
     /tmp/ccGLv8ND.s:423    .text.modem_init:0000000000000018 $d
     /tmp/ccGLv8ND.s:429    .text.modem_reinit:0000000000000000 $t
     /tmp/ccGLv8ND.s:436    .text.modem_reinit:0000000000000000 modem_reinit
     /tmp/ccGLv8ND.s:451    .text.modem_reinit:0000000000000008 $d
     /tmp/ccGLv8ND.s:456    .text.modem_send_ping:0000000000000000 $t
     /tmp/ccGLv8ND.s:463    .text.modem_send_ping:0000000000000000 modem_send_ping
     /tmp/ccGLv8ND.s:494    .text.modem_execute_raw_alp:0000000000000000 $t
     /tmp/ccGLv8ND.s:501    .text.modem_execute_raw_alp:0000000000000000 modem_execute_raw_alp
     /tmp/ccGLv8ND.s:523    .text.alloc_command:0000000000000000 $t
     /tmp/ccGLv8ND.s:530    .text.alloc_command:0000000000000000 alloc_command
     /tmp/ccGLv8ND.s:585    .text.alloc_command:0000000000000040 $d
     /tmp/ccGLv8ND.s:592    .text.modem_read_file:0000000000000000 $t
     /tmp/ccGLv8ND.s:599    .text.modem_read_file:0000000000000000 modem_read_file
     /tmp/ccGLv8ND.s:668    .text.modem_read_file:0000000000000050 $d
     /tmp/ccGLv8ND.s:673    .text.modem_write_file:0000000000000000 $t
     /tmp/ccGLv8ND.s:680    .text.modem_write_file:0000000000000000 modem_write_file
     /tmp/ccGLv8ND.s:752    .text.modem_write_file:0000000000000058 $d
     /tmp/ccGLv8ND.s:757    .text.modem_send_unsolicited_response:0000000000000000 $t
     /tmp/ccGLv8ND.s:764    .text.modem_send_unsolicited_response:0000000000000000 modem_send_unsolicited_response
     /tmp/ccGLv8ND.s:869    .text.modem_send_unsolicited_response:0000000000000084 $d
     /tmp/ccGLv8ND.s:875    .text.modem_send_raw_unsolicited_response:0000000000000000 $t
     /tmp/ccGLv8ND.s:882    .text.modem_send_raw_unsolicited_response:0000000000000000 modem_send_raw_unsolicited_response
     /tmp/ccGLv8ND.s:969    .text.modem_send_raw_unsolicited_response:0000000000000070 $d
     /tmp/ccGLv8ND.s:975    .text.modem_get_active_tag_id:0000000000000000 $t
     /tmp/ccGLv8ND.s:982    .text.modem_get_active_tag_id:0000000000000000 modem_get_active_tag_id
     /tmp/ccGLv8ND.s:996    .text.modem_get_active_tag_id:0000000000000008 $d
     /tmp/ccGLv8ND.s:1001   .bss.callbacks:0000000000000000 $d
     /tmp/ccGLv8ND.s:1005   .bss.callbacks:0000000000000000 callbacks
     /tmp/ccGLv8ND.s:1008   .bss.command:0000000000000000 $d
     /tmp/ccGLv8ND.s:1012   .bss.command:0000000000000000 command
     /tmp/ccGLv8ND.s:1018   .bss.next_tag_id:0000000000000000 next_tag_id
     /tmp/ccGLv8ND.s:1019   .bss.next_tag_id:0000000000000000 $d
     /tmp/ccGLv8ND.s:1021   .rodata.__func__.10838:0000000000000000 $d
     /tmp/ccGLv8ND.s:1025   .rodata.__func__.10838:0000000000000000 __func__.10838
     /tmp/ccGLv8ND.s:1028   .rodata.__func__.5443:0000000000000000 $d
     /tmp/ccGLv8ND.s:1032   .rodata.__func__.5443:0000000000000000 __func__.5443
     /tmp/ccGLv8ND.s:1035   .rodata.alloc_command.str1.4:0000000000000000 $d
     /tmp/ccGLv8ND.s:1039   .rodata.process_serial_frame.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

ARM GAS  /tmp/ccGLv8ND.s 			page 31


UNDEFINED SYMBOLS
fifo_get_size
alp_parse_action
printf
__assert_func
modem_interface_set_target_rebooted_callback
process_rx_fifo
HAL_Delay
rx_fifo
modem_interface_init
modem_interface_register_handler
modem_interface_transfer_bytes
fifo_init
alp_append_tag_request_action
alp_append_read_file_data_action
alp_append_write_file_data_action
alp_append_return_file_data_action
alp_append_forward_action
fifo_put
