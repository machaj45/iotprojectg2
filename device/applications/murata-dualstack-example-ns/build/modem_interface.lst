ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"modem_interface.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.verify_payload,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	verify_payload:
  25              	.LFB129:
  26              		.file 1 "../../shields/Murata-dualstack/src/modem_interface.c"
   1:../../shields/Murata-dualstack/src/modem_interface.c **** #include <string.h>
   2:../../shields/Murata-dualstack/src/modem_interface.c **** 
   3:../../shields/Murata-dualstack/src/modem_interface.c **** #include "uart.h"
   4:../../shields/Murata-dualstack/src/modem_interface.c **** #include "fifo.h"
   5:../../shields/Murata-dualstack/src/modem_interface.c **** #include "modem_interface.h"
   6:../../shields/Murata-dualstack/src/modem_interface.c **** #include "errors.h"
   7:../../shields/Murata-dualstack/src/modem_interface.c **** #include "crc.h"
   8:../../shields/Murata-dualstack/src/modem_interface.c **** 
   9:../../shields/Murata-dualstack/src/modem_interface.c **** #define RX_BUFFER_SIZE 256
  10:../../shields/Murata-dualstack/src/modem_interface.c **** 
  11:../../shields/Murata-dualstack/src/modem_interface.c **** #define PLATFORM_USE_MODEM_INTERRUPT_LINES 0
  12:../../shields/Murata-dualstack/src/modem_interface.c **** 
  13:../../shields/Murata-dualstack/src/modem_interface.c **** 
  14:../../shields/Murata-dualstack/src/modem_interface.c **** #define TX_FIFO_FLUSH_CHUNK_SIZE 10 // at a baudrate of 115200 this ensures completion within 1 ms
  15:../../shields/Murata-dualstack/src/modem_interface.c ****                                     // TODO baudrate dependent
  16:../../shields/Murata-dualstack/src/modem_interface.c **** 
  17:../../shields/Murata-dualstack/src/modem_interface.c **** UART_HandleTypeDef* uart;
  18:../../shields/Murata-dualstack/src/modem_interface.c **** 
  19:../../shields/Murata-dualstack/src/modem_interface.c **** uint8_t rxData[1];
  20:../../shields/Murata-dualstack/src/modem_interface.c **** static uint8_t rx_buffer[RX_BUFFER_SIZE];
  21:../../shields/Murata-dualstack/src/modem_interface.c **** fifo_t rx_fifo;
  22:../../shields/Murata-dualstack/src/modem_interface.c **** 
  23:../../shields/Murata-dualstack/src/modem_interface.c **** #if defined(FRAMEWORK_LOG_ENABLED) && defined(FRAMEWORK_MODEM_INTERFACE_LOG_ENABLED)
  24:../../shields/Murata-dualstack/src/modem_interface.c ****   #define DPRINT(...) log_print_string(__VA_ARGS__)
  25:../../shields/Murata-dualstack/src/modem_interface.c ****   #define DPRINT_DATA(...) log_print_data(__VA_ARGS__)
  26:../../shields/Murata-dualstack/src/modem_interface.c **** #else
  27:../../shields/Murata-dualstack/src/modem_interface.c ****   #define DPRINT(...)
  28:../../shields/Murata-dualstack/src/modem_interface.c ****   #define DPRINT_DATA(...)
  29:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
  30:../../shields/Murata-dualstack/src/modem_interface.c **** 
  31:../../shields/Murata-dualstack/src/modem_interface.c **** 
  32:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_SYNC_BYTE 0xC0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 2


  33:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_VERSION   0x00
  34:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_HEADER_SIZE 7
  35:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_SIZE 4
  36:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_COUNTER 2
  37:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_TYPE 3
  38:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_CRC1   5
  39:../../shields/Murata-dualstack/src/modem_interface.c **** #define SERIAL_FRAME_CRC2   6
  40:../../shields/Murata-dualstack/src/modem_interface.c **** 
  41:../../shields/Murata-dualstack/src/modem_interface.c **** #define MODEM_INTERFACE_TX_FIFO_SIZE 255
  42:../../shields/Murata-dualstack/src/modem_interface.c **** static uint8_t modem_interface_tx_buffer[MODEM_INTERFACE_TX_FIFO_SIZE];
  43:../../shields/Murata-dualstack/src/modem_interface.c **** static fifo_t modem_interface_tx_fifo;
  44:../../shields/Murata-dualstack/src/modem_interface.c **** static bool request_pending = false;
  45:../../shields/Murata-dualstack/src/modem_interface.c **** 
  46:../../shields/Murata-dualstack/src/modem_interface.c **** uint8_t header[SERIAL_FRAME_HEADER_SIZE];
  47:../../shields/Murata-dualstack/src/modem_interface.c **** static uint8_t payload_len = 0;
  48:../../shields/Murata-dualstack/src/modem_interface.c **** static uint8_t packet_up_counter = 0;
  49:../../shields/Murata-dualstack/src/modem_interface.c **** static uint8_t packet_down_counter = 0;
  50:../../shields/Murata-dualstack/src/modem_interface.c **** // static pin_id_t uart_state_pin;
  51:../../shields/Murata-dualstack/src/modem_interface.c **** // static pin_id_t target_uart_state_pin;
  52:../../shields/Murata-dualstack/src/modem_interface.c **** 
  53:../../shields/Murata-dualstack/src/modem_interface.c **** static bool modem_listen_uart_inited = false;
  54:../../shields/Murata-dualstack/src/modem_interface.c **** static bool parsed_header = false;
  55:../../shields/Murata-dualstack/src/modem_interface.c **** 
  56:../../shields/Murata-dualstack/src/modem_interface.c **** static cmd_handler_t alp_handler;
  57:../../shields/Murata-dualstack/src/modem_interface.c **** static cmd_handler_t ping_response_handler;
  58:../../shields/Murata-dualstack/src/modem_interface.c **** static cmd_handler_t logging_handler;
  59:../../shields/Murata-dualstack/src/modem_interface.c **** static target_rebooted_callback_t target_rebooted_cb;
  60:../../shields/Murata-dualstack/src/modem_interface.c **** 
  61:../../shields/Murata-dualstack/src/modem_interface.c **** typedef enum {
  62:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_IDLE,
  63:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_REQ_START,
  64:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_REQ_WAIT,
  65:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_REQ_BUSY,
  66:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_RESP,
  67:../../shields/Murata-dualstack/src/modem_interface.c ****   STATE_RESP_PENDING_REQ
  68:../../shields/Murata-dualstack/src/modem_interface.c **** } state_t;
  69:../../shields/Murata-dualstack/src/modem_interface.c **** 
  70:../../shields/Murata-dualstack/src/modem_interface.c **** static state_t state = STATE_IDLE;
  71:../../shields/Murata-dualstack/src/modem_interface.c **** 
  72:../../shields/Murata-dualstack/src/modem_interface.c **** #define SWITCH_STATE(s) do { \
  73:../../shields/Murata-dualstack/src/modem_interface.c ****   state = s; \
  74:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("switch to %s\n", #s); \
  75:../../shields/Murata-dualstack/src/modem_interface.c **** } while(0)
  76:../../shields/Murata-dualstack/src/modem_interface.c **** 
  77:../../shields/Murata-dualstack/src/modem_interface.c **** bool process_rx_fifo(void *arg);
  78:../../shields/Murata-dualstack/src/modem_interface.c **** static void execute_state_machine();
  79:../../shields/Murata-dualstack/src/modem_interface.c **** 
  80:../../shields/Murata-dualstack/src/modem_interface.c **** 
  81:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief Enable UART interface and UART interrupt
  82:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
  83:../../shields/Murata-dualstack/src/modem_interface.c ****  */
  84:../../shields/Murata-dualstack/src/modem_interface.c **** static void modem_interface_enable(void) 
  85:../../shields/Murata-dualstack/src/modem_interface.c **** {
  86:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_listen_uart_inited = true;
  87:../../shields/Murata-dualstack/src/modem_interface.c **** }
  88:../../shields/Murata-dualstack/src/modem_interface.c **** 
  89:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief disables UART interface
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 3


  90:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
  91:../../shields/Murata-dualstack/src/modem_interface.c ****  */
  92:../../shields/Murata-dualstack/src/modem_interface.c **** static void modem_interface_disable(void) 
  93:../../shields/Murata-dualstack/src/modem_interface.c **** {
  94:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_listen_uart_inited = false;
  95:../../shields/Murata-dualstack/src/modem_interface.c **** }
  96:../../shields/Murata-dualstack/src/modem_interface.c **** 
  97:../../shields/Murata-dualstack/src/modem_interface.c **** /** @brief Lets receiver know that 
  98:../../shields/Murata-dualstack/src/modem_interface.c ****  *  all the data has been transfered
  99:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 100:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 101:../../shields/Murata-dualstack/src/modem_interface.c **** static void release_receiver()
 102:../../shields/Murata-dualstack/src/modem_interface.c **** {
 103:../../shields/Murata-dualstack/src/modem_interface.c **** #if PLATFORM_USE_MODEM_INTERRUPT_LINES
 104:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("release receiver\n");
 105:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_interface_disable();
 106:../../shields/Murata-dualstack/src/modem_interface.c ****   murata_release();
 107:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 108:../../shields/Murata-dualstack/src/modem_interface.c **** }
 109:../../shields/Murata-dualstack/src/modem_interface.c **** 
 110:../../shields/Murata-dualstack/src/modem_interface.c **** /** @brief transmit data in fifo to UART
 111:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 112:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 113:../../shields/Murata-dualstack/src/modem_interface.c **** static void flush_modem_interface_tx_fifo(void *arg) 
 114:../../shields/Murata-dualstack/src/modem_interface.c **** {
 115:../../shields/Murata-dualstack/src/modem_interface.c ****   uint8_t len = fifo_get_size(&modem_interface_tx_fifo);
 116:../../shields/Murata-dualstack/src/modem_interface.c **** 
 117:../../shields/Murata-dualstack/src/modem_interface.c **** #ifdef HAL_UART_USE_DMA_TX
 118:../../shields/Murata-dualstack/src/modem_interface.c ****   // when using DMA we transmit the whole FIFO at once
 119:../../shields/Murata-dualstack/src/modem_interface.c ****   uint8_t buffer[MODEM_INTERFACE_TX_FIFO_SIZE];
 120:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_pop(&modem_interface_tx_fifo, buffer, len);
 121:../../shields/Murata-dualstack/src/modem_interface.c ****   HAL_UART_Transmit(uart_handle, buffer, len, 1000);
 122:../../shields/Murata-dualstack/src/modem_interface.c **** #else
 123:../../shields/Murata-dualstack/src/modem_interface.c ****   // only send small chunks over uart each invocation, to make sure
 124:../../shields/Murata-dualstack/src/modem_interface.c ****   // we don't interfer with critical stack timings.
 125:../../shields/Murata-dualstack/src/modem_interface.c ****   // When there is still data left in the fifo this will be rescheduled
 126:../../shields/Murata-dualstack/src/modem_interface.c ****   // with lowest prio
 127:../../shields/Murata-dualstack/src/modem_interface.c ****   uint8_t chunk[TX_FIFO_FLUSH_CHUNK_SIZE];
 128:../../shields/Murata-dualstack/src/modem_interface.c ****   if(len <= TX_FIFO_FLUSH_CHUNK_SIZE)
 129:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 130:../../shields/Murata-dualstack/src/modem_interface.c ****     fifo_pop(&modem_interface_tx_fifo, chunk, len);
 131:../../shields/Murata-dualstack/src/modem_interface.c ****     HAL_UART_Transmit(uart, chunk, len, 1000);
 132:../../shields/Murata-dualstack/src/modem_interface.c ****     request_pending = false;
 133:../../shields/Murata-dualstack/src/modem_interface.c ****     release_receiver();
 134:../../shields/Murata-dualstack/src/modem_interface.c **** #if PLATFORM_USE_MODEM_INTERRUPT_LINES
 135:../../shields/Murata-dualstack/src/modem_interface.c ****     execute_state_machine());
 136:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 137:../../shields/Murata-dualstack/src/modem_interface.c ****   } 
 138:../../shields/Murata-dualstack/src/modem_interface.c ****   else 
 139:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 140:../../shields/Murata-dualstack/src/modem_interface.c ****     fifo_pop(&modem_interface_tx_fifo, chunk, TX_FIFO_FLUSH_CHUNK_SIZE);
 141:../../shields/Murata-dualstack/src/modem_interface.c ****     HAL_UART_Transmit(uart, chunk, TX_FIFO_FLUSH_CHUNK_SIZE, 1000);
 142:../../shields/Murata-dualstack/src/modem_interface.c ****     flush_modem_interface_tx_fifo(NULL);
 143:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 144:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 145:../../shields/Murata-dualstack/src/modem_interface.c **** }
 146:../../shields/Murata-dualstack/src/modem_interface.c **** 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 4


 147:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief Keeps µC awake while receiving UART data
 148:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 149:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 150:../../shields/Murata-dualstack/src/modem_interface.c **** static void modem_listen(void* arg)
 151:../../shields/Murata-dualstack/src/modem_interface.c **** {
 152:../../shields/Murata-dualstack/src/modem_interface.c ****   if(!modem_listen_uart_inited)
 153:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 154:../../shields/Murata-dualstack/src/modem_interface.c ****     modem_interface_enable();
 155:../../shields/Murata-dualstack/src/modem_interface.c ****     murata_wakeup(); //set interrupt gpio to indicate ready for data
 156:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 157:../../shields/Murata-dualstack/src/modem_interface.c **** 
 158:../../shields/Murata-dualstack/src/modem_interface.c ****   // prevent the MCU to go back to stop mode by scheduling ourself again until pin goes low,
 159:../../shields/Murata-dualstack/src/modem_interface.c ****   // to keep UART RX enabled ?
 160:../../shields/Murata-dualstack/src/modem_interface.c ****   while(HAL_GPIO_ReadPin(GPIOF, GPIO_PIN_5));
 161:../../shields/Murata-dualstack/src/modem_interface.c **** }
 162:../../shields/Murata-dualstack/src/modem_interface.c **** 
 163:../../shields/Murata-dualstack/src/modem_interface.c **** 
 164:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief Schedules flush tx fifo when receiver is ready
 165:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 166:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 167:../../shields/Murata-dualstack/src/modem_interface.c **** static void execute_state_machine()
 168:../../shields/Murata-dualstack/src/modem_interface.c **** {
 169:../../shields/Murata-dualstack/src/modem_interface.c **** #if PLATFORM_USE_MODEM_INTERRUPT_LINES
 170:../../shields/Murata-dualstack/src/modem_interface.c ****   switch(state) {
 171:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_RESP:
 172:../../shields/Murata-dualstack/src/modem_interface.c ****       // response period completed, process the request
 173:../../shields/Murata-dualstack/src/modem_interface.c ****       assert(!hw_gpio_get_in(target_uart_state_pin));
 174:../../shields/Murata-dualstack/src/modem_interface.c ****       sched_post_task(&process_rx_fifo);
 175:../../shields/Murata-dualstack/src/modem_interface.c ****       if(request_pending) {
 176:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_RESP_PENDING_REQ);
 177:../../shields/Murata-dualstack/src/modem_interface.c ****         sched_post_task(&execute_state_machine);
 178:../../shields/Murata-dualstack/src/modem_interface.c ****       } else {
 179:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_IDLE);
 180:../../shields/Murata-dualstack/src/modem_interface.c ****         hw_gpio_clr(uart_state_pin);
 181:../../shields/Murata-dualstack/src/modem_interface.c ****         sched_cancel_task(&modem_listen);
 182:../../shields/Murata-dualstack/src/modem_interface.c ****         modem_interface_disable();
 183:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 184:../../shields/Murata-dualstack/src/modem_interface.c ****       break;
 185:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_IDLE:
 186:../../shields/Murata-dualstack/src/modem_interface.c ****       if(hw_gpio_get_in(target_uart_state_pin)) {
 187:../../shields/Murata-dualstack/src/modem_interface.c ****         // wake-up requested
 188:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_RESP);
 189:../../shields/Murata-dualstack/src/modem_interface.c ****         modem_listen(NULL);
 190:../../shields/Murata-dualstack/src/modem_interface.c ****         break;
 191:../../shields/Murata-dualstack/src/modem_interface.c ****       } else if(request_pending) { //check if we are really requesting a start
 192:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_REQ_START);
 193:../../shields/Murata-dualstack/src/modem_interface.c ****         // fall-through to STATE_REQ_START!
 194:../../shields/Murata-dualstack/src/modem_interface.c ****       } else
 195:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 196:../../shields/Murata-dualstack/src/modem_interface.c ****         break;
 197:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 198:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_REQ_START:
 199:../../shields/Murata-dualstack/src/modem_interface.c ****       // TODO timeout
 200:../../shields/Murata-dualstack/src/modem_interface.c ****       sched_cancel_task(&modem_listen);
 201:../../shields/Murata-dualstack/src/modem_interface.c ****       SWITCH_STATE(STATE_REQ_WAIT);
 202:../../shields/Murata-dualstack/src/modem_interface.c ****       hw_gpio_set(uart_state_pin); // wake-up receiver
 203:../../shields/Murata-dualstack/src/modem_interface.c ****       DPRINT("wake-up receiver\n");
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 5


 204:../../shields/Murata-dualstack/src/modem_interface.c ****       sched_post_task(&execute_state_machine); // reschedule again to prevent sleeoping
 205:../../shields/Murata-dualstack/src/modem_interface.c ****       // in principle we could go to sleep but this will cause pin to float, this can be improved l
 206:../../shields/Murata-dualstack/src/modem_interface.c ****       break;
 207:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_REQ_WAIT:
 208:../../shields/Murata-dualstack/src/modem_interface.c ****       if(hw_gpio_get_in(target_uart_state_pin)) {
 209:../../shields/Murata-dualstack/src/modem_interface.c ****         // receiver active
 210:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_REQ_BUSY);
 211:../../shields/Murata-dualstack/src/modem_interface.c ****         // fall-through to STATE_REQ_BUSY!
 212:../../shields/Murata-dualstack/src/modem_interface.c ****       } else {
 213:../../shields/Murata-dualstack/src/modem_interface.c ****         // TODO timeout
 214:../../shields/Murata-dualstack/src/modem_interface.c ****         sched_post_task(&execute_state_machine); // reschedule again to prevent sleeoping
 215:../../shields/Murata-dualstack/src/modem_interface.c ****         // in principle we could go to sleep but this will cause pin to float, this can be improved
 216:../../shields/Murata-dualstack/src/modem_interface.c ****         break;
 217:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 218:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_REQ_BUSY:
 219:../../shields/Murata-dualstack/src/modem_interface.c ****       if(request_pending) {
 220:../../shields/Murata-dualstack/src/modem_interface.c ****         modem_interface_enable();
 221:../../shields/Murata-dualstack/src/modem_interface.c ****         sched_post_task_prio(&flush_modem_interface_tx_fifo, MIN_PRIORITY, NULL);
 222:../../shields/Murata-dualstack/src/modem_interface.c ****       } else if (!hw_gpio_get_in(target_uart_state_pin)){
 223:../../shields/Murata-dualstack/src/modem_interface.c ****         SWITCH_STATE(STATE_IDLE);
 224:../../shields/Murata-dualstack/src/modem_interface.c ****       } else
 225:../../shields/Murata-dualstack/src/modem_interface.c ****         sched_post_task(&execute_state_machine); 
 226:../../shields/Murata-dualstack/src/modem_interface.c ****         //keep active until target reacts
 227:../../shields/Murata-dualstack/src/modem_interface.c ****       break;
 228:../../shields/Murata-dualstack/src/modem_interface.c ****     case STATE_RESP_PENDING_REQ:
 229:../../shields/Murata-dualstack/src/modem_interface.c ****       assert(request_pending);
 230:../../shields/Murata-dualstack/src/modem_interface.c ****       // response period completed, initiate pending request by switching to REQ_START
 231:../../shields/Murata-dualstack/src/modem_interface.c ****       assert(!hw_gpio_get_in(target_uart_state_pin));
 232:../../shields/Murata-dualstack/src/modem_interface.c ****       hw_gpio_clr(uart_state_pin);
 233:../../shields/Murata-dualstack/src/modem_interface.c ****       SWITCH_STATE(STATE_REQ_START);
 234:../../shields/Murata-dualstack/src/modem_interface.c ****       sched_post_task(&execute_state_machine);
 235:../../shields/Murata-dualstack/src/modem_interface.c ****       break;
 236:../../shields/Murata-dualstack/src/modem_interface.c ****     default:
 237:../../shields/Murata-dualstack/src/modem_interface.c ****       DPRINT("unexpected state %i\n", state);
 238:../../shields/Murata-dualstack/src/modem_interface.c ****       assert(false);
 239:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 240:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 241:../../shields/Murata-dualstack/src/modem_interface.c **** }
 242:../../shields/Murata-dualstack/src/modem_interface.c **** 
 243:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief Check package counter and crc
 244:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 245:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 246:../../shields/Murata-dualstack/src/modem_interface.c **** static bool verify_payload(fifo_t* bytes, uint8_t* header)
 247:../../shields/Murata-dualstack/src/modem_interface.c **** {
  27              		.loc 1 247 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 0C46     		mov	r4, r1
 248:../../shields/Murata-dualstack/src/modem_interface.c ****   static uint8_t payload[RX_BUFFER_SIZE - SERIAL_FRAME_HEADER_SIZE]; // statically allocated so thi
 249:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_peek(bytes, (uint8_t*) &payload, 0, header[SERIAL_FRAME_SIZE]);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 6


  38              		.loc 1 249 0
  39 0004 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
  40 0006 0022     		movs	r2, #0
  41 0008 0F49     		ldr	r1, .L8
  42              	.LVL1:
  43 000a FFF7FEFF 		bl	fifo_peek
  44              	.LVL2:
 250:../../shields/Murata-dualstack/src/modem_interface.c **** 
 251:../../shields/Murata-dualstack/src/modem_interface.c ****   //check for missing packages
 252:../../shields/Murata-dualstack/src/modem_interface.c ****   packet_down_counter++;
  45              		.loc 1 252 0
  46 000e 0F4A     		ldr	r2, .L8+4
  47 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0012 0133     		adds	r3, r3, #1
  49 0014 DBB2     		uxtb	r3, r3
  50 0016 1370     		strb	r3, [r2]
 253:../../shields/Murata-dualstack/src/modem_interface.c ****   if(header[SERIAL_FRAME_COUNTER]!=packet_down_counter)
  51              		.loc 1 253 0
  52 0018 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
  53 001a 9342     		cmp	r3, r2
  54 001c 01D0     		beq	.L2
 254:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 255:../../shields/Murata-dualstack/src/modem_interface.c ****     //TODO consequence? (save total missing packages?)
 256:../../shields/Murata-dualstack/src/modem_interface.c ****     //log_print_string("!!! missed packages: %i",(header[SERIAL_FRAME_COUNTER]-packet_down_counter)
 257:../../shields/Murata-dualstack/src/modem_interface.c ****     packet_down_counter=header[SERIAL_FRAME_COUNTER]; //reset package counter
  55              		.loc 1 257 0
  56 001e 0B4B     		ldr	r3, .L8+4
  57 0020 1A70     		strb	r2, [r3]
  58              	.L2:
 258:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 259:../../shields/Murata-dualstack/src/modem_interface.c **** 
 260:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("RX HEADER: ");
 261:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT_DATA(header, SERIAL_FRAME_HEADER_SIZE);
 262:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("RX PAYLOAD: ");
 263:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT_DATA(payload, header[SERIAL_FRAME_SIZE]);
 264:../../shields/Murata-dualstack/src/modem_interface.c **** 
 265:../../shields/Murata-dualstack/src/modem_interface.c ****   uint16_t calculated_crc = crc_calculate(payload, header[SERIAL_FRAME_SIZE]);
  59              		.loc 1 265 0
  60 0022 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
  61 0024 0848     		ldr	r0, .L8
  62 0026 FFF7FEFF 		bl	crc_calculate
  63              	.LVL3:
 266:../../shields/Murata-dualstack/src/modem_interface.c ****  
 267:../../shields/Murata-dualstack/src/modem_interface.c ****   if(header[SERIAL_FRAME_CRC1]!=((calculated_crc >> 8) & 0x00FF) || header[SERIAL_FRAME_CRC2]!=(cal
  64              		.loc 1 267 0
  65 002a 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
  66 002c C0F30F23 		ubfx	r3, r0, #8, #16
  67 0030 9A42     		cmp	r2, r3
  68 0032 01D0     		beq	.L7
 268:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 269:../../shields/Murata-dualstack/src/modem_interface.c ****     //TODO consequence? (request repeat?)
 270:../../shields/Murata-dualstack/src/modem_interface.c ****     //log_print_string("CRC incorrect!");
 271:../../shields/Murata-dualstack/src/modem_interface.c ****     return false;
  69              		.loc 1 271 0
  70 0034 0020     		movs	r0, #0
  71              	.LVL4:
  72              	.L3:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 7


 272:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 273:../../shields/Murata-dualstack/src/modem_interface.c ****   else
 274:../../shields/Murata-dualstack/src/modem_interface.c ****     return true;
 275:../../shields/Murata-dualstack/src/modem_interface.c **** }
  73              		.loc 1 275 0
  74 0036 10BD     		pop	{r4, pc}
  75              	.LVL5:
  76              	.L7:
 267:../../shields/Murata-dualstack/src/modem_interface.c ****   {
  77              		.loc 1 267 0 discriminator 1
  78 0038 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
  79 003a C0B2     		uxtb	r0, r0
  80              	.LVL6:
  81 003c 8342     		cmp	r3, r0
  82 003e 01D0     		beq	.L5
 271:../../shields/Murata-dualstack/src/modem_interface.c ****   }
  83              		.loc 1 271 0
  84 0040 0020     		movs	r0, #0
  85 0042 F8E7     		b	.L3
  86              	.L5:
 274:../../shields/Murata-dualstack/src/modem_interface.c **** }
  87              		.loc 1 274 0
  88 0044 0120     		movs	r0, #1
  89 0046 F6E7     		b	.L3
  90              	.L9:
  91              		.align	2
  92              	.L8:
  93 0048 00000000 		.word	.LANCHOR0
  94 004c 00000000 		.word	.LANCHOR1
  95              		.cfi_endproc
  96              	.LFE129:
  98              		.section	.text.flush_modem_interface_tx_fifo,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv4-sp-d16
 105              	flush_modem_interface_tx_fifo:
 106              	.LFB126:
 114:../../shields/Murata-dualstack/src/modem_interface.c ****   uint8_t len = fifo_get_size(&modem_interface_tx_fifo);
 107              		.loc 1 114 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 16
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL7:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 84B0     		sub	sp, sp, #16
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 24
 115:../../shields/Murata-dualstack/src/modem_interface.c **** 
 120              		.loc 1 115 0
 121 0004 1348     		ldr	r0, .L14
 122              	.LVL8:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 8


 123 0006 FFF7FEFF 		bl	fifo_get_size
 124              	.LVL9:
 125 000a C3B2     		uxtb	r3, r0
 126              	.LVL10:
 128:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 127              		.loc 1 128 0
 128 000c 0A2B     		cmp	r3, #10
 129 000e 0FD8     		bhi	.L11
 130 0010 1C46     		mov	r4, r3
 130:../../shields/Murata-dualstack/src/modem_interface.c ****     HAL_UART_Transmit(uart, chunk, len, 1000);
 131              		.loc 1 130 0
 132 0012 1A46     		mov	r2, r3
 133 0014 01A9     		add	r1, sp, #4
 134 0016 0F48     		ldr	r0, .L14
 135 0018 FFF7FEFF 		bl	fifo_pop
 136              	.LVL11:
 131:../../shields/Murata-dualstack/src/modem_interface.c ****     request_pending = false;
 137              		.loc 1 131 0
 138 001c 4FF47A73 		mov	r3, #1000
 139 0020 2246     		mov	r2, r4
 140 0022 01A9     		add	r1, sp, #4
 141 0024 0C48     		ldr	r0, .L14+4
 142 0026 0068     		ldr	r0, [r0]
 143 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 144              	.LVL12:
 145              	.L10:
 145:../../shields/Murata-dualstack/src/modem_interface.c **** 
 146              		.loc 1 145 0
 147 002c 04B0     		add	sp, sp, #16
 148              	.LCFI3:
 149              		.cfi_remember_state
 150              		.cfi_def_cfa_offset 8
 151              		@ sp needed
 152 002e 10BD     		pop	{r4, pc}
 153              	.LVL13:
 154              	.L11:
 155              	.LCFI4:
 156              		.cfi_restore_state
 140:../../shields/Murata-dualstack/src/modem_interface.c ****     HAL_UART_Transmit(uart, chunk, TX_FIFO_FLUSH_CHUNK_SIZE, 1000);
 157              		.loc 1 140 0
 158 0030 0A22     		movs	r2, #10
 159 0032 01A9     		add	r1, sp, #4
 160 0034 0748     		ldr	r0, .L14
 161 0036 FFF7FEFF 		bl	fifo_pop
 162              	.LVL14:
 141:../../shields/Murata-dualstack/src/modem_interface.c ****     flush_modem_interface_tx_fifo(NULL);
 163              		.loc 1 141 0
 164 003a 4FF47A73 		mov	r3, #1000
 165 003e 0A22     		movs	r2, #10
 166 0040 01A9     		add	r1, sp, #4
 167 0042 0548     		ldr	r0, .L14+4
 168 0044 0068     		ldr	r0, [r0]
 169 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 170              	.LVL15:
 142:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 171              		.loc 1 142 0
 172 004a 0020     		movs	r0, #0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 9


 173 004c FFF7D8FF 		bl	flush_modem_interface_tx_fifo
 174              	.LVL16:
 145:../../shields/Murata-dualstack/src/modem_interface.c **** 
 175              		.loc 1 145 0
 176 0050 ECE7     		b	.L10
 177              	.L15:
 178 0052 00BF     		.align	2
 179              	.L14:
 180 0054 00000000 		.word	.LANCHOR2
 181 0058 00000000 		.word	uart
 182              		.cfi_endproc
 183              	.LFE126:
 185              		.section	.text.uart_rx_cb,"ax",%progbits
 186              		.align	1
 187              		.global	uart_rx_cb
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	uart_rx_cb:
 194              	.LFB131:
 276:../../shields/Murata-dualstack/src/modem_interface.c **** 
 277:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief Processes received uart data
 278:../../shields/Murata-dualstack/src/modem_interface.c ****  * 1) Search for sync bytes (always)
 279:../../shields/Murata-dualstack/src/modem_interface.c ****  * 2) get header size and parse header
 280:../../shields/Murata-dualstack/src/modem_interface.c ****  * 3) Wait for correct # of bytes (length present in header)
 281:../../shields/Murata-dualstack/src/modem_interface.c ****  * 4) Execute crc check and check message counter
 282:../../shields/Murata-dualstack/src/modem_interface.c ****  * 5) send to corresponding service (alp, ping service, log service)
 283:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 284:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 285:../../shields/Murata-dualstack/src/modem_interface.c **** bool process_rx_fifo(void *arg) 
 286:../../shields/Murata-dualstack/src/modem_interface.c **** {
 287:../../shields/Murata-dualstack/src/modem_interface.c ****   if(!parsed_header) 
 288:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 289:../../shields/Murata-dualstack/src/modem_interface.c ****     if(fifo_get_size(&rx_fifo) > SERIAL_FRAME_HEADER_SIZE) 
 290:../../shields/Murata-dualstack/src/modem_interface.c ****     {
 291:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_peek(&rx_fifo, header, 0, SERIAL_FRAME_HEADER_SIZE);
 292:../../shields/Murata-dualstack/src/modem_interface.c **** 
 293:../../shields/Murata-dualstack/src/modem_interface.c ****         if(header[0] != SERIAL_FRAME_SYNC_BYTE || header[1] != SERIAL_FRAME_VERSION) 
 294:../../shields/Murata-dualstack/src/modem_interface.c ****         {
 295:../../shields/Murata-dualstack/src/modem_interface.c ****           fifo_skip(&rx_fifo, 1);
 296:../../shields/Murata-dualstack/src/modem_interface.c ****           //printf("skip\r\n");
 297:../../shields/Murata-dualstack/src/modem_interface.c ****           parsed_header = false;
 298:../../shields/Murata-dualstack/src/modem_interface.c ****           payload_len = 0;
 299:../../shields/Murata-dualstack/src/modem_interface.c ****           if(fifo_get_size(&rx_fifo) > SERIAL_FRAME_HEADER_SIZE)
 300:../../shields/Murata-dualstack/src/modem_interface.c ****             return false;
 301:../../shields/Murata-dualstack/src/modem_interface.c ****           return false;
 302:../../shields/Murata-dualstack/src/modem_interface.c ****         }
 303:../../shields/Murata-dualstack/src/modem_interface.c ****         parsed_header = true;
 304:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_skip(&rx_fifo, SERIAL_FRAME_HEADER_SIZE);
 305:../../shields/Murata-dualstack/src/modem_interface.c ****         payload_len = header[SERIAL_FRAME_SIZE];
 306:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("UART RX, payload size = %i\r\n", payload_len);
 307:../../shields/Murata-dualstack/src/modem_interface.c ****         return false;
 308:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 309:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 310:../../shields/Murata-dualstack/src/modem_interface.c ****   else 
 311:../../shields/Murata-dualstack/src/modem_interface.c ****   {
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 10


 312:../../shields/Murata-dualstack/src/modem_interface.c ****     if(fifo_get_size(&rx_fifo) < payload_len) {
 313:../../shields/Murata-dualstack/src/modem_interface.c ****       printf("payload not complete\r\n");
 314:../../shields/Murata-dualstack/src/modem_interface.c ****       return false;
 315:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 316:../../shields/Murata-dualstack/src/modem_interface.c ****     // payload complete, start parsing
 317:../../shields/Murata-dualstack/src/modem_interface.c ****     // rx_fifo can be bigger than the current serial packet, init a subview fifo
 318:../../shields/Murata-dualstack/src/modem_interface.c ****     // which is restricted to payload_len so we can't parse past this packet.
 319:../../shields/Murata-dualstack/src/modem_interface.c ****     fifo_t payload_fifo;
 320:../../shields/Murata-dualstack/src/modem_interface.c ****     fifo_init_subview(&payload_fifo, &rx_fifo, 0, payload_len);
 321:../../shields/Murata-dualstack/src/modem_interface.c ****   
 322:../../shields/Murata-dualstack/src/modem_interface.c ****     if(verify_payload(&payload_fifo,(uint8_t *)&header))
 323:../../shields/Murata-dualstack/src/modem_interface.c ****     {
 324:../../shields/Murata-dualstack/src/modem_interface.c ****       if(header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_ALP_DATA && alp_handler != NULL)
 325:../../shields/Murata-dualstack/src/modem_interface.c ****         alp_handler(&payload_fifo);
 326:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_PING_RESPONSE  && ping_response_handl
 327:../../shields/Murata-dualstack/src/modem_interface.c ****         ping_response_handler(&payload_fifo);
 328:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_LOGGING && logging_handler != NULL)
 329:../../shields/Murata-dualstack/src/modem_interface.c ****         logging_handler(&payload_fifo);
 330:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_PING_REQUEST)
 331:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 332:../../shields/Murata-dualstack/src/modem_interface.c ****         uint8_t ping_reply[1]={0x02};
 333:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_skip(&payload_fifo,1);
 334:../../shields/Murata-dualstack/src/modem_interface.c ****         modem_interface_transfer_bytes((uint8_t*) &ping_reply,1,SERIAL_MESSAGE_TYPE_PING_RESPONSE);
 335:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 336:../../shields/Murata-dualstack/src/modem_interface.c ****       else if(header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_REBOOTED)
 337:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 338:../../shields/Murata-dualstack/src/modem_interface.c ****         uint8_t reboot_reason;
 339:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_pop(&payload_fifo, &reboot_reason, 1);
 340:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("target rebooted, reason=%i\n\r\n", reboot_reason);
 341:../../shields/Murata-dualstack/src/modem_interface.c ****         if(target_rebooted_cb)
 342:../../shields/Murata-dualstack/src/modem_interface.c ****           target_rebooted_cb(reboot_reason);
 343:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 344:../../shields/Murata-dualstack/src/modem_interface.c ****       else
 345:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 346:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_skip(&payload_fifo, payload_len);
 347:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("!!!FRAME TYPE NOT IMPLEMENTED\r\n");
 348:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 349:../../shields/Murata-dualstack/src/modem_interface.c ****       fifo_skip(&rx_fifo, payload_len - fifo_get_size(&payload_fifo)); // pop parsed bytes from ori
 350:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 351:../../shields/Murata-dualstack/src/modem_interface.c ****     else
 352:../../shields/Murata-dualstack/src/modem_interface.c ****       printf("!!!PAYLOAD DATA INCORRECT\r\n");
 353:../../shields/Murata-dualstack/src/modem_interface.c ****     payload_len = 0;
 354:../../shields/Murata-dualstack/src/modem_interface.c ****     parsed_header = false;
 355:../../shields/Murata-dualstack/src/modem_interface.c ****     if(fifo_get_size(&rx_fifo) > SERIAL_FRAME_HEADER_SIZE)
 356:../../shields/Murata-dualstack/src/modem_interface.c ****       return false;  
 357:../../shields/Murata-dualstack/src/modem_interface.c ****     return true;
 358:../../shields/Murata-dualstack/src/modem_interface.c ****   }
 359:../../shields/Murata-dualstack/src/modem_interface.c ****   //return false;
 360:../../shields/Murata-dualstack/src/modem_interface.c **** }
 361:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief put received UART data in fifo
 362:../../shields/Murata-dualstack/src/modem_interface.c ****  *  @return void
 363:../../shields/Murata-dualstack/src/modem_interface.c ****  */
 364:../../shields/Murata-dualstack/src/modem_interface.c **** void uart_rx_cb()
 365:../../shields/Murata-dualstack/src/modem_interface.c **** {
 195              		.loc 1 365 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 11


 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 366:../../shields/Murata-dualstack/src/modem_interface.c ****     HAL_UART_Receive_IT(uart, rxData, 1);
 204              		.loc 1 366 0
 205 0002 064C     		ldr	r4, .L18
 206 0004 0122     		movs	r2, #1
 207 0006 2146     		mov	r1, r4
 208 0008 054B     		ldr	r3, .L18+4
 209 000a 1868     		ldr	r0, [r3]
 210 000c FFF7FEFF 		bl	HAL_UART_Receive_IT
 211              	.LVL17:
 367:../../shields/Murata-dualstack/src/modem_interface.c ****     error_t err;
 368:../../shields/Murata-dualstack/src/modem_interface.c ****     //start_atomic();
 369:../../shields/Murata-dualstack/src/modem_interface.c ****         err = fifo_put(&rx_fifo, rxData, 1); //assert(err == SUCCESS);
 212              		.loc 1 369 0
 213 0010 0122     		movs	r2, #1
 214 0012 2146     		mov	r1, r4
 215 0014 0348     		ldr	r0, .L18+8
 216 0016 FFF7FEFF 		bl	fifo_put
 217              	.LVL18:
 370:../../shields/Murata-dualstack/src/modem_interface.c ****     //end_atomic();
 371:../../shields/Murata-dualstack/src/modem_interface.c ****     
 372:../../shields/Murata-dualstack/src/modem_interface.c **** #ifndef PLATFORM_USE_MODEM_INTERRUPT_LINES
 373:../../shields/Murata-dualstack/src/modem_interface.c ****     //sched_post_task(&process_rx_fifo);
 374:../../shields/Murata-dualstack/src/modem_interface.c ****     process_rx_fifo(NULL);
 375:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 376:../../shields/Murata-dualstack/src/modem_interface.c **** }
 218              		.loc 1 376 0
 219 001a 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 001c 00000000 		.word	rxData
 224 0020 00000000 		.word	uart
 225 0024 00000000 		.word	rx_fifo
 226              		.cfi_endproc
 227              	.LFE131:
 229              		.section	.text.modem_interface_transfer_bytes,"ax",%progbits
 230              		.align	1
 231              		.global	modem_interface_transfer_bytes
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	modem_interface_transfer_bytes:
 238              	.LFB133:
 377:../../shields/Murata-dualstack/src/modem_interface.c **** 
 378:../../shields/Murata-dualstack/src/modem_interface.c **** // /** @Brief Processes events on UART interrupt line
 379:../../shields/Murata-dualstack/src/modem_interface.c **** //  *  @return void
 380:../../shields/Murata-dualstack/src/modem_interface.c **** //  */
 381:../../shields/Murata-dualstack/src/modem_interface.c **** // static void uart_int_cb(void *arg)
 382:../../shields/Murata-dualstack/src/modem_interface.c **** // {
 383:../../shields/Murata-dualstack/src/modem_interface.c **** //   // do not read GPIO level here in interrupt context (GPIO clock might not be enabled yet), exe
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 12


 384:../../shields/Murata-dualstack/src/modem_interface.c **** //   sched_post_task(&execute_state_machine);
 385:../../shields/Murata-dualstack/src/modem_interface.c **** // }
 386:../../shields/Murata-dualstack/src/modem_interface.c **** 
 387:../../shields/Murata-dualstack/src/modem_interface.c **** // static void modem_interface_set_rx_interrupt_callback(uart_rx_inthandler_t uart_rx_cb) {
 388:../../shields/Murata-dualstack/src/modem_interface.c **** // #ifdef PLATFORM_USE_USB_CDC
 389:../../shields/Murata-dualstack/src/modem_interface.c **** // 	cdc_set_rx_interrupt_callback(uart_rx_cb);
 390:../../shields/Murata-dualstack/src/modem_interface.c **** // #else
 391:../../shields/Murata-dualstack/src/modem_interface.c **** //   uart_set_rx_interrupt_callback(uart, uart_rx_cb);
 392:../../shields/Murata-dualstack/src/modem_interface.c **** // #endif
 393:../../shields/Murata-dualstack/src/modem_interface.c **** // }
 394:../../shields/Murata-dualstack/src/modem_interface.c **** 
 395:../../shields/Murata-dualstack/src/modem_interface.c **** void modem_interface_init(UART_HandleTypeDef* uart_handle) 
 396:../../shields/Murata-dualstack/src/modem_interface.c **** {
 397:../../shields/Murata-dualstack/src/modem_interface.c ****   uart = uart_handle;
 398:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_init(&modem_interface_tx_fifo, modem_interface_tx_buffer, MODEM_INTERFACE_TX_FIFO_SIZE);
 399:../../shields/Murata-dualstack/src/modem_interface.c ****   flush_modem_interface_tx_fifo(NULL);
 400:../../shields/Murata-dualstack/src/modem_interface.c ****   execute_state_machine();
 401:../../shields/Murata-dualstack/src/modem_interface.c ****   process_rx_fifo(NULL);
 402:../../shields/Murata-dualstack/src/modem_interface.c ****   state = STATE_IDLE;
 403:../../shields/Murata-dualstack/src/modem_interface.c ****   
 404:../../shields/Murata-dualstack/src/modem_interface.c ****   // uart_state_pin=uart_state_int_pin;
 405:../../shields/Murata-dualstack/src/modem_interface.c ****   // target_uart_state_pin=target_uart_state_int_pin;
 406:../../shields/Murata-dualstack/src/modem_interface.c ****   
 407:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_init(&rx_fifo, rx_buffer, sizeof(rx_buffer));
 408:../../shields/Murata-dualstack/src/modem_interface.c ****   HAL_UART_Receive_IT(uart, rxData, 1);
 409:../../shields/Murata-dualstack/src/modem_interface.c **** 
 410:../../shields/Murata-dualstack/src/modem_interface.c **** // When not using interrupt lines we keep uart enabled so we can use RX IRQ.
 411:../../shields/Murata-dualstack/src/modem_interface.c **** // If the platform has interrupt lines the UART should be re-enabled when handling the modem interr
 412:../../shields/Murata-dualstack/src/modem_interface.c **** #ifndef PLATFORM_USE_MODEM_INTERRUPT_LINES
 413:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_interface_enable();
 414:../../shields/Murata-dualstack/src/modem_interface.c **** #endif
 415:../../shields/Murata-dualstack/src/modem_interface.c **** 
 416:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_interface_transfer_bytes(1, 1, SERIAL_MESSAGE_TYPE_REBOOTED);
 417:../../shields/Murata-dualstack/src/modem_interface.c **** }
 418:../../shields/Murata-dualstack/src/modem_interface.c **** 
 419:../../shields/Murata-dualstack/src/modem_interface.c **** void modem_interface_transfer_bytes(uint8_t* bytes, uint8_t length, serial_message_type_t type) 
 420:../../shields/Murata-dualstack/src/modem_interface.c **** {
 239              		.loc 1 420 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL19:
 244 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 245              	.LCFI6:
 246              		.cfi_def_cfa_offset 20
 247              		.cfi_offset 4, -20
 248              		.cfi_offset 5, -16
 249              		.cfi_offset 6, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              	.LCFI7:
 254              		.cfi_def_cfa_offset 32
 255 0004 0746     		mov	r7, r0
 256 0006 0E46     		mov	r6, r1
 257 0008 1546     		mov	r5, r2
 421:../../shields/Murata-dualstack/src/modem_interface.c ****   uint8_t header[SERIAL_FRAME_HEADER_SIZE];
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 13


 422:../../shields/Murata-dualstack/src/modem_interface.c ****   uint16_t crc=crc_calculate(bytes,length);
 258              		.loc 1 422 0
 259 000a FFF7FEFF 		bl	crc_calculate
 260              	.LVL20:
 423:../../shields/Murata-dualstack/src/modem_interface.c **** 
 424:../../shields/Murata-dualstack/src/modem_interface.c ****   packet_up_counter++;
 261              		.loc 1 424 0
 262 000e 134A     		ldr	r2, .L22
 263 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 264 0012 0133     		adds	r3, r3, #1
 265 0014 DBB2     		uxtb	r3, r3
 266 0016 1370     		strb	r3, [r2]
 425:../../shields/Murata-dualstack/src/modem_interface.c ****   header[0] = SERIAL_FRAME_SYNC_BYTE;
 267              		.loc 1 425 0
 268 0018 C022     		movs	r2, #192
 269 001a 8DF80020 		strb	r2, [sp]
 426:../../shields/Murata-dualstack/src/modem_interface.c ****   header[1] = SERIAL_FRAME_VERSION;
 270              		.loc 1 426 0
 271 001e 0024     		movs	r4, #0
 272 0020 8DF80140 		strb	r4, [sp, #1]
 427:../../shields/Murata-dualstack/src/modem_interface.c **** 
 428:../../shields/Murata-dualstack/src/modem_interface.c ****   header[SERIAL_FRAME_COUNTER] = packet_up_counter;
 273              		.loc 1 428 0
 274 0024 8DF80230 		strb	r3, [sp, #2]
 429:../../shields/Murata-dualstack/src/modem_interface.c ****   header[SERIAL_FRAME_TYPE] = type;
 275              		.loc 1 429 0
 276 0028 8DF80350 		strb	r5, [sp, #3]
 430:../../shields/Murata-dualstack/src/modem_interface.c ****   header[SERIAL_FRAME_SIZE] = length;
 277              		.loc 1 430 0
 278 002c 8DF80460 		strb	r6, [sp, #4]
 431:../../shields/Murata-dualstack/src/modem_interface.c ****   header[SERIAL_FRAME_CRC1] = (crc >> 8) & 0x00FF;
 279              		.loc 1 431 0
 280 0030 030A     		lsrs	r3, r0, #8
 281 0032 8DF80530 		strb	r3, [sp, #5]
 432:../../shields/Murata-dualstack/src/modem_interface.c ****   header[SERIAL_FRAME_CRC2] = crc & 0x00FF;
 282              		.loc 1 432 0
 283 0036 8DF80600 		strb	r0, [sp, #6]
 433:../../shields/Murata-dualstack/src/modem_interface.c **** 
 434:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("TX HEADER:");
 435:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT_DATA(header, SERIAL_FRAME_HEADER_SIZE);
 436:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT("TX PAYLOAD:");
 437:../../shields/Murata-dualstack/src/modem_interface.c ****   DPRINT_DATA(bytes, length);
 438:../../shields/Murata-dualstack/src/modem_interface.c ****    
 439:../../shields/Murata-dualstack/src/modem_interface.c ****   //start_atomic();
 440:../../shields/Murata-dualstack/src/modem_interface.c ****   request_pending = true;
 441:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_put(&modem_interface_tx_fifo, (uint8_t*) &header, SERIAL_FRAME_HEADER_SIZE);
 284              		.loc 1 441 0
 285 003a 094D     		ldr	r5, .L22+4
 286 003c 0722     		movs	r2, #7
 287 003e 6946     		mov	r1, sp
 288 0040 2846     		mov	r0, r5
 289              	.LVL21:
 290 0042 FFF7FEFF 		bl	fifo_put
 291              	.LVL22:
 442:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_put(&modem_interface_tx_fifo, bytes, length);
 292              		.loc 1 442 0
 293 0046 3246     		mov	r2, r6
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 14


 294 0048 3946     		mov	r1, r7
 295 004a 2846     		mov	r0, r5
 296 004c FFF7FEFF 		bl	fifo_put
 297              	.LVL23:
 443:../../shields/Murata-dualstack/src/modem_interface.c ****   //end_atomic();
 444:../../shields/Murata-dualstack/src/modem_interface.c **** 
 445:../../shields/Murata-dualstack/src/modem_interface.c **** #if PLATFORM_USE_MODEM_INTERRUPT_LINES
 446:../../shields/Murata-dualstack/src/modem_interface.c ****   execute_state_machine();
 447:../../shields/Murata-dualstack/src/modem_interface.c **** #else
 448:../../shields/Murata-dualstack/src/modem_interface.c ****   flush_modem_interface_tx_fifo(NULL); // state machine is not used when not using interrupt lines
 298              		.loc 1 448 0
 299 0050 2046     		mov	r0, r4
 300 0052 FFF7FEFF 		bl	flush_modem_interface_tx_fifo
 301              	.LVL24:
 449:../../shields/Murata-dualstack/src/modem_interface.c **** #endif  
 450:../../shields/Murata-dualstack/src/modem_interface.c **** }
 302              		.loc 1 450 0
 303 0056 03B0     		add	sp, sp, #12
 304              	.LCFI8:
 305              		.cfi_def_cfa_offset 20
 306              		@ sp needed
 307 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 308              	.LVL25:
 309              	.L23:
 310 005a 00BF     		.align	2
 311              	.L22:
 312 005c 00000000 		.word	.LANCHOR3
 313 0060 00000000 		.word	.LANCHOR2
 314              		.cfi_endproc
 315              	.LFE133:
 317              		.section	.text.process_rx_fifo,"ax",%progbits
 318              		.align	1
 319              		.global	process_rx_fifo
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	process_rx_fifo:
 326              	.LFB130:
 286:../../shields/Murata-dualstack/src/modem_interface.c ****   if(!parsed_header) 
 327              		.loc 1 286 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 24
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              	.LVL26:
 332 0000 30B5     		push	{r4, r5, lr}
 333              	.LCFI9:
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 5, -8
 337              		.cfi_offset 14, -4
 338 0002 87B0     		sub	sp, sp, #28
 339              	.LCFI10:
 340              		.cfi_def_cfa_offset 40
 287:../../shields/Murata-dualstack/src/modem_interface.c ****   {
 341              		.loc 1 287 0
 342 0004 554B     		ldr	r3, .L48
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 15


 343 0006 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 344 0008 84BB     		cbnz	r4, .L25
 289:../../shields/Murata-dualstack/src/modem_interface.c ****     {
 345              		.loc 1 289 0
 346 000a 5548     		ldr	r0, .L48+4
 347              	.LVL27:
 348 000c FFF7FEFF 		bl	fifo_get_size
 349              	.LVL28:
 350 0010 0728     		cmp	r0, #7
 351 0012 02D8     		bhi	.L42
 352              	.L24:
 360:../../shields/Murata-dualstack/src/modem_interface.c **** /** @Brief put received UART data in fifo
 353              		.loc 1 360 0
 354 0014 2046     		mov	r0, r4
 355 0016 07B0     		add	sp, sp, #28
 356              	.LCFI11:
 357              		.cfi_remember_state
 358              		.cfi_def_cfa_offset 12
 359              		@ sp needed
 360 0018 30BD     		pop	{r4, r5, pc}
 361              	.L42:
 362              	.LCFI12:
 363              		.cfi_restore_state
 364              	.LBB2:
 291:../../shields/Murata-dualstack/src/modem_interface.c **** 
 365              		.loc 1 291 0
 366 001a 524D     		ldr	r5, .L48+8
 367 001c 0723     		movs	r3, #7
 368 001e 0022     		movs	r2, #0
 369 0020 2946     		mov	r1, r5
 370 0022 4F48     		ldr	r0, .L48+4
 371 0024 FFF7FEFF 		bl	fifo_peek
 372              	.LVL29:
 293:../../shields/Murata-dualstack/src/modem_interface.c ****         {
 373              		.loc 1 293 0
 374 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 375 002a C02B     		cmp	r3, #192
 376 002c 01D1     		bne	.L27
 293:../../shields/Murata-dualstack/src/modem_interface.c ****         {
 377              		.loc 1 293 0 is_stmt 0 discriminator 1
 378 002e 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 379 0030 6BB1     		cbz	r3, .L28
 380              	.L27:
 295:../../shields/Murata-dualstack/src/modem_interface.c ****           //printf("skip\r\n");
 381              		.loc 1 295 0 is_stmt 1
 382 0032 4B4D     		ldr	r5, .L48+4
 383 0034 0121     		movs	r1, #1
 384 0036 2846     		mov	r0, r5
 385 0038 FFF7FEFF 		bl	fifo_skip
 386              	.LVL30:
 297:../../shields/Murata-dualstack/src/modem_interface.c ****           payload_len = 0;
 387              		.loc 1 297 0
 388 003c 0023     		movs	r3, #0
 389 003e 474A     		ldr	r2, .L48
 390 0040 1370     		strb	r3, [r2]
 298:../../shields/Murata-dualstack/src/modem_interface.c ****           if(fifo_get_size(&rx_fifo) > SERIAL_FRAME_HEADER_SIZE)
 391              		.loc 1 298 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 16


 392 0042 494A     		ldr	r2, .L48+12
 393 0044 1370     		strb	r3, [r2]
 299:../../shields/Murata-dualstack/src/modem_interface.c ****             return false;
 394              		.loc 1 299 0
 395 0046 2846     		mov	r0, r5
 396 0048 FFF7FEFF 		bl	fifo_get_size
 397              	.LVL31:
 398 004c E2E7     		b	.L24
 399              	.L28:
 303:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_skip(&rx_fifo, SERIAL_FRAME_HEADER_SIZE);
 400              		.loc 1 303 0
 401 004e 434B     		ldr	r3, .L48
 402 0050 0122     		movs	r2, #1
 403 0052 1A70     		strb	r2, [r3]
 304:../../shields/Murata-dualstack/src/modem_interface.c ****         payload_len = header[SERIAL_FRAME_SIZE];
 404              		.loc 1 304 0
 405 0054 0721     		movs	r1, #7
 406 0056 4248     		ldr	r0, .L48+4
 407 0058 FFF7FEFF 		bl	fifo_skip
 408              	.LVL32:
 305:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("UART RX, payload size = %i\r\n", payload_len);
 409              		.loc 1 305 0
 410 005c 414B     		ldr	r3, .L48+8
 411 005e 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 412 0060 414B     		ldr	r3, .L48+12
 413 0062 1970     		strb	r1, [r3]
 306:../../shields/Murata-dualstack/src/modem_interface.c ****         return false;
 414              		.loc 1 306 0
 415 0064 4148     		ldr	r0, .L48+16
 416 0066 FFF7FEFF 		bl	printf
 417              	.LVL33:
 307:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 418              		.loc 1 307 0
 419 006a D3E7     		b	.L24
 420              	.LVL34:
 421              	.L25:
 422              	.LBE2:
 423              	.LBB3:
 312:../../shields/Murata-dualstack/src/modem_interface.c ****       printf("payload not complete\r\n");
 424              		.loc 1 312 0
 425 006c 3C48     		ldr	r0, .L48+4
 426              	.LVL35:
 427 006e FFF7FEFF 		bl	fifo_get_size
 428              	.LVL36:
 429 0072 3D4B     		ldr	r3, .L48+12
 430 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0076 9842     		cmp	r0, r3
 432 0078 04D2     		bcs	.L30
 433              	.LBB4:
 313:../../shields/Murata-dualstack/src/modem_interface.c ****       return false;
 434              		.loc 1 313 0
 435 007a 3D48     		ldr	r0, .L48+20
 436 007c FFF7FEFF 		bl	puts
 437              	.LVL37:
 314:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 438              		.loc 1 314 0
 439 0080 0024     		movs	r4, #0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 17


 440 0082 C7E7     		b	.L24
 441              	.L30:
 442              	.LBE4:
 320:../../shields/Murata-dualstack/src/modem_interface.c ****   
 443              		.loc 1 320 0
 444 0084 0022     		movs	r2, #0
 445 0086 3649     		ldr	r1, .L48+4
 446 0088 02A8     		add	r0, sp, #8
 447 008a FFF7FEFF 		bl	fifo_init_subview
 448              	.LVL38:
 322:../../shields/Murata-dualstack/src/modem_interface.c ****     {
 449              		.loc 1 322 0
 450 008e 3549     		ldr	r1, .L48+8
 451 0090 02A8     		add	r0, sp, #8
 452 0092 FFF7FEFF 		bl	verify_payload
 453              	.LVL39:
 454 0096 0028     		cmp	r0, #0
 455 0098 5CD0     		beq	.L32
 324:../../shields/Murata-dualstack/src/modem_interface.c ****         alp_handler(&payload_fifo);
 456              		.loc 1 324 0
 457 009a 324B     		ldr	r3, .L48+8
 458 009c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 459 009e 012B     		cmp	r3, #1
 460 00a0 10D0     		beq	.L43
 461              	.L33:
 326:../../shields/Murata-dualstack/src/modem_interface.c ****         ping_response_handler(&payload_fifo);
 462              		.loc 1 326 0
 463 00a2 032B     		cmp	r3, #3
 464 00a4 2AD0     		beq	.L44
 465              	.L35:
 328:../../shields/Murata-dualstack/src/modem_interface.c ****         logging_handler(&payload_fifo);
 466              		.loc 1 328 0
 467 00a6 042B     		cmp	r3, #4
 468 00a8 2FD0     		beq	.L45
 469              	.L36:
 330:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 470              		.loc 1 330 0
 471 00aa 022B     		cmp	r3, #2
 472 00ac 34D0     		beq	.L46
 336:../../shields/Murata-dualstack/src/modem_interface.c ****       {
 473              		.loc 1 336 0
 474 00ae 052B     		cmp	r3, #5
 475 00b0 3ED0     		beq	.L47
 476              	.LBB5:
 346:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("!!!FRAME TYPE NOT IMPLEMENTED\r\n");
 477              		.loc 1 346 0
 478 00b2 2D4B     		ldr	r3, .L48+12
 479 00b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 480 00b6 02A8     		add	r0, sp, #8
 481 00b8 FFF7FEFF 		bl	fifo_skip
 482              	.LVL40:
 347:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 483              		.loc 1 347 0
 484 00bc 2D48     		ldr	r0, .L48+24
 485 00be FFF7FEFF 		bl	puts
 486              	.LVL41:
 487 00c2 05E0     		b	.L34
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 18


 488              	.L43:
 489              	.LBE5:
 324:../../shields/Murata-dualstack/src/modem_interface.c ****         alp_handler(&payload_fifo);
 490              		.loc 1 324 0 discriminator 1
 491 00c4 2C4A     		ldr	r2, .L48+28
 492 00c6 1268     		ldr	r2, [r2]
 493 00c8 002A     		cmp	r2, #0
 494 00ca EAD0     		beq	.L33
 325:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_PING_RESPONSE  && ping_response_handl
 495              		.loc 1 325 0
 496 00cc 02A8     		add	r0, sp, #8
 497 00ce 9047     		blx	r2
 498              	.LVL42:
 499              	.L34:
 349:../../shields/Murata-dualstack/src/modem_interface.c ****     }
 500              		.loc 1 349 0
 501 00d0 254B     		ldr	r3, .L48+12
 502 00d2 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 503 00d4 02A8     		add	r0, sp, #8
 504 00d6 FFF7FEFF 		bl	fifo_get_size
 505              	.LVL43:
 506 00da 291A     		subs	r1, r5, r0
 507 00dc 89B2     		uxth	r1, r1
 508 00de 2048     		ldr	r0, .L48+4
 509 00e0 FFF7FEFF 		bl	fifo_skip
 510              	.LVL44:
 511              	.L40:
 353:../../shields/Murata-dualstack/src/modem_interface.c ****     parsed_header = false;
 512              		.loc 1 353 0
 513 00e4 0023     		movs	r3, #0
 514 00e6 204A     		ldr	r2, .L48+12
 515 00e8 1370     		strb	r3, [r2]
 354:../../shields/Murata-dualstack/src/modem_interface.c ****     if(fifo_get_size(&rx_fifo) > SERIAL_FRAME_HEADER_SIZE)
 516              		.loc 1 354 0
 517 00ea 1C4A     		ldr	r2, .L48
 518 00ec 1370     		strb	r3, [r2]
 355:../../shields/Murata-dualstack/src/modem_interface.c ****       return false;  
 519              		.loc 1 355 0
 520 00ee 1C48     		ldr	r0, .L48+4
 521 00f0 FFF7FEFF 		bl	fifo_get_size
 522              	.LVL45:
 523 00f4 0728     		cmp	r0, #7
 524 00f6 8DD9     		bls	.L24
 356:../../shields/Murata-dualstack/src/modem_interface.c ****     return true;
 525              		.loc 1 356 0
 526 00f8 0024     		movs	r4, #0
 527 00fa 8BE7     		b	.L24
 528              	.L44:
 326:../../shields/Murata-dualstack/src/modem_interface.c ****         ping_response_handler(&payload_fifo);
 529              		.loc 1 326 0 discriminator 1
 530 00fc 1F4A     		ldr	r2, .L48+32
 531 00fe 1268     		ldr	r2, [r2]
 532 0100 002A     		cmp	r2, #0
 533 0102 D0D0     		beq	.L35
 327:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_LOGGING && logging_handler != NULL)
 534              		.loc 1 327 0
 535 0104 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 19


 536 0106 9047     		blx	r2
 537              	.LVL46:
 538 0108 E2E7     		b	.L34
 539              	.L45:
 328:../../shields/Murata-dualstack/src/modem_interface.c ****         logging_handler(&payload_fifo);
 540              		.loc 1 328 0 discriminator 1
 541 010a 1D4A     		ldr	r2, .L48+36
 542 010c 1268     		ldr	r2, [r2]
 543 010e 002A     		cmp	r2, #0
 544 0110 CBD0     		beq	.L36
 329:../../shields/Murata-dualstack/src/modem_interface.c ****       else if (header[SERIAL_FRAME_TYPE]==SERIAL_MESSAGE_TYPE_PING_REQUEST)
 545              		.loc 1 329 0
 546 0112 02A8     		add	r0, sp, #8
 547 0114 9047     		blx	r2
 548              	.LVL47:
 549 0116 DBE7     		b	.L34
 550              	.L46:
 551              	.LBB6:
 332:../../shields/Murata-dualstack/src/modem_interface.c ****         fifo_skip(&payload_fifo,1);
 552              		.loc 1 332 0
 553 0118 8DF80430 		strb	r3, [sp, #4]
 333:../../shields/Murata-dualstack/src/modem_interface.c ****         modem_interface_transfer_bytes((uint8_t*) &ping_reply,1,SERIAL_MESSAGE_TYPE_PING_RESPONSE);
 554              		.loc 1 333 0
 555 011c 0121     		movs	r1, #1
 556 011e 02A8     		add	r0, sp, #8
 557 0120 FFF7FEFF 		bl	fifo_skip
 558              	.LVL48:
 334:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 559              		.loc 1 334 0
 560 0124 0322     		movs	r2, #3
 561 0126 0121     		movs	r1, #1
 562 0128 01A8     		add	r0, sp, #4
 563 012a FFF7FEFF 		bl	modem_interface_transfer_bytes
 564              	.LVL49:
 565              	.LBE6:
 566 012e CFE7     		b	.L34
 567              	.L47:
 568              	.LBB7:
 339:../../shields/Murata-dualstack/src/modem_interface.c ****         printf("target rebooted, reason=%i\n\r\n", reboot_reason);
 569              		.loc 1 339 0
 570 0130 0122     		movs	r2, #1
 571 0132 01A9     		add	r1, sp, #4
 572 0134 02A8     		add	r0, sp, #8
 573 0136 FFF7FEFF 		bl	fifo_pop
 574              	.LVL50:
 340:../../shields/Murata-dualstack/src/modem_interface.c ****         if(target_rebooted_cb)
 575              		.loc 1 340 0
 576 013a 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 577 013e 1148     		ldr	r0, .L48+40
 578 0140 FFF7FEFF 		bl	printf
 579              	.LVL51:
 341:../../shields/Murata-dualstack/src/modem_interface.c ****           target_rebooted_cb(reboot_reason);
 580              		.loc 1 341 0
 581 0144 104B     		ldr	r3, .L48+44
 582 0146 1B68     		ldr	r3, [r3]
 583 0148 002B     		cmp	r3, #0
 584 014a C1D0     		beq	.L34
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 20


 342:../../shields/Murata-dualstack/src/modem_interface.c ****       }
 585              		.loc 1 342 0
 586 014c 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 587 0150 9847     		blx	r3
 588              	.LVL52:
 589 0152 BDE7     		b	.L34
 590              	.L32:
 591              	.LBE7:
 592              	.LBB8:
 352:../../shields/Murata-dualstack/src/modem_interface.c ****     payload_len = 0;
 593              		.loc 1 352 0
 594 0154 0D48     		ldr	r0, .L48+48
 595 0156 FFF7FEFF 		bl	puts
 596              	.LVL53:
 597 015a C3E7     		b	.L40
 598              	.L49:
 599              		.align	2
 600              	.L48:
 601 015c 00000000 		.word	.LANCHOR4
 602 0160 00000000 		.word	rx_fifo
 603 0164 00000000 		.word	header
 604 0168 00000000 		.word	.LANCHOR5
 605 016c 00000000 		.word	.LC0
 606 0170 20000000 		.word	.LC1
 607 0174 58000000 		.word	.LC3
 608 0178 00000000 		.word	.LANCHOR6
 609 017c 00000000 		.word	.LANCHOR7
 610 0180 00000000 		.word	.LANCHOR8
 611 0184 38000000 		.word	.LC2
 612 0188 00000000 		.word	.LANCHOR9
 613 018c 78000000 		.word	.LC4
 614              	.LBE8:
 615              	.LBE3:
 616              		.cfi_endproc
 617              	.LFE130:
 619              		.section	.text.modem_interface_init,"ax",%progbits
 620              		.align	1
 621              		.global	modem_interface_init
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	modem_interface_init:
 628              	.LFB132:
 396:../../shields/Murata-dualstack/src/modem_interface.c ****   uart = uart_handle;
 629              		.loc 1 396 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              	.LVL54:
 634 0000 10B5     		push	{r4, lr}
 635              	.LCFI13:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 4, -8
 638              		.cfi_offset 14, -4
 397:../../shields/Murata-dualstack/src/modem_interface.c ****   fifo_init(&modem_interface_tx_fifo, modem_interface_tx_buffer, MODEM_INTERFACE_TX_FIFO_SIZE);
 639              		.loc 1 397 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 21


 640 0002 0F4C     		ldr	r4, .L52
 641 0004 2060     		str	r0, [r4]
 398:../../shields/Murata-dualstack/src/modem_interface.c ****   flush_modem_interface_tx_fifo(NULL);
 642              		.loc 1 398 0
 643 0006 FF22     		movs	r2, #255
 644 0008 0E49     		ldr	r1, .L52+4
 645 000a 0F48     		ldr	r0, .L52+8
 646              	.LVL55:
 647 000c FFF7FEFF 		bl	fifo_init
 648              	.LVL56:
 399:../../shields/Murata-dualstack/src/modem_interface.c ****   execute_state_machine();
 649              		.loc 1 399 0
 650 0010 0020     		movs	r0, #0
 651 0012 FFF7FEFF 		bl	flush_modem_interface_tx_fifo
 652              	.LVL57:
 401:../../shields/Murata-dualstack/src/modem_interface.c ****   state = STATE_IDLE;
 653              		.loc 1 401 0
 654 0016 0020     		movs	r0, #0
 655 0018 FFF7FEFF 		bl	process_rx_fifo
 656              	.LVL58:
 407:../../shields/Murata-dualstack/src/modem_interface.c ****   HAL_UART_Receive_IT(uart, rxData, 1);
 657              		.loc 1 407 0
 658 001c 4FF48072 		mov	r2, #256
 659 0020 0A49     		ldr	r1, .L52+12
 660 0022 0B48     		ldr	r0, .L52+16
 661 0024 FFF7FEFF 		bl	fifo_init
 662              	.LVL59:
 408:../../shields/Murata-dualstack/src/modem_interface.c **** 
 663              		.loc 1 408 0
 664 0028 0122     		movs	r2, #1
 665 002a 0A49     		ldr	r1, .L52+20
 666 002c 2068     		ldr	r0, [r4]
 667 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 668              	.LVL60:
 416:../../shields/Murata-dualstack/src/modem_interface.c **** }
 669              		.loc 1 416 0
 670 0032 0522     		movs	r2, #5
 671 0034 0121     		movs	r1, #1
 672 0036 0846     		mov	r0, r1
 673 0038 FFF7FEFF 		bl	modem_interface_transfer_bytes
 674              	.LVL61:
 417:../../shields/Murata-dualstack/src/modem_interface.c **** 
 675              		.loc 1 417 0
 676 003c 10BD     		pop	{r4, pc}
 677              	.L53:
 678 003e 00BF     		.align	2
 679              	.L52:
 680 0040 00000000 		.word	uart
 681 0044 00000000 		.word	.LANCHOR10
 682 0048 00000000 		.word	.LANCHOR2
 683 004c 00000000 		.word	.LANCHOR11
 684 0050 00000000 		.word	rx_fifo
 685 0054 00000000 		.word	rxData
 686              		.cfi_endproc
 687              	.LFE132:
 689              		.section	.text.modem_interface_transfer,"ax",%progbits
 690              		.align	1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 22


 691              		.global	modem_interface_transfer
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	modem_interface_transfer:
 698              	.LFB134:
 451:../../shields/Murata-dualstack/src/modem_interface.c **** 
 452:../../shields/Murata-dualstack/src/modem_interface.c **** void modem_interface_transfer(char* string) {
 699              		.loc 1 452 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL62:
 704 0000 10B5     		push	{r4, lr}
 705              	.LCFI14:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 0002 0446     		mov	r4, r0
 453:../../shields/Murata-dualstack/src/modem_interface.c ****   modem_interface_transfer_bytes((uint8_t*) string, strnlen(string, 100), SERIAL_MESSAGE_TYPE_LOGGI
 710              		.loc 1 453 0
 711 0004 6421     		movs	r1, #100
 712 0006 FFF7FEFF 		bl	strnlen
 713              	.LVL63:
 714 000a 0422     		movs	r2, #4
 715 000c C1B2     		uxtb	r1, r0
 716 000e 2046     		mov	r0, r4
 717 0010 FFF7FEFF 		bl	modem_interface_transfer_bytes
 718              	.LVL64:
 454:../../shields/Murata-dualstack/src/modem_interface.c **** }
 719              		.loc 1 454 0
 720 0014 10BD     		pop	{r4, pc}
 721              		.cfi_endproc
 722              	.LFE134:
 724              		.section	.text.modem_interface_register_handler,"ax",%progbits
 725              		.align	1
 726              		.global	modem_interface_register_handler
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	modem_interface_register_handler:
 733              	.LFB135:
 455:../../shields/Murata-dualstack/src/modem_interface.c **** 
 456:../../shields/Murata-dualstack/src/modem_interface.c **** 
 457:../../shields/Murata-dualstack/src/modem_interface.c **** void modem_interface_register_handler(cmd_handler_t cmd_handler, serial_message_type_t type)
 458:../../shields/Murata-dualstack/src/modem_interface.c **** {
 734              		.loc 1 458 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739              	.LVL65:
 459:../../shields/Murata-dualstack/src/modem_interface.c ****   if(type == SERIAL_MESSAGE_TYPE_ALP_DATA) 
 740              		.loc 1 459 0
 741 0000 0129     		cmp	r1, #1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 23


 742 0002 04D0     		beq	.L60
 460:../../shields/Murata-dualstack/src/modem_interface.c ****     alp_handler=cmd_handler;
 461:../../shields/Murata-dualstack/src/modem_interface.c ****   else if(type == SERIAL_MESSAGE_TYPE_PING_RESPONSE) 
 743              		.loc 1 461 0
 744 0004 0329     		cmp	r1, #3
 745 0006 05D0     		beq	.L61
 462:../../shields/Murata-dualstack/src/modem_interface.c ****     ping_response_handler=cmd_handler;
 463:../../shields/Murata-dualstack/src/modem_interface.c ****   else if(type == SERIAL_MESSAGE_TYPE_LOGGING) 
 746              		.loc 1 463 0
 747 0008 0429     		cmp	r1, #4
 748 000a 06D0     		beq	.L62
 749              	.L56:
 464:../../shields/Murata-dualstack/src/modem_interface.c ****     logging_handler=cmd_handler;
 465:../../shields/Murata-dualstack/src/modem_interface.c ****   else
 466:../../shields/Murata-dualstack/src/modem_interface.c ****     DPRINT("Modem interface callback not implemented");
 467:../../shields/Murata-dualstack/src/modem_interface.c **** }
 750              		.loc 1 467 0
 751 000c 7047     		bx	lr
 752              	.L60:
 460:../../shields/Murata-dualstack/src/modem_interface.c ****   else if(type == SERIAL_MESSAGE_TYPE_PING_RESPONSE) 
 753              		.loc 1 460 0
 754 000e 044B     		ldr	r3, .L63
 755 0010 1860     		str	r0, [r3]
 756 0012 7047     		bx	lr
 757              	.L61:
 462:../../shields/Murata-dualstack/src/modem_interface.c ****     ping_response_handler=cmd_handler;
 758              		.loc 1 462 0
 759 0014 034B     		ldr	r3, .L63+4
 760 0016 1860     		str	r0, [r3]
 761 0018 7047     		bx	lr
 762              	.L62:
 464:../../shields/Murata-dualstack/src/modem_interface.c ****     logging_handler=cmd_handler;
 763              		.loc 1 464 0
 764 001a 034B     		ldr	r3, .L63+8
 765 001c 1860     		str	r0, [r3]
 766              		.loc 1 467 0
 767 001e F5E7     		b	.L56
 768              	.L64:
 769              		.align	2
 770              	.L63:
 771 0020 00000000 		.word	.LANCHOR6
 772 0024 00000000 		.word	.LANCHOR7
 773 0028 00000000 		.word	.LANCHOR8
 774              		.cfi_endproc
 775              	.LFE135:
 777              		.section	.text.modem_interface_set_target_rebooted_callback,"ax",%progbits
 778              		.align	1
 779              		.global	modem_interface_set_target_rebooted_callback
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 783              		.fpu fpv4-sp-d16
 785              	modem_interface_set_target_rebooted_callback:
 786              	.LFB136:
 468:../../shields/Murata-dualstack/src/modem_interface.c **** 
 469:../../shields/Murata-dualstack/src/modem_interface.c **** void modem_interface_set_target_rebooted_callback(target_rebooted_callback_t cb)
 470:../../shields/Murata-dualstack/src/modem_interface.c **** {
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 24


 787              		.loc 1 470 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL66:
 471:../../shields/Murata-dualstack/src/modem_interface.c ****   target_rebooted_cb = cb;
 793              		.loc 1 471 0
 794 0000 014B     		ldr	r3, .L66
 795 0002 1860     		str	r0, [r3]
 472:../../shields/Murata-dualstack/src/modem_interface.c **** }
 796              		.loc 1 472 0
 797 0004 7047     		bx	lr
 798              	.L67:
 799 0006 00BF     		.align	2
 800              	.L66:
 801 0008 00000000 		.word	.LANCHOR9
 802              		.cfi_endproc
 803              	.LFE136:
 805              		.comm	header,7,4
 806              		.comm	rx_fifo,16,4
 807              		.comm	rxData,1,4
 808              		.comm	uart,4,4
 809              		.comm	P3_UART,120,4
 810              		.comm	P2_UART,120,4
 811              		.comm	P1_UART,120,4
 812              		.comm	BLE_UART,120,4
 813              		.comm	USB_UART,120,4
 814              		.section	.bss.alp_handler,"aw",%nobits
 815              		.align	2
 816              		.set	.LANCHOR6,. + 0
 819              	alp_handler:
 820 0000 00000000 		.space	4
 821              		.section	.bss.logging_handler,"aw",%nobits
 822              		.align	2
 823              		.set	.LANCHOR8,. + 0
 826              	logging_handler:
 827 0000 00000000 		.space	4
 828              		.section	.bss.modem_interface_tx_buffer,"aw",%nobits
 829              		.align	2
 830              		.set	.LANCHOR10,. + 0
 833              	modem_interface_tx_buffer:
 834 0000 00000000 		.space	255
 834      00000000 
 834      00000000 
 834      00000000 
 834      00000000 
 835              		.section	.bss.modem_interface_tx_fifo,"aw",%nobits
 836              		.align	2
 837              		.set	.LANCHOR2,. + 0
 840              	modem_interface_tx_fifo:
 841 0000 00000000 		.space	16
 841      00000000 
 841      00000000 
 841      00000000 
 842              		.section	.bss.packet_down_counter,"aw",%nobits
 843              		.set	.LANCHOR1,. + 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 25


 846              	packet_down_counter:
 847 0000 00       		.space	1
 848              		.section	.bss.packet_up_counter,"aw",%nobits
 849              		.set	.LANCHOR3,. + 0
 852              	packet_up_counter:
 853 0000 00       		.space	1
 854              		.section	.bss.parsed_header,"aw",%nobits
 855              		.set	.LANCHOR4,. + 0
 858              	parsed_header:
 859 0000 00       		.space	1
 860              		.section	.bss.payload.9481,"aw",%nobits
 861              		.align	2
 862              		.set	.LANCHOR0,. + 0
 865              	payload.9481:
 866 0000 00000000 		.space	249
 866      00000000 
 866      00000000 
 866      00000000 
 866      00000000 
 867              		.section	.bss.payload_len,"aw",%nobits
 868              		.set	.LANCHOR5,. + 0
 871              	payload_len:
 872 0000 00       		.space	1
 873              		.section	.bss.ping_response_handler,"aw",%nobits
 874              		.align	2
 875              		.set	.LANCHOR7,. + 0
 878              	ping_response_handler:
 879 0000 00000000 		.space	4
 880              		.section	.bss.rx_buffer,"aw",%nobits
 881              		.align	2
 882              		.set	.LANCHOR11,. + 0
 885              	rx_buffer:
 886 0000 00000000 		.space	256
 886      00000000 
 886      00000000 
 886      00000000 
 886      00000000 
 887              		.section	.bss.target_rebooted_cb,"aw",%nobits
 888              		.align	2
 889              		.set	.LANCHOR9,. + 0
 892              	target_rebooted_cb:
 893 0000 00000000 		.space	4
 894              		.section	.rodata.process_rx_fifo.str1.4,"aMS",%progbits,1
 895              		.align	2
 896              	.LC0:
 897 0000 55415254 		.ascii	"UART RX, payload size = %i\015\012\000"
 897      2052582C 
 897      20706179 
 897      6C6F6164 
 897      2073697A 
 898 001d 000000   		.space	3
 899              	.LC1:
 900 0020 7061796C 		.ascii	"payload not complete\015\000"
 900      6F616420 
 900      6E6F7420 
 900      636F6D70 
 900      6C657465 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 26


 901 0036 0000     		.space	2
 902              	.LC2:
 903 0038 74617267 		.ascii	"target rebooted, reason=%i\012\015\012\000"
 903      65742072 
 903      65626F6F 
 903      7465642C 
 903      20726561 
 904 0056 0000     		.space	2
 905              	.LC3:
 906 0058 21212146 		.ascii	"!!!FRAME TYPE NOT IMPLEMENTED\015\000"
 906      52414D45 
 906      20545950 
 906      45204E4F 
 906      5420494D 
 907 0077 00       		.space	1
 908              	.LC4:
 909 0078 21212150 		.ascii	"!!!PAYLOAD DATA INCORRECT\015\000"
 909      41594C4F 
 909      41442044 
 909      41544120 
 909      494E434F 
 910              		.text
 911              	.Letext0:
 912              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 913              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 914              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 915              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 916              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 917              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 918              		.file 8 "../../core/ST/CMSIS/Include/core_cm4.h"
 919              		.file 9 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 920              		.file 10 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 921              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 922              		.file 12 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 923              		.file 13 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 924              		.file 14 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 925              		.file 15 "../../core/platform/octa/inc/uart.h"
 926              		.file 16 "../../shields/Murata-dualstack/inc/types.h"
 927              		.file 17 "../../shields/Murata-dualstack/inc/fifo.h"
 928              		.file 18 "../../shields/Murata-dualstack/inc/modem_interface.h"
 929              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 930              		.file 20 "<built-in>"
 931              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 932              		.file 22 "../../shields/Murata-dualstack/inc/crc.h"
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 modem_interface.c
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:18     .text.verify_payload:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:24     .text.verify_payload:00000000 verify_payload
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:93     .text.verify_payload:00000048 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:99     .text.flush_modem_interface_tx_fifo:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:105    .text.flush_modem_interface_tx_fifo:00000000 flush_modem_interface_tx_fifo
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:180    .text.flush_modem_interface_tx_fifo:00000054 $d
                            *COM*:00000004 uart
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:186    .text.uart_rx_cb:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:193    .text.uart_rx_cb:00000000 uart_rx_cb
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:223    .text.uart_rx_cb:0000001c $d
                            *COM*:00000001 rxData
                            *COM*:00000010 rx_fifo
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:230    .text.modem_interface_transfer_bytes:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:237    .text.modem_interface_transfer_bytes:00000000 modem_interface_transfer_bytes
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:312    .text.modem_interface_transfer_bytes:0000005c $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:318    .text.process_rx_fifo:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:325    .text.process_rx_fifo:00000000 process_rx_fifo
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:601    .text.process_rx_fifo:0000015c $d
                            *COM*:00000007 header
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:620    .text.modem_interface_init:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:627    .text.modem_interface_init:00000000 modem_interface_init
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:680    .text.modem_interface_init:00000040 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:690    .text.modem_interface_transfer:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:697    .text.modem_interface_transfer:00000000 modem_interface_transfer
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:725    .text.modem_interface_register_handler:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:732    .text.modem_interface_register_handler:00000000 modem_interface_register_handler
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:771    .text.modem_interface_register_handler:00000020 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:778    .text.modem_interface_set_target_rebooted_callback:00000000 $t
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:785    .text.modem_interface_set_target_rebooted_callback:00000000 modem_interface_set_target_rebooted_callback
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:801    .text.modem_interface_set_target_rebooted_callback:00000008 $d
                            *COM*:00000078 P3_UART
                            *COM*:00000078 P2_UART
                            *COM*:00000078 P1_UART
                            *COM*:00000078 BLE_UART
                            *COM*:00000078 USB_UART
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:815    .bss.alp_handler:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:819    .bss.alp_handler:00000000 alp_handler
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:822    .bss.logging_handler:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:826    .bss.logging_handler:00000000 logging_handler
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:829    .bss.modem_interface_tx_buffer:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:833    .bss.modem_interface_tx_buffer:00000000 modem_interface_tx_buffer
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:836    .bss.modem_interface_tx_fifo:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:840    .bss.modem_interface_tx_fifo:00000000 modem_interface_tx_fifo
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:846    .bss.packet_down_counter:00000000 packet_down_counter
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:847    .bss.packet_down_counter:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:852    .bss.packet_up_counter:00000000 packet_up_counter
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:853    .bss.packet_up_counter:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:858    .bss.parsed_header:00000000 parsed_header
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:859    .bss.parsed_header:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:861    .bss.payload.9481:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:865    .bss.payload.9481:00000000 payload.9481
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:871    .bss.payload_len:00000000 payload_len
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:872    .bss.payload_len:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:874    .bss.ping_response_handler:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:878    .bss.ping_response_handler:00000000 ping_response_handler
ARM GAS  C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s 			page 28


C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:881    .bss.rx_buffer:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:885    .bss.rx_buffer:00000000 rx_buffer
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:888    .bss.target_rebooted_cb:00000000 $d
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:892    .bss.target_rebooted_cb:00000000 target_rebooted_cb
C:\Users\Jola\AppData\Local\Temp\cctKMSnZ.s:895    .rodata.process_rx_fifo.str1.4:00000000 $d

UNDEFINED SYMBOLS
fifo_peek
crc_calculate
fifo_get_size
fifo_pop
HAL_UART_Transmit
HAL_UART_Receive_IT
fifo_put
fifo_skip
printf
puts
fifo_init_subview
fifo_init
strnlen
