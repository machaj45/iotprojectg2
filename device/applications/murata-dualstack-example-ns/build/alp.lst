ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"alp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.parse_op_return_tag,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	parse_op_return_tag:
  25              	.LFB15:
  26              		.file 1 "../../shields/Murata-dualstack/src/alp.c"
   1:../../shields/Murata-dualstack/src/alp.c **** /*! \file alp.c
   2:../../shields/Murata-dualstack/src/alp.c ****  *
   3:../../shields/Murata-dualstack/src/alp.c **** 
   4:../../shields/Murata-dualstack/src/alp.c ****  *  \copyright (C) Copyright 2015 University of Antwerp and others (http://oss-7.cosys.be)
   5:../../shields/Murata-dualstack/src/alp.c ****  *
   6:../../shields/Murata-dualstack/src/alp.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
   7:../../shields/Murata-dualstack/src/alp.c ****  * you may not use this file except in compliance with the License.
   8:../../shields/Murata-dualstack/src/alp.c ****  * You may obtain a copy of the License at
   9:../../shields/Murata-dualstack/src/alp.c ****  *
  10:../../shields/Murata-dualstack/src/alp.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  11:../../shields/Murata-dualstack/src/alp.c ****  *
  12:../../shields/Murata-dualstack/src/alp.c ****  * Unless required by applicable law or agreed to in writing, software
  13:../../shields/Murata-dualstack/src/alp.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  14:../../shields/Murata-dualstack/src/alp.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  15:../../shields/Murata-dualstack/src/alp.c ****  * See the License for the specific language governing permissions and
  16:../../shields/Murata-dualstack/src/alp.c ****  * limitations under the License.
  17:../../shields/Murata-dualstack/src/alp.c ****  *
  18:../../shields/Murata-dualstack/src/alp.c ****  *  \author glenn.ergeerts@uantwerpen.be
  19:../../shields/Murata-dualstack/src/alp.c ****  *  \author maarten.weyn@uantwerpen.be
  20:../../shields/Murata-dualstack/src/alp.c ****  *
  21:../../shields/Murata-dualstack/src/alp.c ****  */
  22:../../shields/Murata-dualstack/src/alp.c **** 
  23:../../shields/Murata-dualstack/src/alp.c **** #include "stdlib.h"
  24:../../shields/Murata-dualstack/src/alp.c **** //#include "debug.h"
  25:../../shields/Murata-dualstack/src/alp.c **** #include "errors.h"
  26:../../shields/Murata-dualstack/src/alp.c **** 
  27:../../shields/Murata-dualstack/src/alp.c **** #include "alp.h"
  28:../../shields/Murata-dualstack/src/alp.c **** #include "dae.h"
  29:../../shields/Murata-dualstack/src/alp.c **** #include "fifo.h"
  30:../../shields/Murata-dualstack/src/alp.c **** #include "d7ap.h"
  31:../../shields/Murata-dualstack/src/alp.c **** //#include "log.h"
  32:../../shields/Murata-dualstack/src/alp.c **** #include "lorawan_stack.h"
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 2


  33:../../shields/Murata-dualstack/src/alp.c **** 
  34:../../shields/Murata-dualstack/src/alp.c **** #if defined(FRAMEWORK_LOG_ENABLED) && defined(FRAMEWORK_ALP_LOG_ENABLED)
  35:../../shields/Murata-dualstack/src/alp.c ****   #define DPRINT(...) log_print_stack_string(LOG_STACK_ALP, __VA_ARGS__)
  36:../../shields/Murata-dualstack/src/alp.c **** #else
  37:../../shields/Murata-dualstack/src/alp.c ****   #define DPRINT(...)
  38:../../shields/Murata-dualstack/src/alp.c **** #endif
  39:../../shields/Murata-dualstack/src/alp.c **** 
  40:../../shields/Murata-dualstack/src/alp.c **** 
  41:../../shields/Murata-dualstack/src/alp.c **** alp_operation_t alp_get_operation(uint8_t* alp_command)
  42:../../shields/Murata-dualstack/src/alp.c **** {
  43:../../shields/Murata-dualstack/src/alp.c ****     alp_control_t alp_ctrl;
  44:../../shields/Murata-dualstack/src/alp.c ****     alp_ctrl.raw = (*alp_command);
  45:../../shields/Murata-dualstack/src/alp.c ****     return alp_ctrl.operation;
  46:../../shields/Murata-dualstack/src/alp.c **** }
  47:../../shields/Murata-dualstack/src/alp.c **** 
  48:../../shields/Murata-dualstack/src/alp.c **** uint32_t alp_parse_length_operand(fifo_t* cmd_fifo) {
  49:../../shields/Murata-dualstack/src/alp.c ****   uint8_t len = 0;
  50:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&len, 1);
  51:../../shields/Murata-dualstack/src/alp.c ****   uint8_t field_len = len >> 6;
  52:../../shields/Murata-dualstack/src/alp.c ****   if(field_len == 0)
  53:../../shields/Murata-dualstack/src/alp.c ****     return (uint32_t)len;
  54:../../shields/Murata-dualstack/src/alp.c **** 
  55:../../shields/Murata-dualstack/src/alp.c ****   uint32_t full_length = (len & 0x3F) << ( 8 * field_len); // mask field length specificier bits an
  56:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
  57:../../shields/Murata-dualstack/src/alp.c ****   return full_length;
  58:../../shields/Murata-dualstack/src/alp.c **** }
  59:../../shields/Murata-dualstack/src/alp.c **** 
  60:../../shields/Murata-dualstack/src/alp.c **** void alp_append_length_operand(fifo_t* fifo, uint32_t length) {
  61:../../shields/Murata-dualstack/src/alp.c ****   if(length < 64) {
  62:../../shields/Murata-dualstack/src/alp.c ****     // can be coded in one byte
  63:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length, 1) == oss7SUCCESS);
  64:../../shields/Murata-dualstack/src/alp.c ****     return;
  65:../../shields/Murata-dualstack/src/alp.c ****   }
  66:../../shields/Murata-dualstack/src/alp.c **** 
  67:../../shields/Murata-dualstack/src/alp.c ****   uint8_t size = 1;
  68:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFF)
  69:../../shields/Murata-dualstack/src/alp.c ****     size = 2;
  70:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFFFF)
  71:../../shields/Murata-dualstack/src/alp.c ****     size = 3;
  72:../../shields/Murata-dualstack/src/alp.c **** 
  73:../../shields/Murata-dualstack/src/alp.c ****   uint8_t byte = 0;
  74:../../shields/Murata-dualstack/src/alp.c ****   byte += (size << 6); // length specifier bits
  75:../../shields/Murata-dualstack/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
  76:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
  77:../../shields/Murata-dualstack/src/alp.c ****   do {
  78:../../shields/Murata-dualstack/src/alp.c ****     size--;
  79:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
  80:../../shields/Murata-dualstack/src/alp.c ****   } while(size > 0);
  81:../../shields/Murata-dualstack/src/alp.c **** }
  82:../../shields/Murata-dualstack/src/alp.c **** 
  83:../../shields/Murata-dualstack/src/alp.c **** alp_operand_file_offset_t alp_parse_file_offset_operand(fifo_t* cmd_fifo) {
  84:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_offset_t operand;
  85:../../shields/Murata-dualstack/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
  86:../../shields/Murata-dualstack/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
  87:../../shields/Murata-dualstack/src/alp.c ****   return operand;
  88:../../shields/Murata-dualstack/src/alp.c **** }
  89:../../shields/Murata-dualstack/src/alp.c **** 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 3


  90:../../shields/Murata-dualstack/src/alp.c **** alp_operand_file_header_t alp_parse_file_header_operand(fifo_t* cmd_fifo) {
  91:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_header_t operand;
  92:../../shields/Murata-dualstack/src/alp.c ****   error_t err = fifo_pop(cmd_fifo, &operand.file_id, 1); assert(err == oss7SUCCESS);
  93:../../shields/Murata-dualstack/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(d7ap_fs_file_header_t)); assert(e
  94:../../shields/Murata-dualstack/src/alp.c **** 
  95:../../shields/Murata-dualstack/src/alp.c ****   // convert to little endian (native)
  96:../../shields/Murata-dualstack/src/alp.c ****   operand.file_header.length = __builtin_bswap32(operand.file_header.length);
  97:../../shields/Murata-dualstack/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
  98:../../shields/Murata-dualstack/src/alp.c ****   return operand;
  99:../../shields/Murata-dualstack/src/alp.c **** }
 100:../../shields/Murata-dualstack/src/alp.c **** 
 101:../../shields/Murata-dualstack/src/alp.c **** void alp_append_file_offset_operand(fifo_t* fifo, uint8_t file_id, uint32_t offset) {
 102:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 103:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 104:../../shields/Murata-dualstack/src/alp.c **** }
 105:../../shields/Murata-dualstack/src/alp.c **** 
 106:../../shields/Murata-dualstack/src/alp.c **** void alp_append_indirect_forward_action(fifo_t* fifo, uint8_t file_id, bool overload, uint8_t *over
 107:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_INDIRECT_FORWARD | (overload << 7)) == oss7SUCCESS);
 108:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 109:../../shields/Murata-dualstack/src/alp.c **** 
 110:../../shields/Murata-dualstack/src/alp.c ****   if (overload) {
 111:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, overload_config, overload_config_len) == oss7SUCCESS);
 112:../../shields/Murata-dualstack/src/alp.c ****   }
 113:../../shields/Murata-dualstack/src/alp.c **** 
 114:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("INDIRECT FORWARD");
 115:../../shields/Murata-dualstack/src/alp.c **** }
 116:../../shields/Murata-dualstack/src/alp.c **** 
 117:../../shields/Murata-dualstack/src/alp.c **** void alp_append_forward_action(fifo_t* fifo, uint8_t itf_id, uint8_t *config, uint8_t config_len) {
 118:../../shields/Murata-dualstack/src/alp.c ****   assert(config!=NULL);
 119:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 120:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 121:../../shields/Murata-dualstack/src/alp.c **** 
 122:../../shields/Murata-dualstack/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
 123:../../shields/Murata-dualstack/src/alp.c ****   {
 124:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->qos.raw) == oss7SUCCESS);
 125:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 126:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 127:../../shields/Murata-dualstack/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 128:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.access_class) == oss7SUC
 129:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 130:../../shields/Murata-dualstack/src/alp.c ****   }
 131:../../shields/Murata-dualstack/src/alp.c ****   else if(itf_id == ALP_ITF_ID_LORAWAN_ABP)
 132:../../shields/Murata-dualstack/src/alp.c ****   {
 133:../../shields/Murata-dualstack/src/alp.c ****     uint8_t control_byte = ((lorawan_session_config_abp_t*)config)->request_ack << 1;
 134:../../shields/Murata-dualstack/src/alp.c ****     control_byte += ((lorawan_session_config_abp_t*)config)->adr_enabled << 2;
 135:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 136:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 137:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->data_rate) == oss7SUCCESS);
 138:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 139:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 140:../../shields/Murata-dualstack/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 141:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 142:../../shields/Murata-dualstack/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 143:../../shields/Murata-dualstack/src/alp.c **** 
 144:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&network_id, 4) == oss7SUCCESS);
 145:../../shields/Murata-dualstack/src/alp.c ****   }
 146:../../shields/Murata-dualstack/src/alp.c ****   else if(itf_id == ALP_ITF_ID_LORAWAN_OTAA)
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 4


 147:../../shields/Murata-dualstack/src/alp.c ****   {
 148:../../shields/Murata-dualstack/src/alp.c ****     uint8_t control_byte = ((lorawan_session_config_otaa_t*)config)->request_ack << 1;
 149:../../shields/Murata-dualstack/src/alp.c ****     control_byte += ((lorawan_session_config_otaa_t*)config)->adr_enabled << 2;
 150:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 151:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 152:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->data_rate) == oss7SUCCESS)
 153:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 154:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 155:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 156:../../shields/Murata-dualstack/src/alp.c ****   }
 157:../../shields/Murata-dualstack/src/alp.c ****   else
 158:../../shields/Murata-dualstack/src/alp.c ****   {
 159:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, config, config_len) == oss7SUCCESS);
 160:../../shields/Murata-dualstack/src/alp.c ****   }
 161:../../shields/Murata-dualstack/src/alp.c **** 
 162:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("FORWARD");
 163:../../shields/Murata-dualstack/src/alp.c **** }
 164:../../shields/Murata-dualstack/src/alp.c **** 
 165:../../shields/Murata-dualstack/src/alp.c **** void alp_append_return_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t le
 166:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss7SUCCESS);
 167:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 168:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 169:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, length);
 170:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 171:../../shields/Murata-dualstack/src/alp.c **** }
 172:../../shields/Murata-dualstack/src/alp.c **** 
 173:../../shields/Murata-dualstack/src/alp.c **** static void append_tag_response(fifo_t* fifo, uint8_t tag_id, bool eop, bool error) {
 174:../../shields/Murata-dualstack/src/alp.c ****   // fill response with tag response
 175:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op_return_tag = ALP_OP_RETURN_TAG | (eop << 7);
 176:../../shields/Murata-dualstack/src/alp.c ****   op_return_tag |= (error << 6);
 177:../../shields/Murata-dualstack/src/alp.c ****   error_t err = fifo_put_byte(fifo, op_return_tag); assert(err == oss7SUCCESS);
 178:../../shields/Murata-dualstack/src/alp.c ****   err = fifo_put_byte(fifo, tag_id); assert(err == oss7SUCCESS);
 179:../../shields/Murata-dualstack/src/alp.c **** }
 180:../../shields/Murata-dualstack/src/alp.c **** 
 181:../../shields/Murata-dualstack/src/alp.c **** 
 182:../../shields/Murata-dualstack/src/alp.c **** static void add_interface_status_action(fifo_t* alp_response_fifo, uint8_t itf_id, uint8_t *status,
 183:../../shields/Murata-dualstack/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
 184:../../shields/Murata-dualstack/src/alp.c ****   {
 185:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ALP_OP_RETURN_STATUS + (1 << 6));
 186:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ALP_ITF_ID_D7ASP);
 187:../../shields/Murata-dualstack/src/alp.c ****     //TODO insert status len
 188:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->channel.channel_header);
 189:../../shields/Murata-dualstack/src/alp.c ****     uint16_t center_freq_index_be = __builtin_bswap16(((d7ap_session_result_t*)status)->channel.cen
 190:../../shields/Murata-dualstack/src/alp.c ****     fifo_put(alp_response_fifo, (uint8_t*)&center_freq_index_be, 2);
 191:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->rx_level);
 192:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->link_budget);
 193:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->target_rx_level);
 194:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->status.raw);
 195:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->fifo_token);
 196:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->seqnr);
 197:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->response_to);
 198:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.ctrl.raw);
 199:../../shields/Murata-dualstack/src/alp.c ****     fifo_put_byte(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.access_class);
 200:../../shields/Murata-dualstack/src/alp.c ****     uint8_t address_len = d7ap_addressee_id_length(((d7ap_session_result_t*)status)->addressee.ctrl
 201:../../shields/Murata-dualstack/src/alp.c ****     fifo_put(alp_response_fifo, ((d7ap_session_result_t*)status)->addressee.id, address_len);
 202:../../shields/Murata-dualstack/src/alp.c ****   }
 203:../../shields/Murata-dualstack/src/alp.c **** }
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 5


 204:../../shields/Murata-dualstack/src/alp.c **** 
 205:../../shields/Murata-dualstack/src/alp.c **** 
 206:../../shields/Murata-dualstack/src/alp.c **** static void parse_operand_file_data(fifo_t* fifo, alp_action_t* action) {
 207:../../shields/Murata-dualstack/src/alp.c ****   action->file_data_operand.file_offset = alp_parse_file_offset_operand(fifo);
 208:../../shields/Murata-dualstack/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 209:../../shields/Murata-dualstack/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 210:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 211:../../shields/Murata-dualstack/src/alp.c **** }
 212:../../shields/Murata-dualstack/src/alp.c **** 
 213:../../shields/Murata-dualstack/src/alp.c **** static void parse_op_write_file_data(fifo_t* fifo, alp_action_t* action) {
 214:../../shields/Murata-dualstack/src/alp.c ****   parse_operand_file_data(fifo, action);
 215:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed write file data file %i, len %i", action->file_data_operand.file_offset.file_id, a
 216:../../shields/Murata-dualstack/src/alp.c **** }
 217:../../shields/Murata-dualstack/src/alp.c **** 
 218:../../shields/Murata-dualstack/src/alp.c **** 
 219:../../shields/Murata-dualstack/src/alp.c **** static void parse_op_return_file_data(fifo_t* fifo, alp_action_t* action) {
 220:../../shields/Murata-dualstack/src/alp.c ****   parse_operand_file_data(fifo, action);
 221:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed return file data file %i, len %i", action->file_data_operand.file_offset.file_id, 
 222:../../shields/Murata-dualstack/src/alp.c **** }
 223:../../shields/Murata-dualstack/src/alp.c **** 
 224:../../shields/Murata-dualstack/src/alp.c **** static void parse_op_return_tag(fifo_t* fifo, alp_action_t* action, bool b6, bool b7) {
  27              		.loc 1 224 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 225:../../shields/Murata-dualstack/src/alp.c ****   action->tag_response.completed = b7;
  37              		.loc 1 225 0
  38 0002 0B71     		strb	r3, [r1, #4]
 226:../../shields/Murata-dualstack/src/alp.c ****   action->tag_response.error = b6;
  39              		.loc 1 226 0
  40 0004 4A71     		strb	r2, [r1, #5]
 227:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_pop(fifo, &action->tag_response.tag_id, 1) == oss7SUCCESS);
  41              		.loc 1 227 0
  42 0006 0122     		movs	r2, #1
  43              	.LVL1:
  44 0008 0631     		adds	r1, r1, #6
  45              	.LVL2:
  46 000a FFF7FEFF 		bl	fifo_pop
  47              	.LVL3:
  48 000e 00B9     		cbnz	r0, .L4
 228:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed return tag %i, eop %i, err %i", action->tag_response.tag_id, action->tag_response.
 229:../../shields/Murata-dualstack/src/alp.c **** }
  49              		.loc 1 229 0
  50 0010 08BD     		pop	{r3, pc}
  51              	.L4:
 227:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_pop(fifo, &action->tag_response.tag_id, 1) == oss7SUCCESS);
  52              		.loc 1 227 0 discriminator 1
  53 0012 034B     		ldr	r3, .L5
  54 0014 034A     		ldr	r2, .L5+4
  55 0016 E321     		movs	r1, #227
  56 0018 0348     		ldr	r0, .L5+8
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 6


  57 001a FFF7FEFF 		bl	__assert_func
  58              	.LVL4:
  59              	.L6:
  60 001e 00BF     		.align	2
  61              	.L5:
  62 0020 00000000 		.word	.LC0
  63 0024 00000000 		.word	.LANCHOR0
  64 0028 40000000 		.word	.LC1
  65              		.cfi_endproc
  66              	.LFE15:
  68              		.section	.text.parse_op_return_status,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	parse_op_return_status:
  76              	.LFB16:
 230:../../shields/Murata-dualstack/src/alp.c **** 
 231:../../shields/Murata-dualstack/src/alp.c **** static void parse_op_return_status(fifo_t* fifo, alp_action_t* action, bool b6, bool b7) {
  77              		.loc 1 231 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL5:
  82 0000 70B5     		push	{r4, r5, r6, lr}
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 16
  85              		.cfi_offset 4, -16
  86              		.cfi_offset 5, -12
  87              		.cfi_offset 6, -8
  88              		.cfi_offset 14, -4
  89 0002 82B0     		sub	sp, sp, #8
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 24
 232:../../shields/Murata-dualstack/src/alp.c ****   assert(b6 && !b7); // TODO implement action status
  92              		.loc 1 232 0
  93 0004 A2B1     		cbz	r2, .L8
  94 0006 0546     		mov	r5, r0
  95 0008 0C46     		mov	r4, r1
  96              		.loc 1 232 0 is_stmt 0 discriminator 2
  97 000a 8BB9     		cbnz	r3, .L8
 233:../../shields/Murata-dualstack/src/alp.c ****   uint8_t itf_id;
 234:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_pop(fifo, &itf_id, 1) == oss7SUCCESS);
  98              		.loc 1 234 0 is_stmt 1
  99 000c 0122     		movs	r2, #1
 100              	.LVL6:
 101 000e 0DF10701 		add	r1, sp, #7
 102              	.LVL7:
 103 0012 FFF7FEFF 		bl	fifo_pop
 104              	.LVL8:
 105 0016 88B9     		cbnz	r0, .L21
 235:../../shields/Murata-dualstack/src/alp.c ****   // TODO uint32_t itf_len = parse_length_operand(fifo);
 236:../../shields/Murata-dualstack/src/alp.c ****   // assert(itf_len == sizeof(d7ap_session_result_t));
 237:../../shields/Murata-dualstack/src/alp.c ****   action->status.type=itf_id;
 106              		.loc 1 237 0
 107 0018 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 7


 108 001c 84F80431 		strb	r3, [r4, #260]
 238:../../shields/Murata-dualstack/src/alp.c ****   if (itf_id == ALP_ITF_ID_D7ASP)
 109              		.loc 1 238 0
 110 0020 D72B     		cmp	r3, #215
 111 0022 11D0     		beq	.L22
 239:../../shields/Murata-dualstack/src/alp.c ****   {
 240:../../shields/Murata-dualstack/src/alp.c ****     d7ap_session_result_t* interface_status =  ((d7ap_session_result_t*)action->status.data);
 241:../../shields/Murata-dualstack/src/alp.c **** 
 242:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->channel.channel_header, 1);
 243:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, (uint8_t*)&interface_status->channel.center_freq_index, 2);
 244:../../shields/Murata-dualstack/src/alp.c ****     interface_status->channel.center_freq_index = __builtin_bswap16(interface_status->channel.cente
 245:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->rx_level, 1);
 246:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->link_budget, 1);
 247:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->target_rx_level, 1);
 248:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->status.raw, 1);
 249:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->fifo_token, 1);
 250:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->seqnr, 1);
 251:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->response_to, 1);
 252:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->addressee.ctrl.raw, 1);
 253:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->addressee.access_class, 1);
 254:../../shields/Murata-dualstack/src/alp.c ****     uint8_t addressee_len = d7ap_addressee_id_length(interface_status->addressee.ctrl.id_type);
 255:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_pop(fifo, (uint8_t*)&interface_status->addressee.id, addressee_len) == oss7SUCCESS)
 256:../../shields/Murata-dualstack/src/alp.c ****   }
 257:../../shields/Murata-dualstack/src/alp.c ****   else if ( (itf_id == ALP_ITF_ID_LORAWAN_OTAA) || (itf_id == ALP_ITF_ID_LORAWAN_ABP))
 112              		.loc 1 257 0
 113 0024 023B     		subs	r3, r3, #2
 114 0026 DBB2     		uxtb	r3, r3
 115 0028 012B     		cmp	r3, #1
 116 002a 75D9     		bls	.L23
 117              	.L7:
 258:../../shields/Murata-dualstack/src/alp.c ****   {
 259:../../shields/Murata-dualstack/src/alp.c ****     lorawan_session_result_t* interface_status = ((lorawan_session_result_t*)action->status.data);
 260:../../shields/Murata-dualstack/src/alp.c ****     fifo_skip(fifo,1); //size
 261:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->attempts, 1);
 262:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->error_state, 1);
 263:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo,  (uint8_t*)&interface_status->duty_cycle_wait_time,2);
 264:../../shields/Murata-dualstack/src/alp.c ****     interface_status->duty_cycle_wait_time= __builtin_bswap16(interface_status->duty_cycle_wait_tim
 265:../../shields/Murata-dualstack/src/alp.c ****   }
 266:../../shields/Murata-dualstack/src/alp.c **** 
 267:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed interface status");
 268:../../shields/Murata-dualstack/src/alp.c **** }
 118              		.loc 1 268 0
 119 002c 02B0     		add	sp, sp, #8
 120              	.LCFI3:
 121              		.cfi_remember_state
 122              		.cfi_def_cfa_offset 16
 123              		@ sp needed
 124 002e 70BD     		pop	{r4, r5, r6, pc}
 125              	.LVL9:
 126              	.L8:
 127              	.LCFI4:
 128              		.cfi_restore_state
 232:../../shields/Murata-dualstack/src/alp.c ****   uint8_t itf_id;
 129              		.loc 1 232 0 discriminator 3
 130 0030 454B     		ldr	r3, .L24
 131              	.LVL10:
 132 0032 464A     		ldr	r2, .L24+4
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 8


 133              	.LVL11:
 134 0034 E821     		movs	r1, #232
 135              	.LVL12:
 136 0036 4648     		ldr	r0, .L24+8
 137              	.LVL13:
 138 0038 FFF7FEFF 		bl	__assert_func
 139              	.LVL14:
 140              	.L21:
 234:../../shields/Murata-dualstack/src/alp.c ****   // TODO uint32_t itf_len = parse_length_operand(fifo);
 141              		.loc 1 234 0 discriminator 1
 142 003c 454B     		ldr	r3, .L24+12
 143 003e 434A     		ldr	r2, .L24+4
 144 0040 EA21     		movs	r1, #234
 145 0042 4348     		ldr	r0, .L24+8
 146 0044 FFF7FEFF 		bl	__assert_func
 147              	.LVL15:
 148              	.L22:
 149              	.LBB6:
 242:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, (uint8_t*)&interface_status->channel.center_freq_index, 2);
 150              		.loc 1 242 0
 151 0048 261D     		adds	r6, r4, #4
 152              	.LVL16:
 153 004a 0122     		movs	r2, #1
 154 004c 3146     		mov	r1, r6
 155 004e 2846     		mov	r0, r5
 156 0050 FFF7FEFF 		bl	fifo_pop
 157              	.LVL17:
 243:../../shields/Murata-dualstack/src/alp.c ****     interface_status->channel.center_freq_index = __builtin_bswap16(interface_status->channel.cente
 158              		.loc 1 243 0
 159 0054 0222     		movs	r2, #2
 160 0056 A11D     		adds	r1, r4, #6
 161 0058 2846     		mov	r0, r5
 162 005a FFF7FEFF 		bl	fifo_pop
 163              	.LVL18:
 244:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->rx_level, 1);
 164              		.loc 1 244 0
 165 005e E388     		ldrh	r3, [r4, #6]	@ unaligned
 166 0060 5BBA     		rev16	r3, r3
 167 0062 E380     		strh	r3, [r4, #6]	@ unaligned
 245:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->link_budget, 1);
 168              		.loc 1 245 0
 169 0064 0122     		movs	r2, #1
 170 0066 04F10801 		add	r1, r4, #8
 171 006a 2846     		mov	r0, r5
 172 006c FFF7FEFF 		bl	fifo_pop
 173              	.LVL19:
 246:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->target_rx_level, 1);
 174              		.loc 1 246 0
 175 0070 0122     		movs	r2, #1
 176 0072 04F10901 		add	r1, r4, #9
 177 0076 2846     		mov	r0, r5
 178 0078 FFF7FEFF 		bl	fifo_pop
 179              	.LVL20:
 247:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->status.raw, 1);
 180              		.loc 1 247 0
 181 007c 0122     		movs	r2, #1
 182 007e 04F10B01 		add	r1, r4, #11
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 9


 183 0082 2846     		mov	r0, r5
 184 0084 FFF7FEFF 		bl	fifo_pop
 185              	.LVL21:
 248:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->fifo_token, 1);
 186              		.loc 1 248 0
 187 0088 0122     		movs	r2, #1
 188 008a 04F10C01 		add	r1, r4, #12
 189 008e 2846     		mov	r0, r5
 190 0090 FFF7FEFF 		bl	fifo_pop
 191              	.LVL22:
 249:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->seqnr, 1);
 192              		.loc 1 249 0
 193 0094 0122     		movs	r2, #1
 194 0096 04F10D01 		add	r1, r4, #13
 195 009a 2846     		mov	r0, r5
 196 009c FFF7FEFF 		bl	fifo_pop
 197              	.LVL23:
 250:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->response_to, 1);
 198              		.loc 1 250 0
 199 00a0 0122     		movs	r2, #1
 200 00a2 04F10E01 		add	r1, r4, #14
 201 00a6 2846     		mov	r0, r5
 202 00a8 FFF7FEFF 		bl	fifo_pop
 203              	.LVL24:
 251:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->addressee.ctrl.raw, 1);
 204              		.loc 1 251 0
 205 00ac 0122     		movs	r2, #1
 206 00ae 04F10F01 		add	r1, r4, #15
 207 00b2 2846     		mov	r0, r5
 208 00b4 FFF7FEFF 		bl	fifo_pop
 209              	.LVL25:
 252:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->addressee.access_class, 1);
 210              		.loc 1 252 0
 211 00b8 0122     		movs	r2, #1
 212 00ba 04F11101 		add	r1, r4, #17
 213 00be 2846     		mov	r0, r5
 214 00c0 FFF7FEFF 		bl	fifo_pop
 215              	.LVL26:
 253:../../shields/Murata-dualstack/src/alp.c ****     uint8_t addressee_len = d7ap_addressee_id_length(interface_status->addressee.ctrl.id_type);
 216              		.loc 1 253 0
 217 00c4 0122     		movs	r2, #1
 218 00c6 04F11201 		add	r1, r4, #18
 219 00ca 2846     		mov	r0, r5
 220 00cc FFF7FEFF 		bl	fifo_pop
 221              	.LVL27:
 254:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_pop(fifo, (uint8_t*)&interface_status->addressee.id, addressee_len) == oss7SUCCESS)
 222              		.loc 1 254 0
 223 00d0 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 224 00d2 C3F30113 		ubfx	r3, r3, #4, #2
 225              	.LVL28:
 226              	.LBB7:
 227              	.LBB8:
 228              		.file 2 "../../shields/Murata-dualstack/inc/d7ap.h"
   1:../../shields/Murata-dualstack/inc/d7ap.h **** 
   2:../../shields/Murata-dualstack/inc/d7ap.h **** /* * OSS-7 - An opensource implementation of the DASH7 Alliance Protocol for ultra
   3:../../shields/Murata-dualstack/inc/d7ap.h ****  * lowpower wireless sensor communication
   4:../../shields/Murata-dualstack/inc/d7ap.h ****  *
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 10


   5:../../shields/Murata-dualstack/inc/d7ap.h ****  * Copyright 2018 University of Antwerp
   6:../../shields/Murata-dualstack/inc/d7ap.h ****  * Copyright 2018 CORTUS SA
   7:../../shields/Murata-dualstack/inc/d7ap.h ****  *
   8:../../shields/Murata-dualstack/inc/d7ap.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
   9:../../shields/Murata-dualstack/inc/d7ap.h ****  * you may not use this file except in compliance with the License.
  10:../../shields/Murata-dualstack/inc/d7ap.h ****  * You may obtain a copy of the License at
  11:../../shields/Murata-dualstack/inc/d7ap.h ****  *
  12:../../shields/Murata-dualstack/inc/d7ap.h ****  *   http://www.apache.org/licenses/LICENSE-2.0
  13:../../shields/Murata-dualstack/inc/d7ap.h ****  *
  14:../../shields/Murata-dualstack/inc/d7ap.h ****  * Unless required by applicable law or agreed to in writing, software
  15:../../shields/Murata-dualstack/inc/d7ap.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  16:../../shields/Murata-dualstack/inc/d7ap.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  17:../../shields/Murata-dualstack/inc/d7ap.h ****  * See the License for the specific language governing permissions and
  18:../../shields/Murata-dualstack/inc/d7ap.h ****  * limitations under the License.
  19:../../shields/Murata-dualstack/inc/d7ap.h ****  *
  20:../../shields/Murata-dualstack/inc/d7ap.h ****  * \author philippe.nunes@cortus.com
  21:../../shields/Murata-dualstack/inc/d7ap.h ****  */
  22:../../shields/Murata-dualstack/inc/d7ap.h **** 
  23:../../shields/Murata-dualstack/inc/d7ap.h **** /**
  24:../../shields/Murata-dualstack/inc/d7ap.h ****  * @file d7ap.h
  25:../../shields/Murata-dualstack/inc/d7ap.h ****  * @addtogroup d7ap
  26:../../shields/Murata-dualstack/inc/d7ap.h ****  * @ingroup framework
  27:../../shields/Murata-dualstack/inc/d7ap.h ****  * @{
  28:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief D7AP public types (used for modem and/or D7AP stack itself)
  29:../../shields/Murata-dualstack/inc/d7ap.h ****  *
  30:../../shields/Murata-dualstack/inc/d7ap.h ****  */
  31:../../shields/Murata-dualstack/inc/d7ap.h **** 
  32:../../shields/Murata-dualstack/inc/d7ap.h **** #ifndef D7AP_H
  33:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7AP_H
  34:../../shields/Murata-dualstack/inc/d7ap.h **** 
  35:../../shields/Murata-dualstack/inc/d7ap.h **** #include "types.h"
  36:../../shields/Murata-dualstack/inc/d7ap.h **** #include "assert.h"
  37:../../shields/Murata-dualstack/inc/d7ap.h **** 
  38:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7AP_MAX_CLIENT_COUNT 8
  39:../../shields/Murata-dualstack/inc/d7ap.h **** 
  40:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_UID_FILE_ID 0x00
  41:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_UID_SIZE 8
  42:../../shields/Murata-dualstack/inc/d7ap.h **** 
  43:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_FILE_ID 0x02
  44:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE 6
  45:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_GIT_SHA1_SIZE 7
  46:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_FIRMWARE_VERSION_SIZE (2 + D7A_FILE_FIRMWARE_VERSION_APP_NAME_SIZE + D7A_FILE_FIRM
  47:../../shields/Murata-dualstack/inc/d7ap.h **** 
  48:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_FILE_ID	0x0A
  49:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_DLL_CONF_SIZE		6
  50:../../shields/Murata-dualstack/inc/d7ap.h **** 
  51:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_ID 0x20 // the first access class file
  52:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_SIZE 65
  53:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_ACCESS_PROFILE_COUNT 15
  54:../../shields/Murata-dualstack/inc/d7ap.h **** 
  55:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY		0x0D
  56:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_SIZE	5
  57:../../shields/Murata-dualstack/inc/d7ap.h **** 
  58:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY		0x0E
  59:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_KEY_SIZE	16
  60:../../shields/Murata-dualstack/inc/d7ap.h **** 
  61:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG			0x0F
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 11


  62:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_FILE_NWL_SECURITY_STATE_REG_SIZE	2 + (FRAMEWORK_FS_TRUSTED_NODE_TABLE_SIZE)*(D7A_FILE_N
  63:../../shields/Murata-dualstack/inc/d7ap.h **** 
  64:../../shields/Murata-dualstack/inc/d7ap.h **** 
  65:../../shields/Murata-dualstack/inc/d7ap.h **** #define ID_TYPE_NBID_ID_LENGTH 1
  66:../../shields/Murata-dualstack/inc/d7ap.h **** #define ID_TYPE_NOID_ID_LENGTH 0
  67:../../shields/Murata-dualstack/inc/d7ap.h **** #define ID_TYPE_UID_ID_LENGTH   8
  68:../../shields/Murata-dualstack/inc/d7ap.h **** #define ID_TYPE_VID_LENGTH      2
  69:../../shields/Murata-dualstack/inc/d7ap.h **** 
  70:../../shields/Murata-dualstack/inc/d7ap.h **** #define ID_TYPE_IS_BROADCAST(id_type) (id_type == ID_TYPE_NBID || id_type == ID_TYPE_NOID)
  71:../../shields/Murata-dualstack/inc/d7ap.h **** 
  72:../../shields/Murata-dualstack/inc/d7ap.h **** #define D7A_PAYLOAD_MAX_SIZE 239 // TODO confirm this value when FEC and security are disabled
  73:../../shields/Murata-dualstack/inc/d7ap.h **** 
  74:../../shields/Murata-dualstack/inc/d7ap.h **** 
  75:../../shields/Murata-dualstack/inc/d7ap.h **** typedef enum {
  76:../../shields/Murata-dualstack/inc/d7ap.h ****     ID_TYPE_NBID = 0,
  77:../../shields/Murata-dualstack/inc/d7ap.h ****     ID_TYPE_NOID = 1,
  78:../../shields/Murata-dualstack/inc/d7ap.h ****     ID_TYPE_UID = 2,
  79:../../shields/Murata-dualstack/inc/d7ap.h ****     ID_TYPE_VID = 3
  80:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_addressee_id_type_t;
  81:../../shields/Murata-dualstack/inc/d7ap.h **** 
  82:../../shields/Murata-dualstack/inc/d7ap.h **** typedef enum
  83:../../shields/Murata-dualstack/inc/d7ap.h **** {
  84:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_NONE = 0, /* No security */
  85:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CTR = 0x01, /* data confidentiality */
  86:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CBC_MAC_128 = 0x02, /* data authenticity */
  87:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CBC_MAC_64 = 0x03, /* data authenticity */
  88:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CBC_MAC_32 = 0x04, /* data authenticity */
  89:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CCM_128 = 0x05, /* data confidentiality and authenticity*/
  90:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CCM_64 = 0x06, /* data confidentiality and authenticity*/
  91:../../shields/Murata-dualstack/inc/d7ap.h ****     AES_CCM_32 = 0x07, /* data confidentiality and authenticity*/
  92:../../shields/Murata-dualstack/inc/d7ap.h **** } nls_method_t;
  93:../../shields/Murata-dualstack/inc/d7ap.h **** 
  94:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct {
  95:../../shields/Murata-dualstack/inc/d7ap.h ****     union {
  96:../../shields/Murata-dualstack/inc/d7ap.h ****         uint8_t raw;
  97:../../shields/Murata-dualstack/inc/d7ap.h ****         struct {
  98:../../shields/Murata-dualstack/inc/d7ap.h ****             nls_method_t nls_method : 4;
  99:../../shields/Murata-dualstack/inc/d7ap.h ****             d7ap_addressee_id_type_t id_type : 2;
 100:../../shields/Murata-dualstack/inc/d7ap.h ****             uint8_t _rfu : 2;
 101:../../shields/Murata-dualstack/inc/d7ap.h ****         };
 102:../../shields/Murata-dualstack/inc/d7ap.h ****     };
 103:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_addressee_ctrl_t;
 104:../../shields/Murata-dualstack/inc/d7ap.h **** 
 105:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 106:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_addressee_ctrl_t ctrl;
 107:../../shields/Murata-dualstack/inc/d7ap.h ****     union {
 108:../../shields/Murata-dualstack/inc/d7ap.h ****         uint8_t access_class;
 109:../../shields/Murata-dualstack/inc/d7ap.h ****         struct {
 110:../../shields/Murata-dualstack/inc/d7ap.h ****             uint8_t access_mask : 4;
 111:../../shields/Murata-dualstack/inc/d7ap.h ****             uint8_t access_specifier : 4;
 112:../../shields/Murata-dualstack/inc/d7ap.h ****         };
 113:../../shields/Murata-dualstack/inc/d7ap.h ****     };
 114:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t id[8]; // TODO assuming 8 byte id for now
 115:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_addressee_t;
 116:../../shields/Murata-dualstack/inc/d7ap.h **** 
 117:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct {
 118:../../shields/Murata-dualstack/inc/d7ap.h ****     union {
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 12


 119:../../shields/Murata-dualstack/inc/d7ap.h ****         uint8_t raw;
 120:../../shields/Murata-dualstack/inc/d7ap.h ****         struct {
 121:../../shields/Murata-dualstack/inc/d7ap.h ****             uint8_t _rfu : 4;
 122:../../shields/Murata-dualstack/inc/d7ap.h ****             bool ucast : 1;
 123:../../shields/Murata-dualstack/inc/d7ap.h ****             bool retry : 1;
 124:../../shields/Murata-dualstack/inc/d7ap.h ****             bool missed : 1;
 125:../../shields/Murata-dualstack/inc/d7ap.h ****             bool nls : 1;
 126:../../shields/Murata-dualstack/inc/d7ap.h ****         };
 127:../../shields/Murata-dualstack/inc/d7ap.h ****     };
 128:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_sp_state_t;
 129:../../shields/Murata-dualstack/inc/d7ap.h **** 
 130:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct
 131:../../shields/Murata-dualstack/inc/d7ap.h **** {
 132:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t channel_header;         /**< PHY layer channel header */
 133:../../shields/Murata-dualstack/inc/d7ap.h ****     uint16_t center_freq_index;     /**< The center frequency index of the channel id */
 134:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_channel_t;
 135:../../shields/Murata-dualstack/inc/d7ap.h **** 
 136:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct __attribute__((__packed__)) {
 137:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_channel_t channel;
 138:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t rx_level;
 139:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t link_budget;
 140:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t link_quality;
 141:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t target_rx_level;
 142:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_sp_state_t status;
 143:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t fifo_token;
 144:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t seqnr;
 145:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t response_to;
 146:../../shields/Murata-dualstack/inc/d7ap.h ****     bool response_expected;
 147:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_addressee_t addressee;
 148:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_session_result_t;
 149:../../shields/Murata-dualstack/inc/d7ap.h **** 
 150:../../shields/Murata-dualstack/inc/d7ap.h **** typedef enum  {
 151:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_NO = 0,
 152:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_ALL = 1,
 153:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_ANY = 2,
 154:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_NO_RPT = 4,
 155:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_ON_ERR = 5,
 156:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RESP_MODE_PREFERRED = 6,
 157:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_session_resp_mode_t;
 158:../../shields/Murata-dualstack/inc/d7ap.h **** 
 159:../../shields/Murata-dualstack/inc/d7ap.h **** typedef enum {
 160:../../shields/Murata-dualstack/inc/d7ap.h ****     SESSION_RETRY_MODE_NO = 0
 161:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_session_retry_mode_t;
 162:../../shields/Murata-dualstack/inc/d7ap.h **** 
 163:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct {
 164:../../shields/Murata-dualstack/inc/d7ap.h ****     union {
 165:../../shields/Murata-dualstack/inc/d7ap.h ****         uint8_t raw;
 166:../../shields/Murata-dualstack/inc/d7ap.h ****         struct {
 167:../../shields/Murata-dualstack/inc/d7ap.h ****             d7ap_session_resp_mode_t qos_resp_mode : 3;
 168:../../shields/Murata-dualstack/inc/d7ap.h ****             d7ap_session_retry_mode_t qos_retry_mode: 3;
 169:../../shields/Murata-dualstack/inc/d7ap.h ****             bool qos_record : 1;
 170:../../shields/Murata-dualstack/inc/d7ap.h ****             bool qos_stop_on_error : 1;
 171:../../shields/Murata-dualstack/inc/d7ap.h ****         };
 172:../../shields/Murata-dualstack/inc/d7ap.h ****     };
 173:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_session_qos_t;
 174:../../shields/Murata-dualstack/inc/d7ap.h **** 
 175:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct {
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 13


 176:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_session_qos_t qos;
 177:../../shields/Murata-dualstack/inc/d7ap.h ****     uint8_t dormant_timeout;
 178:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_addressee_t addressee;
 179:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_session_config_t;
 180:../../shields/Murata-dualstack/inc/d7ap.h **** 
 181:../../shields/Murata-dualstack/inc/d7ap.h **** typedef void (*d7ap_receive_callback)(uint16_t trans_id, uint8_t* payload, uint8_t len, d7ap_sessio
 182:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 183:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief Called when the stack received an unsolicited message
 184:../../shields/Murata-dualstack/inc/d7ap.h ****  * @returns true when the unsolicited request will result in a response payload from the upper laye
 185:../../shields/Murata-dualstack/inc/d7ap.h ****  * the upper layer should return false, so the stack can respond with an ack immediately (if reques
 186:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 187:../../shields/Murata-dualstack/inc/d7ap.h **** typedef bool (*d7ap_receive_unsolicited_callback)(uint8_t* payload, uint8_t len, d7ap_session_resul
 188:../../shields/Murata-dualstack/inc/d7ap.h **** typedef void (*d7ap_transmitted_callback)(uint16_t trans_id, error_t error);
 189:../../shields/Murata-dualstack/inc/d7ap.h **** 
 190:../../shields/Murata-dualstack/inc/d7ap.h **** typedef struct{
 191:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_receive_callback  receive_cb;                /*< receive callback,
 192:../../shields/Murata-dualstack/inc/d7ap.h ****                                                           if NULL, all message received for clientI
 193:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_transmitted_callback transmitted_cb;         /*< send completion callback,
 194:../../shields/Murata-dualstack/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 195:../../shields/Murata-dualstack/inc/d7ap.h ****     d7ap_receive_unsolicited_callback unsolicited_cb; /*< unsolicited data callback,
 196:../../shields/Murata-dualstack/inc/d7ap.h ****                                                           if NULL, the associated packet will be re
 197:../../shields/Murata-dualstack/inc/d7ap.h **** } d7ap_resource_desc_t;
 198:../../shields/Murata-dualstack/inc/d7ap.h **** 
 199:../../shields/Murata-dualstack/inc/d7ap.h **** 
 200:../../shields/Murata-dualstack/inc/d7ap.h **** //=========================== prototypes ======================================
 201:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 202:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Initializes d7a module
 203:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 204:../../shields/Murata-dualstack/inc/d7ap.h **** void d7ap_init(void);
 205:../../shields/Murata-dualstack/inc/d7ap.h **** 
 206:../../shields/Murata-dualstack/inc/d7ap.h **** 
 207:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 208:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Register the client callbacks
 209:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 210:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] desc pointer to the client resource
 211:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 212:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return  the client Id
 213:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 214:../../shields/Murata-dualstack/inc/d7ap.h **** uint8_t d7ap_register(d7ap_resource_desc_t* desc);
 215:../../shields/Murata-dualstack/inc/d7ap.h **** 
 216:../../shields/Murata-dualstack/inc/d7ap.h **** 
 217:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 218:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Gets the device address UID/VID
 219:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 220:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[out] *addr   Pointer to the device addressee UID/VID
 221:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 222:../../shields/Murata-dualstack/inc/d7ap.h **** void d7ap_get_dev_addr(d7ap_addressee_t* addr);
 223:../../shields/Murata-dualstack/inc/d7ap.h **** 
 224:../../shields/Murata-dualstack/inc/d7ap.h **** 
 225:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 226:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief Get the maximum payload size.
 227:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 228:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] clientId  The d7A  instance Id.
 229:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 230:../../shields/Murata-dualstack/inc/d7ap.h ****  * @returns the maximum payload size in bytes.
 231:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 232:../../shields/Murata-dualstack/inc/d7ap.h **** uint8_t d7ap_get_payload_max_size(uint8_t clientId);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 14


 233:../../shields/Murata-dualstack/inc/d7ap.h **** 
 234:../../shields/Murata-dualstack/inc/d7ap.h **** 
 235:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 236:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Send a packet over DASH7 network
 237:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 238:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] clientID  The registered client Id
 239:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] config    The configuration for the d7a session. Set to NULL to use the current confi
 240:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] payload   The pointer to the payload buffer
 241:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] len       The length of the payload
 242:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] expected_response_len The length of the expected response
 243:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in,out] trans_id   Set the value of this parameter to NULL to cause the function to execu
 244:../../shields/Murata-dualstack/inc/d7ap.h ****  *                           If this parameter is not NULL, the call executes asynchronously. Upon 
 245:../../shields/Murata-dualstack/inc/d7ap.h ****  *                           this points to the transaction identifier associated with the asynchro
 246:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return 0 on success
 247:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return an error (errno.h) in case of failure
 248:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 249:../../shields/Murata-dualstack/inc/d7ap.h **** error_t d7ap_send(uint8_t clientId, d7ap_session_config_t* config, uint8_t* payload,
 250:../../shields/Murata-dualstack/inc/d7ap.h ****                    uint8_t len, uint8_t expected_response_len, uint16_t* trans_id);
 251:../../shields/Murata-dualstack/inc/d7ap.h **** 
 252:../../shields/Murata-dualstack/inc/d7ap.h **** 
 253:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 254:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Sets the channels TX power index
 255:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 256:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] power  The TX power index (from 1 to 16)
 257:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 258:../../shields/Murata-dualstack/inc/d7ap.h **** void d7ap_set_tx_power(uint8_t power);
 259:../../shields/Murata-dualstack/inc/d7ap.h **** 
 260:../../shields/Murata-dualstack/inc/d7ap.h **** 
 261:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 262:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Gets the channels TX power index
 263:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 264:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return  The TX power index (from 1 to 16)
 265:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 266:../../shields/Murata-dualstack/inc/d7ap.h **** uint8_t d7ap_get_tx_power(void);
 267:../../shields/Murata-dualstack/inc/d7ap.h **** 
 268:../../shields/Murata-dualstack/inc/d7ap.h **** 
 269:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 270:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Sets the device access class
 271:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 272:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] access_class  The device access class
 273:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 274:../../shields/Murata-dualstack/inc/d7ap.h **** void d7ap_set_access_class(uint8_t access_class);
 275:../../shields/Murata-dualstack/inc/d7ap.h **** 
 276:../../shields/Murata-dualstack/inc/d7ap.h **** 
 277:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 278:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Gets the device access class
 279:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 280:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return  The device access class
 281:../../shields/Murata-dualstack/inc/d7ap.h ****  */
 282:../../shields/Murata-dualstack/inc/d7ap.h **** uint8_t d7ap_get_access_class(void);
 283:../../shields/Murata-dualstack/inc/d7ap.h **** 
 284:../../shields/Murata-dualstack/inc/d7ap.h **** /**
 285:../../shields/Murata-dualstack/inc/d7ap.h ****  * @brief   Gets the length of the addressee Id
 286:../../shields/Murata-dualstack/inc/d7ap.h ****  *
 287:../../shields/Murata-dualstack/inc/d7ap.h ****  * @param[in] id_type  The addressee Id type
 288:../../shields/Murata-dualstack/inc/d7ap.h ****  * @return  The length of the addressee Id according the addressee Id type
 289:../../shields/Murata-dualstack/inc/d7ap.h ****  */
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 15


 290:../../shields/Murata-dualstack/inc/d7ap.h **** static inline uint8_t d7ap_addressee_id_length(d7ap_addressee_id_type_t id_type) {
 291:../../shields/Murata-dualstack/inc/d7ap.h ****   switch(id_type)
 229              		.loc 2 291 0
 230 00d6 032B     		cmp	r3, #3
 231 00d8 07D8     		bhi	.L12
 232 00da DFE803F0 		tbb	[pc, r3]
 233              	.L14:
 234 00de 1B       		.byte	(.L19-.L14)/2
 235 00df 0D       		.byte	(.L15-.L14)/2
 236 00e0 02       		.byte	(.L16-.L14)/2
 237 00e1 04       		.byte	(.L17-.L14)/2
 238              		.p2align 1
 239              	.L16:
 292:../../shields/Murata-dualstack/inc/d7ap.h ****   {
 293:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_NOID:
 294:../../shields/Murata-dualstack/inc/d7ap.h ****         return ID_TYPE_NOID_ID_LENGTH;
 295:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_NBID:
 296:../../shields/Murata-dualstack/inc/d7ap.h ****         return ID_TYPE_NBID_ID_LENGTH;
 297:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_UID:
 298:../../shields/Murata-dualstack/inc/d7ap.h ****         return ID_TYPE_UID_ID_LENGTH;
 240              		.loc 2 298 0
 241 00e2 0822     		movs	r2, #8
 242 00e4 09E0     		b	.L13
 243              	.L17:
 299:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_VID:
 300:../../shields/Murata-dualstack/inc/d7ap.h ****         return ID_TYPE_VID_LENGTH;
 244              		.loc 2 300 0
 245 00e6 0222     		movs	r2, #2
 246 00e8 07E0     		b	.L13
 247              	.L12:
 301:../../shields/Murata-dualstack/inc/d7ap.h ****       default:
 302:../../shields/Murata-dualstack/inc/d7ap.h ****         assert(false);
 248              		.loc 2 302 0
 249 00ea 1B4B     		ldr	r3, .L24+16
 250 00ec 1B4A     		ldr	r2, .L24+20
 251 00ee 4FF49771 		mov	r1, #302
 252 00f2 1B48     		ldr	r0, .L24+24
 253 00f4 FFF7FEFF 		bl	__assert_func
 254              	.LVL29:
 255              	.L15:
 294:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_NBID:
 256              		.loc 2 294 0
 257 00f8 0022     		movs	r2, #0
 258              	.L13:
 259              	.LVL30:
 260              	.LBE8:
 261              	.LBE7:
 255:../../shields/Murata-dualstack/src/alp.c ****   }
 262              		.loc 1 255 0
 263 00fa 04F11301 		add	r1, r4, #19
 264 00fe 2846     		mov	r0, r5
 265 0100 FFF7FEFF 		bl	fifo_pop
 266              	.LVL31:
 267 0104 0028     		cmp	r0, #0
 268 0106 91D0     		beq	.L7
 255:../../shields/Murata-dualstack/src/alp.c ****   }
 269              		.loc 1 255 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 16


 270 0108 164B     		ldr	r3, .L24+28
 271 010a 104A     		ldr	r2, .L24+4
 272 010c FF21     		movs	r1, #255
 273 010e 1048     		ldr	r0, .L24+8
 274 0110 FFF7FEFF 		bl	__assert_func
 275              	.LVL32:
 276              	.L19:
 277              	.LBB10:
 278              	.LBB9:
 296:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_UID:
 279              		.loc 2 296 0 is_stmt 1
 280 0114 0122     		movs	r2, #1
 281 0116 F0E7     		b	.L13
 282              	.LVL33:
 283              	.L23:
 284              	.LBE9:
 285              	.LBE10:
 286              	.LBE6:
 287              	.LBB11:
 260:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->attempts, 1);
 288              		.loc 1 260 0
 289 0118 0121     		movs	r1, #1
 290 011a 2846     		mov	r0, r5
 291 011c FFF7FEFF 		bl	fifo_skip
 292              	.LVL34:
 261:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo, &interface_status->error_state, 1);
 293              		.loc 1 261 0
 294 0120 0122     		movs	r2, #1
 295 0122 211D     		adds	r1, r4, #4
 296              	.LVL35:
 297 0124 2846     		mov	r0, r5
 298 0126 FFF7FEFF 		bl	fifo_pop
 299              	.LVL36:
 262:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(fifo,  (uint8_t*)&interface_status->duty_cycle_wait_time,2);
 300              		.loc 1 262 0
 301 012a 0122     		movs	r2, #1
 302 012c 611D     		adds	r1, r4, #5
 303 012e 2846     		mov	r0, r5
 304 0130 FFF7FEFF 		bl	fifo_pop
 305              	.LVL37:
 263:../../shields/Murata-dualstack/src/alp.c ****     interface_status->duty_cycle_wait_time= __builtin_bswap16(interface_status->duty_cycle_wait_tim
 306              		.loc 1 263 0
 307 0134 0222     		movs	r2, #2
 308 0136 A11D     		adds	r1, r4, #6
 309 0138 2846     		mov	r0, r5
 310 013a FFF7FEFF 		bl	fifo_pop
 311              	.LVL38:
 264:../../shields/Murata-dualstack/src/alp.c ****   }
 312              		.loc 1 264 0
 313 013e E388     		ldrh	r3, [r4, #6]	@ unaligned
 314 0140 5BBA     		rev16	r3, r3
 315 0142 E380     		strh	r3, [r4, #6]	@ unaligned
 316              	.LBE11:
 317              		.loc 1 268 0
 318 0144 72E7     		b	.L7
 319              	.L25:
 320 0146 00BF     		.align	2
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 17


 321              	.L24:
 322 0148 00000000 		.word	.LC2
 323 014c 00000000 		.word	.LANCHOR1
 324 0150 40000000 		.word	.LC1
 325 0154 0C000000 		.word	.LC3
 326 0158 38000000 		.word	.LC4
 327 015c 00000000 		.word	.LANCHOR2
 328 0160 40000000 		.word	.LC5
 329 0164 6C000000 		.word	.LC6
 330              		.cfi_endproc
 331              	.LFE16:
 333              		.section	.text.alp_get_operation,"ax",%progbits
 334              		.align	1
 335              		.global	alp_get_operation
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	alp_get_operation:
 342              	.LFB1:
  42:../../shields/Murata-dualstack/src/alp.c ****     alp_control_t alp_ctrl;
 343              		.loc 1 42 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348              	.LVL39:
  44:../../shields/Murata-dualstack/src/alp.c ****     return alp_ctrl.operation;
 349              		.loc 1 44 0
 350 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 351              	.LVL40:
  46:../../shields/Murata-dualstack/src/alp.c **** 
 352              		.loc 1 46 0
 353 0002 00F03F00 		and	r0, r0, #63
 354 0006 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE1:
 358              		.section	.text.alp_parse_length_operand,"ax",%progbits
 359              		.align	1
 360              		.global	alp_parse_length_operand
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	alp_parse_length_operand:
 367              	.LFB2:
  48:../../shields/Murata-dualstack/src/alp.c ****   uint8_t len = 0;
 368              		.loc 1 48 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL41:
 373 0000 10B5     		push	{r4, lr}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 18


 378 0002 82B0     		sub	sp, sp, #8
 379              	.LCFI6:
 380              		.cfi_def_cfa_offset 16
 381 0004 0446     		mov	r4, r0
  49:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&len, 1);
 382              		.loc 1 49 0
 383 0006 02A9     		add	r1, sp, #8
 384 0008 0023     		movs	r3, #0
 385 000a 01F8013D 		strb	r3, [r1, #-1]!
  50:../../shields/Murata-dualstack/src/alp.c ****   uint8_t field_len = len >> 6;
 386              		.loc 1 50 0
 387 000e 0122     		movs	r2, #1
 388 0010 FFF7FEFF 		bl	fifo_pop
 389              	.LVL42:
  51:../../shields/Murata-dualstack/src/alp.c ****   if(field_len == 0)
 390              		.loc 1 51 0
 391 0014 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 392              	.LVL43:
  52:../../shields/Murata-dualstack/src/alp.c ****     return (uint32_t)len;
 393              		.loc 1 52 0
 394 0018 8209     		lsrs	r2, r0, #6
 395 001a 01D1     		bne	.L31
 396              	.LVL44:
 397              	.L27:
  58:../../shields/Murata-dualstack/src/alp.c **** 
 398              		.loc 1 58 0
 399 001c 02B0     		add	sp, sp, #8
 400              	.LCFI7:
 401              		.cfi_remember_state
 402              		.cfi_def_cfa_offset 8
 403              		@ sp needed
 404 001e 10BD     		pop	{r4, pc}
 405              	.LVL45:
 406              	.L31:
 407              	.LCFI8:
 408              		.cfi_restore_state
  55:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(cmd_fifo, (uint8_t*)&full_length, field_len);
 409              		.loc 1 55 0
 410 0020 00F03F00 		and	r0, r0, #63
 411              	.LVL46:
 412 0024 D300     		lsls	r3, r2, #3
 413 0026 9840     		lsls	r0, r0, r3
 414 0028 02A9     		add	r1, sp, #8
 415 002a 41F8080D 		str	r0, [r1, #-8]!
  56:../../shields/Murata-dualstack/src/alp.c ****   return full_length;
 416              		.loc 1 56 0
 417 002e 2046     		mov	r0, r4
 418 0030 FFF7FEFF 		bl	fifo_pop
 419              	.LVL47:
  57:../../shields/Murata-dualstack/src/alp.c **** }
 420              		.loc 1 57 0
 421 0034 0098     		ldr	r0, [sp]
 422 0036 F1E7     		b	.L27
 423              		.cfi_endproc
 424              	.LFE2:
 426              		.section	.text.alp_append_length_operand,"ax",%progbits
 427              		.align	1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 19


 428              		.global	alp_append_length_operand
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	alp_append_length_operand:
 435              	.LFB3:
  60:../../shields/Murata-dualstack/src/alp.c ****   if(length < 64) {
 436              		.loc 1 60 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              	.LVL48:
 441 0000 30B5     		push	{r4, r5, lr}
 442              	.LCFI9:
 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 5, -8
 446              		.cfi_offset 14, -4
 447 0002 85B0     		sub	sp, sp, #20
 448              	.LCFI10:
 449              		.cfi_def_cfa_offset 32
 450 0004 0546     		mov	r5, r0
 451 0006 0191     		str	r1, [sp, #4]
  61:../../shields/Murata-dualstack/src/alp.c ****     // can be coded in one byte
 452              		.loc 1 61 0
 453 0008 3F29     		cmp	r1, #63
 454 000a 25D9     		bls	.L43
 455              	.LVL49:
  68:../../shields/Murata-dualstack/src/alp.c ****     size = 2;
 456              		.loc 1 68 0
 457 000c B1F5804F 		cmp	r1, #16384
 458 0010 2ED2     		bcs	.L40
  67:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFF)
 459              		.loc 1 67 0
 460 0012 0124     		movs	r4, #1
 461              	.L35:
 462              	.LVL50:
  70:../../shields/Murata-dualstack/src/alp.c ****     size = 3;
 463              		.loc 1 70 0
 464 0014 B1F5800F 		cmp	r1, #4194304
 465 0018 00D3     		bcc	.L36
  71:../../shields/Murata-dualstack/src/alp.c **** 
 466              		.loc 1 71 0
 467 001a 0324     		movs	r4, #3
 468              	.LVL51:
 469              	.L36:
  74:../../shields/Murata-dualstack/src/alp.c ****   byte += ((uint8_t*)(&length))[size];
 470              		.loc 1 74 0
 471 001c A301     		lsls	r3, r4, #6
 472 001e DBB2     		uxtb	r3, r3
 473 0020 8DF80F30 		strb	r3, [sp, #15]
  75:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, &byte, 1) == oss7SUCCESS);
 474              		.loc 1 75 0
 475 0024 04AA     		add	r2, sp, #16
 476 0026 2244     		add	r2, r2, r4
 477 0028 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 20


 478 002c 1344     		add	r3, r3, r2
 479 002e 04A9     		add	r1, sp, #16
 480              	.LVL52:
 481 0030 01F8013D 		strb	r3, [r1, #-1]!
  76:../../shields/Murata-dualstack/src/alp.c ****   do {
 482              		.loc 1 76 0
 483 0034 0122     		movs	r2, #1
 484 0036 2846     		mov	r0, r5
 485              	.LVL53:
 486 0038 FFF7FEFF 		bl	fifo_put
 487              	.LVL54:
 488 003c D0B9     		cbnz	r0, .L44
 489              	.L37:
  78:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7SUCCESS);
 490              		.loc 1 78 0
 491 003e 013C     		subs	r4, r4, #1
 492              	.LVL55:
 493 0040 E4B2     		uxtb	r4, r4
 494              	.LVL56:
  79:../../shields/Murata-dualstack/src/alp.c ****   } while(size > 0);
 495              		.loc 1 79 0
 496 0042 0122     		movs	r2, #1
 497 0044 01AB     		add	r3, sp, #4
 498 0046 1919     		adds	r1, r3, r4
 499 0048 2846     		mov	r0, r5
 500 004a FFF7FEFF 		bl	fifo_put
 501              	.LVL57:
 502 004e B8B9     		cbnz	r0, .L45
  80:../../shields/Murata-dualstack/src/alp.c **** }
 503              		.loc 1 80 0
 504 0050 002C     		cmp	r4, #0
 505 0052 F4D1     		bne	.L37
 506              	.LVL58:
 507              	.L32:
  81:../../shields/Murata-dualstack/src/alp.c **** 
 508              		.loc 1 81 0
 509 0054 05B0     		add	sp, sp, #20
 510              	.LCFI11:
 511              		.cfi_remember_state
 512              		.cfi_def_cfa_offset 12
 513              		@ sp needed
 514 0056 30BD     		pop	{r4, r5, pc}
 515              	.LVL59:
 516              	.L43:
 517              	.LCFI12:
 518              		.cfi_restore_state
  63:../../shields/Murata-dualstack/src/alp.c ****     return;
 519              		.loc 1 63 0
 520 0058 0122     		movs	r2, #1
 521 005a 01A9     		add	r1, sp, #4
 522              	.LVL60:
 523 005c FFF7FEFF 		bl	fifo_put
 524              	.LVL61:
 525 0060 0028     		cmp	r0, #0
 526 0062 F7D0     		beq	.L32
  63:../../shields/Murata-dualstack/src/alp.c ****     return;
 527              		.loc 1 63 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 21


 528 0064 094B     		ldr	r3, .L46
 529 0066 0A4A     		ldr	r2, .L46+4
 530 0068 3F21     		movs	r1, #63
 531 006a 0A48     		ldr	r0, .L46+8
 532 006c FFF7FEFF 		bl	__assert_func
 533              	.LVL62:
 534              	.L40:
  69:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFFFF)
 535              		.loc 1 69 0 is_stmt 1
 536 0070 0224     		movs	r4, #2
 537 0072 CFE7     		b	.L35
 538              	.LVL63:
 539              	.L44:
  76:../../shields/Murata-dualstack/src/alp.c ****   do {
 540              		.loc 1 76 0 discriminator 1
 541 0074 084B     		ldr	r3, .L46+12
 542 0076 064A     		ldr	r2, .L46+4
 543 0078 4C21     		movs	r1, #76
 544 007a 0648     		ldr	r0, .L46+8
 545 007c FFF7FEFF 		bl	__assert_func
 546              	.LVL64:
 547              	.L45:
  79:../../shields/Murata-dualstack/src/alp.c ****   } while(size > 0);
 548              		.loc 1 79 0 discriminator 1
 549 0080 064B     		ldr	r3, .L46+16
 550 0082 034A     		ldr	r2, .L46+4
 551 0084 4F21     		movs	r1, #79
 552 0086 0348     		ldr	r0, .L46+8
 553 0088 FFF7FEFF 		bl	__assert_func
 554              	.LVL65:
 555              	.L47:
 556              		.align	2
 557              	.L46:
 558 008c 00000000 		.word	.LC7
 559 0090 00000000 		.word	.LANCHOR3
 560 0094 40000000 		.word	.LC1
 561 0098 34000000 		.word	.LC8
 562 009c 5C000000 		.word	.LC9
 563              		.cfi_endproc
 564              	.LFE3:
 566              		.section	.text.alp_parse_file_offset_operand,"ax",%progbits
 567              		.align	1
 568              		.global	alp_parse_file_offset_operand
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	alp_parse_file_offset_operand:
 575              	.LFB4:
  83:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_offset_t operand;
 576              		.loc 1 83 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              	.LVL66:
 581 0000 30B5     		push	{r4, r5, lr}
 582              	.LCFI13:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 22


 583              		.cfi_def_cfa_offset 12
 584              		.cfi_offset 4, -12
 585              		.cfi_offset 5, -8
 586              		.cfi_offset 14, -4
 587 0002 83B0     		sub	sp, sp, #12
 588              	.LCFI14:
 589              		.cfi_def_cfa_offset 24
 590 0004 0446     		mov	r4, r0
 591 0006 0D46     		mov	r5, r1
  85:../../shields/Murata-dualstack/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 592              		.loc 1 85 0
 593 0008 0122     		movs	r2, #1
 594 000a 6946     		mov	r1, sp
 595              	.LVL67:
 596 000c 2846     		mov	r0, r5
 597              	.LVL68:
 598 000e FFF7FEFF 		bl	fifo_pop
 599              	.LVL69:
 600 0012 58B9     		cbnz	r0, .L51
  86:../../shields/Murata-dualstack/src/alp.c ****   return operand;
 601              		.loc 1 86 0
 602 0014 2846     		mov	r0, r5
 603              	.LVL70:
 604 0016 FFF7FEFF 		bl	alp_parse_length_operand
 605              	.LVL71:
 606 001a 0190     		str	r0, [sp, #4]
  87:../../shields/Murata-dualstack/src/alp.c **** }
 607              		.loc 1 87 0
 608 001c 02AB     		add	r3, sp, #8
 609 001e 13E90300 		ldmdb	r3, {r0, r1}
 610 0022 84E80300 		stm	r4, {r0, r1}
  88:../../shields/Murata-dualstack/src/alp.c **** 
 611              		.loc 1 88 0
 612 0026 2046     		mov	r0, r4
 613 0028 03B0     		add	sp, sp, #12
 614              	.LCFI15:
 615              		.cfi_remember_state
 616              		.cfi_def_cfa_offset 12
 617              		@ sp needed
 618 002a 30BD     		pop	{r4, r5, pc}
 619              	.LVL72:
 620              	.L51:
 621              	.LCFI16:
 622              		.cfi_restore_state
  85:../../shields/Murata-dualstack/src/alp.c ****   operand.offset = alp_parse_length_operand(cmd_fifo);
 623              		.loc 1 85 0 discriminator 1
 624 002c 024B     		ldr	r3, .L52
 625 002e 034A     		ldr	r2, .L52+4
 626 0030 5521     		movs	r1, #85
 627 0032 0348     		ldr	r0, .L52+8
 628              	.LVL73:
 629 0034 FFF7FEFF 		bl	__assert_func
 630              	.LVL74:
 631              	.L53:
 632              		.align	2
 633              	.L52:
 634 0038 00000000 		.word	.LC10
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 23


 635 003c 00000000 		.word	.LANCHOR4
 636 0040 40000000 		.word	.LC1
 637              		.cfi_endproc
 638              	.LFE4:
 640              		.section	.text.parse_operand_file_data,"ax",%progbits
 641              		.align	1
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu fpv4-sp-d16
 647              	parse_operand_file_data:
 648              	.LFB12:
 206:../../shields/Murata-dualstack/src/alp.c ****   action->file_data_operand.file_offset = alp_parse_file_offset_operand(fifo);
 649              		.loc 1 206 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LVL75:
 654 0000 70B5     		push	{r4, r5, r6, lr}
 655              	.LCFI17:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661 0002 82B0     		sub	sp, sp, #8
 662              	.LCFI18:
 663              		.cfi_def_cfa_offset 24
 664 0004 0546     		mov	r5, r0
 665 0006 0E46     		mov	r6, r1
 207:../../shields/Murata-dualstack/src/alp.c ****   action->file_data_operand.provided_data_length = alp_parse_length_operand(fifo);
 666              		.loc 1 207 0
 667 0008 6C46     		mov	r4, sp
 668 000a 0146     		mov	r1, r0
 669              	.LVL76:
 670 000c 2046     		mov	r0, r4
 671              	.LVL77:
 672 000e FFF7FEFF 		bl	alp_parse_file_offset_operand
 673              	.LVL78:
 674 0012 331D     		adds	r3, r6, #4
 675 0014 94E80300 		ldm	r4, {r0, r1}
 676 0018 83E80300 		stm	r3, {r0, r1}
 208:../../shields/Murata-dualstack/src/alp.c ****   assert(action->file_data_operand.provided_data_length <= sizeof(action->file_data_operand.data));
 677              		.loc 1 208 0
 678 001c 2846     		mov	r0, r5
 679 001e FFF7FEFF 		bl	alp_parse_length_operand
 680              	.LVL79:
 681 0022 F060     		str	r0, [r6, #12]
 209:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 682              		.loc 1 209 0
 683 0024 FF28     		cmp	r0, #255
 684 0026 07D8     		bhi	.L57
 210:../../shields/Murata-dualstack/src/alp.c **** }
 685              		.loc 1 210 0
 686 0028 82B2     		uxth	r2, r0
 687 002a 06F11001 		add	r1, r6, #16
 688 002e 2846     		mov	r0, r5
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 24


 689 0030 FFF7FEFF 		bl	fifo_pop
 690              	.LVL80:
 211:../../shields/Murata-dualstack/src/alp.c **** 
 691              		.loc 1 211 0
 692 0034 02B0     		add	sp, sp, #8
 693              	.LCFI19:
 694              		.cfi_remember_state
 695              		.cfi_def_cfa_offset 16
 696              		@ sp needed
 697 0036 70BD     		pop	{r4, r5, r6, pc}
 698              	.LVL81:
 699              	.L57:
 700              	.LCFI20:
 701              		.cfi_restore_state
 209:../../shields/Murata-dualstack/src/alp.c ****   fifo_pop(fifo, action->file_data_operand.data, action->file_data_operand.provided_data_length);
 702              		.loc 1 209 0 discriminator 1
 703 0038 024B     		ldr	r3, .L58
 704 003a 034A     		ldr	r2, .L58+4
 705 003c D121     		movs	r1, #209
 706 003e 0348     		ldr	r0, .L58+8
 707 0040 FFF7FEFF 		bl	__assert_func
 708              	.LVL82:
 709              	.L59:
 710              		.align	2
 711              	.L58:
 712 0044 00000000 		.word	.LC11
 713 0048 00000000 		.word	.LANCHOR5
 714 004c 40000000 		.word	.LC1
 715              		.cfi_endproc
 716              	.LFE12:
 718              		.section	.text.parse_op_write_file_data,"ax",%progbits
 719              		.align	1
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 723              		.fpu fpv4-sp-d16
 725              	parse_op_write_file_data:
 726              	.LFB13:
 213:../../shields/Murata-dualstack/src/alp.c ****   parse_operand_file_data(fifo, action);
 727              		.loc 1 213 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL83:
 732 0000 08B5     		push	{r3, lr}
 733              	.LCFI21:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 3, -8
 736              		.cfi_offset 14, -4
 214:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed write file data file %i, len %i", action->file_data_operand.file_offset.file_id, a
 737              		.loc 1 214 0
 738 0002 FFF7FEFF 		bl	parse_operand_file_data
 739              	.LVL84:
 216:../../shields/Murata-dualstack/src/alp.c **** 
 740              		.loc 1 216 0
 741 0006 08BD     		pop	{r3, pc}
 742              		.cfi_endproc
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 25


 743              	.LFE13:
 745              		.section	.text.parse_op_return_file_data,"ax",%progbits
 746              		.align	1
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	parse_op_return_file_data:
 753              	.LFB14:
 219:../../shields/Murata-dualstack/src/alp.c ****   parse_operand_file_data(fifo, action);
 754              		.loc 1 219 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              	.LVL85:
 759 0000 08B5     		push	{r3, lr}
 760              	.LCFI22:
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 3, -8
 763              		.cfi_offset 14, -4
 220:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed return file data file %i, len %i", action->file_data_operand.file_offset.file_id, 
 764              		.loc 1 220 0
 765 0002 FFF7FEFF 		bl	parse_operand_file_data
 766              	.LVL86:
 222:../../shields/Murata-dualstack/src/alp.c **** 
 767              		.loc 1 222 0
 768 0006 08BD     		pop	{r3, pc}
 769              		.cfi_endproc
 770              	.LFE14:
 772              		.section	.text.alp_parse_file_header_operand,"ax",%progbits
 773              		.align	1
 774              		.global	alp_parse_file_header_operand
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	alp_parse_file_header_operand:
 781              	.LFB5:
  90:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_header_t operand;
 782              		.loc 1 90 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 16
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL87:
 787 0000 30B5     		push	{r4, r5, lr}
 788              	.LCFI23:
 789              		.cfi_def_cfa_offset 12
 790              		.cfi_offset 4, -12
 791              		.cfi_offset 5, -8
 792              		.cfi_offset 14, -4
 793 0002 85B0     		sub	sp, sp, #20
 794              	.LCFI24:
 795              		.cfi_def_cfa_offset 32
 796 0004 0446     		mov	r4, r0
 797 0006 0D46     		mov	r5, r1
  92:../../shields/Murata-dualstack/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(d7ap_fs_file_header_t)); assert(e
 798              		.loc 1 92 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 26


 799 0008 0122     		movs	r2, #1
 800 000a 6946     		mov	r1, sp
 801              	.LVL88:
 802 000c 2846     		mov	r0, r5
 803              	.LVL89:
 804 000e FFF7FEFF 		bl	fifo_pop
 805              	.LVL90:
 806 0012 D0B9     		cbnz	r0, .L68
  93:../../shields/Murata-dualstack/src/alp.c **** 
 807              		.loc 1 93 0
 808 0014 0C22     		movs	r2, #12
 809 0016 0DF10101 		add	r1, sp, #1
 810 001a 2846     		mov	r0, r5
 811              	.LVL91:
 812 001c FFF7FEFF 		bl	fifo_pop
 813              	.LVL92:
 814 0020 C8B9     		cbnz	r0, .L69
  96:../../shields/Murata-dualstack/src/alp.c ****   operand.file_header.allocated_length = __builtin_bswap32(operand.file_header.allocated_length);
 815              		.loc 1 96 0
 816 0022 DDF80530 		ldr	r3, [sp, #5]	@ unaligned
 817 0026 1BBA     		rev	r3, r3
 818 0028 CDF80530 		str	r3, [sp, #5]	@ unaligned
  97:../../shields/Murata-dualstack/src/alp.c ****   return operand;
 819              		.loc 1 97 0
 820 002c DDF80930 		ldr	r3, [sp, #9]	@ unaligned
 821 0030 1BBA     		rev	r3, r3
 822 0032 CDF80930 		str	r3, [sp, #9]	@ unaligned
  98:../../shields/Murata-dualstack/src/alp.c **** }
 823              		.loc 1 98 0
 824 0036 6B46     		mov	r3, sp
 825 0038 07CB     		ldmia	r3!, {r0, r1, r2}
 826              	.LVL93:
 827 003a 2060     		str	r0, [r4]	@ unaligned
 828 003c 6160     		str	r1, [r4, #4]	@ unaligned
 829 003e A260     		str	r2, [r4, #8]	@ unaligned
 830 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 0042 2373     		strb	r3, [r4, #12]
  99:../../shields/Murata-dualstack/src/alp.c **** 
 832              		.loc 1 99 0
 833 0044 2046     		mov	r0, r4
 834 0046 05B0     		add	sp, sp, #20
 835              	.LCFI25:
 836              		.cfi_remember_state
 837              		.cfi_def_cfa_offset 12
 838              		@ sp needed
 839 0048 30BD     		pop	{r4, r5, pc}
 840              	.LVL94:
 841              	.L68:
 842              	.LCFI26:
 843              		.cfi_restore_state
  92:../../shields/Murata-dualstack/src/alp.c ****   err = fifo_pop(cmd_fifo, (uint8_t*)&operand.file_header, sizeof(d7ap_fs_file_header_t)); assert(e
 844              		.loc 1 92 0 discriminator 1
 845 004a 064B     		ldr	r3, .L70
 846 004c 064A     		ldr	r2, .L70+4
 847 004e 5C21     		movs	r1, #92
 848 0050 0648     		ldr	r0, .L70+8
 849              	.LVL95:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 27


 850 0052 FFF7FEFF 		bl	__assert_func
 851              	.LVL96:
 852              	.L69:
  93:../../shields/Murata-dualstack/src/alp.c **** 
 853              		.loc 1 93 0 discriminator 1
 854 0056 034B     		ldr	r3, .L70
 855 0058 034A     		ldr	r2, .L70+4
 856 005a 5D21     		movs	r1, #93
 857 005c 0348     		ldr	r0, .L70+8
 858              	.LVL97:
 859 005e FFF7FEFF 		bl	__assert_func
 860              	.LVL98:
 861              	.L71:
 862 0062 00BF     		.align	2
 863              	.L70:
 864 0064 00000000 		.word	.LC10
 865 0068 00000000 		.word	.LANCHOR6
 866 006c 40000000 		.word	.LC1
 867              		.cfi_endproc
 868              	.LFE5:
 870              		.section	.text.alp_append_file_offset_operand,"ax",%progbits
 871              		.align	1
 872              		.global	alp_append_file_offset_operand
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv4-sp-d16
 878              	alp_append_file_offset_operand:
 879              	.LFB6:
 101:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 880              		.loc 1 101 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              	.LVL99:
 885 0000 38B5     		push	{r3, r4, r5, lr}
 886              	.LCFI27:
 887              		.cfi_def_cfa_offset 16
 888              		.cfi_offset 3, -16
 889              		.cfi_offset 4, -12
 890              		.cfi_offset 5, -8
 891              		.cfi_offset 14, -4
 892 0002 0446     		mov	r4, r0
 893 0004 1546     		mov	r5, r2
 102:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 894              		.loc 1 102 0
 895 0006 FFF7FEFF 		bl	fifo_put_byte
 896              	.LVL100:
 897 000a 20B9     		cbnz	r0, .L75
 103:../../shields/Murata-dualstack/src/alp.c **** }
 898              		.loc 1 103 0
 899 000c 2946     		mov	r1, r5
 900 000e 2046     		mov	r0, r4
 901 0010 FFF7FEFF 		bl	alp_append_length_operand
 902              	.LVL101:
 104:../../shields/Murata-dualstack/src/alp.c **** 
 903              		.loc 1 104 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 28


 904 0014 38BD     		pop	{r3, r4, r5, pc}
 905              	.LVL102:
 906              	.L75:
 102:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 907              		.loc 1 102 0 discriminator 1
 908 0016 034B     		ldr	r3, .L76
 909 0018 034A     		ldr	r2, .L76+4
 910 001a 6621     		movs	r1, #102
 911 001c 0348     		ldr	r0, .L76+8
 912 001e FFF7FEFF 		bl	__assert_func
 913              	.LVL103:
 914              	.L77:
 915 0022 00BF     		.align	2
 916              	.L76:
 917 0024 00000000 		.word	.LC12
 918 0028 00000000 		.word	.LANCHOR7
 919 002c 40000000 		.word	.LC1
 920              		.cfi_endproc
 921              	.LFE6:
 923              		.section	.text.alp_append_indirect_forward_action,"ax",%progbits
 924              		.align	1
 925              		.global	alp_append_indirect_forward_action
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 929              		.fpu fpv4-sp-d16
 931              	alp_append_indirect_forward_action:
 932              	.LFB7:
 106:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_INDIRECT_FORWARD | (overload << 7)) == oss7SUCCESS);
 933              		.loc 1 106 0
 934              		.cfi_startproc
 935              		@ args = 4, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              	.LVL104:
 938 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 939              	.LCFI28:
 940              		.cfi_def_cfa_offset 24
 941              		.cfi_offset 3, -24
 942              		.cfi_offset 4, -20
 943              		.cfi_offset 5, -16
 944              		.cfi_offset 6, -12
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 0546     		mov	r5, r0
 948 0004 0E46     		mov	r6, r1
 949 0006 1446     		mov	r4, r2
 950 0008 1F46     		mov	r7, r3
 107:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 951              		.loc 1 107 0
 952 000a D101     		lsls	r1, r2, #7
 953              	.LVL105:
 954 000c 41F03301 		orr	r1, r1, #51
 955 0010 01F0B301 		and	r1, r1, #179
 956 0014 FFF7FEFF 		bl	fifo_put_byte
 957              	.LVL106:
 958 0018 30B9     		cbnz	r0, .L83
 108:../../shields/Murata-dualstack/src/alp.c **** 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 29


 959              		.loc 1 108 0
 960 001a 3146     		mov	r1, r6
 961 001c 2846     		mov	r0, r5
 962 001e FFF7FEFF 		bl	fifo_put_byte
 963              	.LVL107:
 964 0022 38B9     		cbnz	r0, .L84
 110:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, overload_config, overload_config_len) == oss7SUCCESS);
 965              		.loc 1 110 0
 966 0024 64B9     		cbnz	r4, .L85
 967              	.L78:
 115:../../shields/Murata-dualstack/src/alp.c **** 
 968              		.loc 1 115 0
 969 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 970              	.LVL108:
 971              	.L83:
 107:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 972              		.loc 1 107 0 discriminator 1
 973 0028 0C4B     		ldr	r3, .L86
 974 002a 0D4A     		ldr	r2, .L86+4
 975 002c 6B21     		movs	r1, #107
 976 002e 0D48     		ldr	r0, .L86+8
 977 0030 FFF7FEFF 		bl	__assert_func
 978              	.LVL109:
 979              	.L84:
 108:../../shields/Murata-dualstack/src/alp.c **** 
 980              		.loc 1 108 0 discriminator 1
 981 0034 0C4B     		ldr	r3, .L86+12
 982 0036 0A4A     		ldr	r2, .L86+4
 983 0038 6C21     		movs	r1, #108
 984 003a 0A48     		ldr	r0, .L86+8
 985 003c FFF7FEFF 		bl	__assert_func
 986              	.LVL110:
 987              	.L85:
 111:../../shields/Murata-dualstack/src/alp.c ****   }
 988              		.loc 1 111 0
 989 0040 9DF81820 		ldrb	r2, [sp, #24]	@ zero_extendqisi2
 990 0044 3946     		mov	r1, r7
 991 0046 2846     		mov	r0, r5
 992 0048 FFF7FEFF 		bl	fifo_put
 993              	.LVL111:
 994 004c 0028     		cmp	r0, #0
 995 004e EAD0     		beq	.L78
 111:../../shields/Murata-dualstack/src/alp.c ****   }
 996              		.loc 1 111 0 is_stmt 0 discriminator 1
 997 0050 064B     		ldr	r3, .L86+16
 998 0052 034A     		ldr	r2, .L86+4
 999 0054 6F21     		movs	r1, #111
 1000 0056 0348     		ldr	r0, .L86+8
 1001 0058 FFF7FEFF 		bl	__assert_func
 1002              	.LVL112:
 1003              	.L87:
 1004              		.align	2
 1005              	.L86:
 1006 005c 00000000 		.word	.LC13
 1007 0060 00000000 		.word	.LANCHOR8
 1008 0064 40000000 		.word	.LC1
 1009 0068 00000000 		.word	.LC12
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 30


 1010 006c 50000000 		.word	.LC14
 1011              		.cfi_endproc
 1012              	.LFE7:
 1014              		.section	.text.alp_append_forward_action,"ax",%progbits
 1015              		.align	1
 1016              		.global	alp_append_forward_action
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv4-sp-d16
 1022              	alp_append_forward_action:
 1023              	.LFB8:
 117:../../shields/Murata-dualstack/src/alp.c ****   assert(config!=NULL);
 1024              		.loc 1 117 0 is_stmt 1
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 8
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL113:
 1029 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1030              	.LCFI29:
 1031              		.cfi_def_cfa_offset 20
 1032              		.cfi_offset 4, -20
 1033              		.cfi_offset 5, -16
 1034              		.cfi_offset 6, -12
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 83B0     		sub	sp, sp, #12
 1038              	.LCFI30:
 1039              		.cfi_def_cfa_offset 32
 118:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1040              		.loc 1 118 0
 1041 0004 EAB1     		cbz	r2, .L120
 1042 0006 0446     		mov	r4, r0
 1043 0008 0E46     		mov	r6, r1
 1044 000a 1F46     		mov	r7, r3
 1045 000c 1546     		mov	r5, r2
 119:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 1046              		.loc 1 119 0
 1047 000e 3221     		movs	r1, #50
 1048              	.LVL114:
 1049 0010 FFF7FEFF 		bl	fifo_put_byte
 1050              	.LVL115:
 1051 0014 D8B9     		cbnz	r0, .L121
 120:../../shields/Murata-dualstack/src/alp.c **** 
 1052              		.loc 1 120 0
 1053 0016 3146     		mov	r1, r6
 1054 0018 2046     		mov	r0, r4
 1055 001a FFF7FEFF 		bl	fifo_put_byte
 1056              	.LVL116:
 1057 001e E0B9     		cbnz	r0, .L122
 122:../../shields/Murata-dualstack/src/alp.c ****   {
 1058              		.loc 1 122 0
 1059 0020 D72E     		cmp	r6, #215
 1060 0022 20D0     		beq	.L123
 131:../../shields/Murata-dualstack/src/alp.c ****   {
 1061              		.loc 1 131 0
 1062 0024 022E     		cmp	r6, #2
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 31


 1063 0026 6ED0     		beq	.L124
 146:../../shields/Murata-dualstack/src/alp.c ****   {
 1064              		.loc 1 146 0
 1065 0028 032E     		cmp	r6, #3
 1066 002a 00F0D980 		beq	.L125
 159:../../shields/Murata-dualstack/src/alp.c ****   }
 1067              		.loc 1 159 0
 1068 002e 3A46     		mov	r2, r7
 1069 0030 2946     		mov	r1, r5
 1070 0032 2046     		mov	r0, r4
 1071 0034 FFF7FEFF 		bl	fifo_put
 1072              	.LVL117:
 1073 0038 0028     		cmp	r0, #0
 1074 003a 40F02481 		bne	.L126
 1075              	.L88:
 163:../../shields/Murata-dualstack/src/alp.c **** 
 1076              		.loc 1 163 0
 1077 003e 03B0     		add	sp, sp, #12
 1078              	.LCFI31:
 1079              		.cfi_remember_state
 1080              		.cfi_def_cfa_offset 20
 1081              		@ sp needed
 1082 0040 F0BD     		pop	{r4, r5, r6, r7, pc}
 1083              	.LVL118:
 1084              	.L120:
 1085              	.LCFI32:
 1086              		.cfi_restore_state
 118:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS);
 1087              		.loc 1 118 0 discriminator 1
 1088 0042 944B     		ldr	r3, .L142
 1089              	.LVL119:
 1090 0044 944A     		ldr	r2, .L142+4
 1091              	.LVL120:
 1092 0046 7621     		movs	r1, #118
 1093              	.LVL121:
 1094 0048 9448     		ldr	r0, .L142+8
 1095              	.LVL122:
 1096 004a FFF7FEFF 		bl	__assert_func
 1097              	.LVL123:
 1098              	.L121:
 119:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, itf_id) == oss7SUCCESS);
 1099              		.loc 1 119 0 discriminator 1
 1100 004e 944B     		ldr	r3, .L142+12
 1101 0050 914A     		ldr	r2, .L142+4
 1102 0052 7721     		movs	r1, #119
 1103 0054 9148     		ldr	r0, .L142+8
 1104 0056 FFF7FEFF 		bl	__assert_func
 1105              	.LVL124:
 1106              	.L122:
 120:../../shields/Murata-dualstack/src/alp.c **** 
 1107              		.loc 1 120 0 discriminator 1
 1108 005a 924B     		ldr	r3, .L142+16
 1109 005c 8E4A     		ldr	r2, .L142+4
 1110 005e 7821     		movs	r1, #120
 1111 0060 8E48     		ldr	r0, .L142+8
 1112 0062 FFF7FEFF 		bl	__assert_func
 1113              	.LVL125:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 32


 1114              	.L123:
 1115              	.LBB17:
 124:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 1116              		.loc 1 124 0
 1117 0066 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1118 0068 2046     		mov	r0, r4
 1119 006a FFF7FEFF 		bl	fifo_put_byte
 1120              	.LVL126:
 1121 006e 90B9     		cbnz	r0, .L127
 125:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 1122              		.loc 1 125 0
 1123 0070 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 1124 0072 2046     		mov	r0, r4
 1125 0074 FFF7FEFF 		bl	fifo_put_byte
 1126              	.LVL127:
 1127 0078 98B9     		cbnz	r0, .L128
 126:../../shields/Murata-dualstack/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 1128              		.loc 1 126 0
 1129 007a A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 1130 007c 2046     		mov	r0, r4
 1131 007e FFF7FEFF 		bl	fifo_put_byte
 1132              	.LVL128:
 1133 0082 A0B9     		cbnz	r0, .L129
 127:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.access_class) == oss7SUC
 1134              		.loc 1 127 0
 1135 0084 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1136 0086 C3F30113 		ubfx	r3, r3, #4, #2
 1137              	.LVL129:
 1138              	.LBB18:
 1139              	.LBB19:
 291:../../shields/Murata-dualstack/inc/d7ap.h ****   {
 1140              		.loc 2 291 0
 1141 008a 032B     		cmp	r3, #3
 1142 008c 2AD8     		bhi	.L96
 1143 008e DFE803F0 		tbb	[pc, r3]
 1144              	.L98:
 1145 0092 32       		.byte	(.L118-.L98)/2
 1146 0093 30       		.byte	(.L99-.L98)/2
 1147 0094 14       		.byte	(.L100-.L98)/2
 1148 0095 27       		.byte	(.L101-.L98)/2
 1149              	.LVL130:
 1150              		.p2align 1
 1151              	.L127:
 1152              	.LBE19:
 1153              	.LBE18:
 124:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->dormant_timeout) == oss7SUCCESS);
 1154              		.loc 1 124 0 discriminator 1
 1155 0096 844B     		ldr	r3, .L142+20
 1156 0098 7F4A     		ldr	r2, .L142+4
 1157 009a 7C21     		movs	r1, #124
 1158 009c 7F48     		ldr	r0, .L142+8
 1159 009e FFF7FEFF 		bl	__assert_func
 1160              	.LVL131:
 1161              	.L128:
 125:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((d7ap_session_config_t*)config)->addressee.ctrl.raw) == oss7SUCCESS
 1162              		.loc 1 125 0 discriminator 1
 1163 00a2 824B     		ldr	r3, .L142+24
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 33


 1164 00a4 7C4A     		ldr	r2, .L142+4
 1165 00a6 7D21     		movs	r1, #125
 1166 00a8 7C48     		ldr	r0, .L142+8
 1167 00aa FFF7FEFF 		bl	__assert_func
 1168              	.LVL132:
 1169              	.L129:
 126:../../shields/Murata-dualstack/src/alp.c ****     uint8_t id_length = d7ap_addressee_id_length(((d7ap_session_config_t*)config)->addressee.ctrl.i
 1170              		.loc 1 126 0 discriminator 1
 1171 00ae 804B     		ldr	r3, .L142+28
 1172 00b0 794A     		ldr	r2, .L142+4
 1173 00b2 7E21     		movs	r1, #126
 1174 00b4 7948     		ldr	r0, .L142+8
 1175 00b6 FFF7FEFF 		bl	__assert_func
 1176              	.LVL133:
 1177              	.L100:
 1178              	.LBB22:
 1179              	.LBB20:
 298:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_VID:
 1180              		.loc 2 298 0
 1181 00ba 0826     		movs	r6, #8
 1182              	.L97:
 1183              	.LVL134:
 1184              	.LBE20:
 1185              	.LBE22:
 128:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 1186              		.loc 1 128 0
 1187 00bc E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 1188 00be 2046     		mov	r0, r4
 1189 00c0 FFF7FEFF 		bl	fifo_put_byte
 1190              	.LVL135:
 1191 00c4 C8B9     		cbnz	r0, .L130
 129:../../shields/Murata-dualstack/src/alp.c ****   }
 1192              		.loc 1 129 0
 1193 00c6 3246     		mov	r2, r6
 1194 00c8 291D     		adds	r1, r5, #4
 1195 00ca 2046     		mov	r0, r4
 1196 00cc FFF7FEFF 		bl	fifo_put
 1197              	.LVL136:
 1198 00d0 0028     		cmp	r0, #0
 1199 00d2 B4D0     		beq	.L88
 129:../../shields/Murata-dualstack/src/alp.c ****   }
 1200              		.loc 1 129 0 is_stmt 0 discriminator 1
 1201 00d4 774B     		ldr	r3, .L142+32
 1202 00d6 704A     		ldr	r2, .L142+4
 1203 00d8 8121     		movs	r1, #129
 1204 00da 7048     		ldr	r0, .L142+8
 1205 00dc FFF7FEFF 		bl	__assert_func
 1206              	.LVL137:
 1207              	.L101:
 1208              	.LBB23:
 1209              	.LBB21:
 300:../../shields/Murata-dualstack/inc/d7ap.h ****       default:
 1210              		.loc 2 300 0 is_stmt 1
 1211 00e0 0226     		movs	r6, #2
 1212 00e2 EBE7     		b	.L97
 1213              	.L96:
 1214              		.loc 2 302 0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 34


 1215 00e4 744B     		ldr	r3, .L142+36
 1216 00e6 754A     		ldr	r2, .L142+40
 1217 00e8 4FF49771 		mov	r1, #302
 1218 00ec 7448     		ldr	r0, .L142+44
 1219 00ee FFF7FEFF 		bl	__assert_func
 1220              	.LVL138:
 1221              	.L99:
 294:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_NBID:
 1222              		.loc 2 294 0
 1223 00f2 0026     		movs	r6, #0
 1224 00f4 E2E7     		b	.L97
 1225              	.L118:
 296:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_UID:
 1226              		.loc 2 296 0
 1227 00f6 0126     		movs	r6, #1
 1228 00f8 E0E7     		b	.L97
 1229              	.LVL139:
 1230              	.L130:
 1231              	.LBE21:
 1232              	.LBE23:
 128:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((d7ap_session_config_t*)config)->addressee.id, id_length) == oss7SUCCESS
 1233              		.loc 1 128 0 discriminator 1
 1234 00fa 724B     		ldr	r3, .L142+48
 1235 00fc 664A     		ldr	r2, .L142+4
 1236 00fe 8021     		movs	r1, #128
 1237 0100 6648     		ldr	r0, .L142+8
 1238 0102 FFF7FEFF 		bl	__assert_func
 1239              	.LVL140:
 1240              	.L124:
 1241              	.LBE17:
 1242              	.LBB24:
 133:../../shields/Murata-dualstack/src/alp.c ****     control_byte += ((lorawan_session_config_abp_t*)config)->adr_enabled << 2;
 1243              		.loc 1 133 0
 1244 0106 95F82810 		ldrb	r1, [r5, #40]	@ zero_extendqisi2
 1245 010a 4900     		lsls	r1, r1, #1
 1246 010c CBB2     		uxtb	r3, r1
 1247              	.LVL141:
 134:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1248              		.loc 1 134 0
 1249 010e 95F82A10 		ldrb	r1, [r5, #42]	@ zero_extendqisi2
 1250 0112 8900     		lsls	r1, r1, #2
 1251 0114 C9B2     		uxtb	r1, r1
 1252 0116 1944     		add	r1, r1, r3
 1253              	.LVL142:
 135:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1254              		.loc 1 135 0
 1255 0118 01F0FE01 		and	r1, r1, #254
 1256              	.LVL143:
 1257 011c 2046     		mov	r0, r4
 1258 011e FFF7FEFF 		bl	fifo_put_byte
 1259              	.LVL144:
 1260 0122 0028     		cmp	r0, #0
 1261 0124 38D1     		bne	.L131
 136:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->data_rate) == oss7SUCCESS);
 1262              		.loc 1 136 0
 1263 0126 95F82910 		ldrb	r1, [r5, #41]	@ zero_extendqisi2
 1264 012a 2046     		mov	r0, r4
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 35


 1265 012c FFF7FEFF 		bl	fifo_put_byte
 1266              	.LVL145:
 1267 0130 0028     		cmp	r0, #0
 1268 0132 37D1     		bne	.L132
 137:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 1269              		.loc 1 137 0
 1270 0134 95F82B10 		ldrb	r1, [r5, #43]	@ zero_extendqisi2
 1271 0138 2046     		mov	r0, r4
 1272 013a FFF7FEFF 		bl	fifo_put_byte
 1273              	.LVL146:
 1274 013e 0028     		cmp	r0, #0
 1275 0140 36D1     		bne	.L133
 138:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 1276              		.loc 1 138 0
 1277 0142 1022     		movs	r2, #16
 1278 0144 2946     		mov	r1, r5
 1279 0146 2046     		mov	r0, r4
 1280 0148 FFF7FEFF 		bl	fifo_put
 1281              	.LVL147:
 1282 014c 0028     		cmp	r0, #0
 1283 014e 35D1     		bne	.L134
 139:../../shields/Murata-dualstack/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 1284              		.loc 1 139 0
 1285 0150 1022     		movs	r2, #16
 1286 0152 A918     		adds	r1, r5, r2
 1287 0154 2046     		mov	r0, r4
 1288 0156 FFF7FEFF 		bl	fifo_put
 1289              	.LVL148:
 1290 015a 0028     		cmp	r0, #0
 1291 015c 34D1     		bne	.L135
 140:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCESS);
 1292              		.loc 1 140 0
 1293 015e 2B6A     		ldr	r3, [r5, #32]
 1294 0160 1BBA     		rev	r3, r3
 1295 0162 02A9     		add	r1, sp, #8
 1296 0164 41F8083D 		str	r3, [r1, #-8]!
 141:../../shields/Murata-dualstack/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 1297              		.loc 1 141 0
 1298 0168 0422     		movs	r2, #4
 1299 016a 2046     		mov	r0, r4
 1300 016c FFF7FEFF 		bl	fifo_put
 1301              	.LVL149:
 1302 0170 0028     		cmp	r0, #0
 1303 0172 2FD1     		bne	.L136
 142:../../shields/Murata-dualstack/src/alp.c **** 
 1304              		.loc 1 142 0
 1305 0174 6B6A     		ldr	r3, [r5, #36]
 1306 0176 1BBA     		rev	r3, r3
 1307 0178 02A9     		add	r1, sp, #8
 1308 017a 41F8043D 		str	r3, [r1, #-4]!
 144:../../shields/Murata-dualstack/src/alp.c ****   }
 1309              		.loc 1 144 0
 1310 017e 0422     		movs	r2, #4
 1311 0180 2046     		mov	r0, r4
 1312 0182 FFF7FEFF 		bl	fifo_put
 1313              	.LVL150:
 1314 0186 0028     		cmp	r0, #0
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 36


 1315 0188 3FF459AF 		beq	.L88
 144:../../shields/Murata-dualstack/src/alp.c ****   }
 1316              		.loc 1 144 0 is_stmt 0 discriminator 1
 1317 018c 4E4B     		ldr	r3, .L142+52
 1318 018e 424A     		ldr	r2, .L142+4
 1319 0190 9021     		movs	r1, #144
 1320 0192 4248     		ldr	r0, .L142+8
 1321 0194 FFF7FEFF 		bl	__assert_func
 1322              	.LVL151:
 1323              	.L131:
 135:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->application_port) == oss7SU
 1324              		.loc 1 135 0 is_stmt 1 discriminator 1
 1325 0198 4C4B     		ldr	r3, .L142+56
 1326 019a 3F4A     		ldr	r2, .L142+4
 1327 019c 8721     		movs	r1, #135
 1328 019e 3F48     		ldr	r0, .L142+8
 1329 01a0 FFF7FEFF 		bl	__assert_func
 1330              	.LVL152:
 1331              	.L132:
 136:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_abp_t*)config)->data_rate) == oss7SUCCESS);
 1332              		.loc 1 136 0 discriminator 1
 1333 01a4 4A4B     		ldr	r3, .L142+60
 1334 01a6 3C4A     		ldr	r2, .L142+4
 1335 01a8 8821     		movs	r1, #136
 1336 01aa 3C48     		ldr	r0, .L142+8
 1337 01ac FFF7FEFF 		bl	__assert_func
 1338              	.LVL153:
 1339              	.L133:
 137:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->nwkSKey, 16) == oss7SUCCESS);
 1340              		.loc 1 137 0 discriminator 1
 1341 01b0 484B     		ldr	r3, .L142+64
 1342 01b2 394A     		ldr	r2, .L142+4
 1343 01b4 8921     		movs	r1, #137
 1344 01b6 3948     		ldr	r0, .L142+8
 1345 01b8 FFF7FEFF 		bl	__assert_func
 1346              	.LVL154:
 1347              	.L134:
 138:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_abp_t*)config)->appSKey, 16) == oss7SUCCESS);
 1348              		.loc 1 138 0 discriminator 1
 1349 01bc 464B     		ldr	r3, .L142+68
 1350 01be 364A     		ldr	r2, .L142+4
 1351 01c0 8A21     		movs	r1, #138
 1352 01c2 3648     		ldr	r0, .L142+8
 1353 01c4 FFF7FEFF 		bl	__assert_func
 1354              	.LVL155:
 1355              	.L135:
 139:../../shields/Murata-dualstack/src/alp.c ****     uint32_t dev_addr = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->devAddr);
 1356              		.loc 1 139 0 discriminator 1
 1357 01c8 444B     		ldr	r3, .L142+72
 1358 01ca 334A     		ldr	r2, .L142+4
 1359 01cc 8B21     		movs	r1, #139
 1360 01ce 3348     		ldr	r0, .L142+8
 1361 01d0 FFF7FEFF 		bl	__assert_func
 1362              	.LVL156:
 1363              	.L136:
 141:../../shields/Murata-dualstack/src/alp.c ****     uint32_t network_id = __builtin_bswap32(((lorawan_session_config_abp_t*)config)->network_id);
 1364              		.loc 1 141 0 discriminator 1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 37


 1365 01d4 424B     		ldr	r3, .L142+76
 1366 01d6 304A     		ldr	r2, .L142+4
 1367 01d8 8D21     		movs	r1, #141
 1368 01da 3048     		ldr	r0, .L142+8
 1369 01dc FFF7FEFF 		bl	__assert_func
 1370              	.LVL157:
 1371              	.L125:
 1372              	.LBE24:
 1373              	.LBB25:
 148:../../shields/Murata-dualstack/src/alp.c ****     control_byte += ((lorawan_session_config_otaa_t*)config)->adr_enabled << 2;
 1374              		.loc 1 148 0
 1375 01e0 95F82010 		ldrb	r1, [r5, #32]	@ zero_extendqisi2
 1376 01e4 4900     		lsls	r1, r1, #1
 1377 01e6 CBB2     		uxtb	r3, r1
 1378              	.LVL158:
 149:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, control_byte) == oss7SUCCESS);
 1379              		.loc 1 149 0
 1380 01e8 95F82210 		ldrb	r1, [r5, #34]	@ zero_extendqisi2
 1381 01ec 8900     		lsls	r1, r1, #2
 1382 01ee C9B2     		uxtb	r1, r1
 1383 01f0 1944     		add	r1, r1, r3
 1384              	.LVL159:
 150:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1385              		.loc 1 150 0
 1386 01f2 01F0FE01 		and	r1, r1, #254
 1387              	.LVL160:
 1388 01f6 2046     		mov	r0, r4
 1389 01f8 FFF7FEFF 		bl	fifo_put_byte
 1390              	.LVL161:
 1391 01fc 28BB     		cbnz	r0, .L137
 151:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->data_rate) == oss7SUCCESS)
 1392              		.loc 1 151 0
 1393 01fe 95F82110 		ldrb	r1, [r5, #33]	@ zero_extendqisi2
 1394 0202 2046     		mov	r0, r4
 1395 0204 FFF7FEFF 		bl	fifo_put_byte
 1396              	.LVL162:
 1397 0208 28BB     		cbnz	r0, .L138
 152:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 1398              		.loc 1 152 0
 1399 020a 95F82310 		ldrb	r1, [r5, #35]	@ zero_extendqisi2
 1400 020e 2046     		mov	r0, r4
 1401 0210 FFF7FEFF 		bl	fifo_put_byte
 1402              	.LVL163:
 1403 0214 28BB     		cbnz	r0, .L139
 153:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 1404              		.loc 1 153 0
 1405 0216 0822     		movs	r2, #8
 1406 0218 2946     		mov	r1, r5
 1407 021a 2046     		mov	r0, r4
 1408 021c FFF7FEFF 		bl	fifo_put
 1409              	.LVL164:
 1410 0220 28BB     		cbnz	r0, .L140
 154:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 1411              		.loc 1 154 0
 1412 0222 0822     		movs	r2, #8
 1413 0224 A918     		adds	r1, r5, r2
 1414 0226 2046     		mov	r0, r4
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 38


 1415 0228 FFF7FEFF 		bl	fifo_put
 1416              	.LVL165:
 1417 022c 28BB     		cbnz	r0, .L141
 155:../../shields/Murata-dualstack/src/alp.c ****   }
 1418              		.loc 1 155 0
 1419 022e 1022     		movs	r2, #16
 1420 0230 A918     		adds	r1, r5, r2
 1421 0232 2046     		mov	r0, r4
 1422 0234 FFF7FEFF 		bl	fifo_put
 1423              	.LVL166:
 1424 0238 0028     		cmp	r0, #0
 1425 023a 3FF400AF 		beq	.L88
 155:../../shields/Murata-dualstack/src/alp.c ****   }
 1426              		.loc 1 155 0 is_stmt 0 discriminator 1
 1427 023e 294B     		ldr	r3, .L142+80
 1428 0240 154A     		ldr	r2, .L142+4
 1429 0242 9B21     		movs	r1, #155
 1430 0244 1548     		ldr	r0, .L142+8
 1431 0246 FFF7FEFF 		bl	__assert_func
 1432              	.LVL167:
 1433              	.L137:
 150:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->application_port) == oss7S
 1434              		.loc 1 150 0 is_stmt 1 discriminator 1
 1435 024a 204B     		ldr	r3, .L142+56
 1436 024c 124A     		ldr	r2, .L142+4
 1437 024e 9621     		movs	r1, #150
 1438 0250 1248     		ldr	r0, .L142+8
 1439 0252 FFF7FEFF 		bl	__assert_func
 1440              	.LVL168:
 1441              	.L138:
 151:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put_byte(fifo, ((lorawan_session_config_otaa_t*)config)->data_rate) == oss7SUCCESS)
 1442              		.loc 1 151 0 discriminator 1
 1443 0256 244B     		ldr	r3, .L142+84
 1444 0258 0F4A     		ldr	r2, .L142+4
 1445 025a 9721     		movs	r1, #151
 1446 025c 0F48     		ldr	r0, .L142+8
 1447 025e FFF7FEFF 		bl	__assert_func
 1448              	.LVL169:
 1449              	.L139:
 152:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->devEUI, 8) == oss7SUCCESS);
 1450              		.loc 1 152 0 discriminator 1
 1451 0262 224B     		ldr	r3, .L142+88
 1452 0264 0C4A     		ldr	r2, .L142+4
 1453 0266 9821     		movs	r1, #152
 1454 0268 0C48     		ldr	r0, .L142+8
 1455 026a FFF7FEFF 		bl	__assert_func
 1456              	.LVL170:
 1457              	.L140:
 153:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appEUI, 8) == oss7SUCCESS);
 1458              		.loc 1 153 0 discriminator 1
 1459 026e 204B     		ldr	r3, .L142+92
 1460 0270 094A     		ldr	r2, .L142+4
 1461 0272 9921     		movs	r1, #153
 1462 0274 0948     		ldr	r0, .L142+8
 1463 0276 FFF7FEFF 		bl	__assert_func
 1464              	.LVL171:
 1465              	.L141:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 39


 154:../../shields/Murata-dualstack/src/alp.c ****     assert(fifo_put(fifo, ((lorawan_session_config_otaa_t*)config)->appKey, 16) == oss7SUCCESS);
 1466              		.loc 1 154 0 discriminator 1
 1467 027a 1E4B     		ldr	r3, .L142+96
 1468 027c 064A     		ldr	r2, .L142+4
 1469 027e 9A21     		movs	r1, #154
 1470 0280 0648     		ldr	r0, .L142+8
 1471 0282 FFF7FEFF 		bl	__assert_func
 1472              	.LVL172:
 1473              	.L126:
 1474              	.LBE25:
 159:../../shields/Murata-dualstack/src/alp.c ****   }
 1475              		.loc 1 159 0 discriminator 1
 1476 0286 1C4B     		ldr	r3, .L142+100
 1477 0288 034A     		ldr	r2, .L142+4
 1478 028a 9F21     		movs	r1, #159
 1479 028c 0348     		ldr	r0, .L142+8
 1480 028e FFF7FEFF 		bl	__assert_func
 1481              	.LVL173:
 1482              	.L143:
 1483 0292 00BF     		.align	2
 1484              	.L142:
 1485 0294 00000000 		.word	.LC15
 1486 0298 00000000 		.word	.LANCHOR9
 1487 029c 40000000 		.word	.LC1
 1488 02a0 10000000 		.word	.LC16
 1489 02a4 44000000 		.word	.LC17
 1490 02a8 70000000 		.word	.LC18
 1491 02ac C0000000 		.word	.LC19
 1492 02b0 18010000 		.word	.LC20
 1493 02b4 D4010000 		.word	.LC22
 1494 02b8 38000000 		.word	.LC4
 1495 02bc 00000000 		.word	.LANCHOR2
 1496 02c0 40000000 		.word	.LC5
 1497 02c4 74010000 		.word	.LC21
 1498 02c8 FC030000 		.word	.LC29
 1499 02cc 30020000 		.word	.LC23
 1500 02d0 64020000 		.word	.LC24
 1501 02d4 C4020000 		.word	.LC25
 1502 02d8 1C030000 		.word	.LC26
 1503 02dc 70030000 		.word	.LC27
 1504 02e0 C4030000 		.word	.LC28
 1505 02e4 94050000 		.word	.LC34
 1506 02e8 34040000 		.word	.LC30
 1507 02ec 94040000 		.word	.LC31
 1508 02f0 EC040000 		.word	.LC32
 1509 02f4 40050000 		.word	.LC33
 1510 02f8 E8050000 		.word	.LC35
 1511              		.cfi_endproc
 1512              	.LFE8:
 1514              		.section	.text.alp_append_return_file_data_action,"ax",%progbits
 1515              		.align	1
 1516              		.global	alp_append_return_file_data_action
 1517              		.syntax unified
 1518              		.thumb
 1519              		.thumb_func
 1520              		.fpu fpv4-sp-d16
 1522              	alp_append_return_file_data_action:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 40


 1523              	.LFB9:
 165:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss7SUCCESS);
 1524              		.loc 1 165 0
 1525              		.cfi_startproc
 1526              		@ args = 4, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528              	.LVL174:
 1529 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1530              	.LCFI33:
 1531              		.cfi_def_cfa_offset 24
 1532              		.cfi_offset 3, -24
 1533              		.cfi_offset 4, -20
 1534              		.cfi_offset 5, -16
 1535              		.cfi_offset 6, -12
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 0446     		mov	r4, r0
 1539 0004 0F46     		mov	r7, r1
 1540 0006 1646     		mov	r6, r2
 1541 0008 1D46     		mov	r5, r3
 166:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1542              		.loc 1 166 0
 1543 000a 2021     		movs	r1, #32
 1544              	.LVL175:
 1545 000c FFF7FEFF 		bl	fifo_put_byte
 1546              	.LVL176:
 1547 0010 98B9     		cbnz	r0, .L149
 167:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1548              		.loc 1 167 0
 1549 0012 3946     		mov	r1, r7
 1550 0014 2046     		mov	r0, r4
 1551 0016 FFF7FEFF 		bl	fifo_put_byte
 1552              	.LVL177:
 1553 001a A0B9     		cbnz	r0, .L150
 168:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, length);
 1554              		.loc 1 168 0
 1555 001c 3146     		mov	r1, r6
 1556 001e 2046     		mov	r0, r4
 1557 0020 FFF7FEFF 		bl	alp_append_length_operand
 1558              	.LVL178:
 169:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 1559              		.loc 1 169 0
 1560 0024 2946     		mov	r1, r5
 1561 0026 2046     		mov	r0, r4
 1562 0028 FFF7FEFF 		bl	alp_append_length_operand
 1563              	.LVL179:
 170:../../shields/Murata-dualstack/src/alp.c **** }
 1564              		.loc 1 170 0
 1565 002c AAB2     		uxth	r2, r5
 1566 002e 0699     		ldr	r1, [sp, #24]
 1567 0030 2046     		mov	r0, r4
 1568 0032 FFF7FEFF 		bl	fifo_put
 1569              	.LVL180:
 1570 0036 60B9     		cbnz	r0, .L151
 171:../../shields/Murata-dualstack/src/alp.c **** 
 1571              		.loc 1 171 0
 1572 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 41


 1573              	.LVL181:
 1574              	.L149:
 166:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, file_id) == oss7SUCCESS);
 1575              		.loc 1 166 0 discriminator 1
 1576 003a 094B     		ldr	r3, .L152
 1577 003c 094A     		ldr	r2, .L152+4
 1578 003e A621     		movs	r1, #166
 1579 0040 0948     		ldr	r0, .L152+8
 1580 0042 FFF7FEFF 		bl	__assert_func
 1581              	.LVL182:
 1582              	.L150:
 167:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, offset);
 1583              		.loc 1 167 0 discriminator 1
 1584 0046 094B     		ldr	r3, .L152+12
 1585 0048 064A     		ldr	r2, .L152+4
 1586 004a A721     		movs	r1, #167
 1587 004c 0648     		ldr	r0, .L152+8
 1588 004e FFF7FEFF 		bl	__assert_func
 1589              	.LVL183:
 1590              	.L151:
 170:../../shields/Murata-dualstack/src/alp.c **** }
 1591              		.loc 1 170 0 discriminator 1
 1592 0052 074B     		ldr	r3, .L152+16
 1593 0054 034A     		ldr	r2, .L152+4
 1594 0056 AA21     		movs	r1, #170
 1595 0058 0348     		ldr	r0, .L152+8
 1596 005a FFF7FEFF 		bl	__assert_func
 1597              	.LVL184:
 1598              	.L153:
 1599 005e 00BF     		.align	2
 1600              	.L152:
 1601 0060 00000000 		.word	.LC36
 1602 0064 00000000 		.word	.LANCHOR10
 1603 0068 40000000 		.word	.LC1
 1604 006c 00000000 		.word	.LC12
 1605 0070 3C000000 		.word	.LC37
 1606              		.cfi_endproc
 1607              	.LFE9:
 1609              		.section	.text.alp_parse_action,"ax",%progbits
 1610              		.align	1
 1611              		.global	alp_parse_action
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1615              		.fpu fpv4-sp-d16
 1617              	alp_parse_action:
 1618              	.LFB17:
 269:../../shields/Murata-dualstack/src/alp.c **** 
 270:../../shields/Murata-dualstack/src/alp.c **** void alp_parse_action(fifo_t* fifo, alp_action_t* action) {
 1619              		.loc 1 270 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 8
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 1623              	.LVL185:
 1624 0000 30B5     		push	{r4, r5, lr}
 1625              	.LCFI34:
 1626              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 42


 1627              		.cfi_offset 4, -12
 1628              		.cfi_offset 5, -8
 1629              		.cfi_offset 14, -4
 1630 0002 83B0     		sub	sp, sp, #12
 1631              	.LCFI35:
 1632              		.cfi_def_cfa_offset 24
 1633 0004 0546     		mov	r5, r0
 1634 0006 0C46     		mov	r4, r1
 271:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op;
 272:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_pop(fifo, &op, 1) == oss7SUCCESS);
 1635              		.loc 1 272 0
 1636 0008 0122     		movs	r2, #1
 1637 000a 0DF10701 		add	r1, sp, #7
 1638              	.LVL186:
 1639 000e FFF7FEFF 		bl	fifo_pop
 1640              	.LVL187:
 1641 0012 F0B9     		cbnz	r0, .L164
 273:../../shields/Murata-dualstack/src/alp.c ****   bool b6 = (op >> 6) & 1;
 1642              		.loc 1 273 0
 1643 0014 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 1644 0018 C1F38012 		ubfx	r2, r1, #6, #1
 1645              	.LVL188:
 274:../../shields/Murata-dualstack/src/alp.c ****   bool b7 = op >> 7;
 1646              		.loc 1 274 0
 1647 001c CB09     		lsrs	r3, r1, #7
 1648              	.LVL189:
 275:../../shields/Murata-dualstack/src/alp.c ****   op &= 0x3F; // op is in b5-b0
 1649              		.loc 1 275 0
 1650 001e 01F03F01 		and	r1, r1, #63
 1651 0022 8DF80710 		strb	r1, [sp, #7]
 276:../../shields/Murata-dualstack/src/alp.c ****   action->operation = op;
 1652              		.loc 1 276 0
 1653 0026 2170     		strb	r1, [r4]
 277:../../shields/Murata-dualstack/src/alp.c ****   switch(op) {
 1654              		.loc 1 277 0
 1655 0028 0439     		subs	r1, r1, #4
 1656 002a 1F29     		cmp	r1, #31
 1657 002c 2DD8     		bhi	.L156
 1658 002e DFE801F0 		tbb	[pc, r1]
 1659              	.L158:
 1660 0032 17       		.byte	(.L157-.L158)/2
 1661 0033 2C       		.byte	(.L156-.L158)/2
 1662 0034 2C       		.byte	(.L156-.L158)/2
 1663 0035 2C       		.byte	(.L156-.L158)/2
 1664 0036 2C       		.byte	(.L156-.L158)/2
 1665 0037 2C       		.byte	(.L156-.L158)/2
 1666 0038 2C       		.byte	(.L156-.L158)/2
 1667 0039 2C       		.byte	(.L156-.L158)/2
 1668 003a 2C       		.byte	(.L156-.L158)/2
 1669 003b 2C       		.byte	(.L156-.L158)/2
 1670 003c 2C       		.byte	(.L156-.L158)/2
 1671 003d 2C       		.byte	(.L156-.L158)/2
 1672 003e 2C       		.byte	(.L156-.L158)/2
 1673 003f 2C       		.byte	(.L156-.L158)/2
 1674 0040 2C       		.byte	(.L156-.L158)/2
 1675 0041 2C       		.byte	(.L156-.L158)/2
 1676 0042 2C       		.byte	(.L156-.L158)/2
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 43


 1677 0043 2C       		.byte	(.L156-.L158)/2
 1678 0044 2C       		.byte	(.L156-.L158)/2
 1679 0045 2C       		.byte	(.L156-.L158)/2
 1680 0046 2C       		.byte	(.L156-.L158)/2
 1681 0047 2C       		.byte	(.L156-.L158)/2
 1682 0048 2C       		.byte	(.L156-.L158)/2
 1683 0049 2C       		.byte	(.L156-.L158)/2
 1684 004a 2C       		.byte	(.L156-.L158)/2
 1685 004b 2C       		.byte	(.L156-.L158)/2
 1686 004c 2C       		.byte	(.L156-.L158)/2
 1687 004d 2C       		.byte	(.L156-.L158)/2
 1688 004e 1D       		.byte	(.L159-.L158)/2
 1689 004f 2C       		.byte	(.L156-.L158)/2
 1690 0050 27       		.byte	(.L160-.L158)/2
 1691 0051 22       		.byte	(.L161-.L158)/2
 1692              	.LVL190:
 1693              		.p2align 1
 1694              	.L164:
 272:../../shields/Murata-dualstack/src/alp.c ****   bool b6 = (op >> 6) & 1;
 1695              		.loc 1 272 0 discriminator 1
 1696 0052 114B     		ldr	r3, .L165
 1697 0054 114A     		ldr	r2, .L165+4
 1698 0056 4FF48871 		mov	r1, #272
 1699 005a 1148     		ldr	r0, .L165+8
 1700 005c FFF7FEFF 		bl	__assert_func
 1701              	.LVL191:
 1702              	.L157:
 278:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_WRITE_FILE_DATA:
 279:../../shields/Murata-dualstack/src/alp.c ****       parse_op_write_file_data(fifo, action);
 1703              		.loc 1 279 0
 1704 0060 2146     		mov	r1, r4
 1705 0062 2846     		mov	r0, r5
 1706 0064 FFF7FEFF 		bl	parse_op_write_file_data
 1707              	.LVL192:
 1708              	.L154:
 280:../../shields/Murata-dualstack/src/alp.c ****       break;
 281:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_RETURN_FILE_DATA:
 282:../../shields/Murata-dualstack/src/alp.c ****       parse_op_return_file_data(fifo, action);
 283:../../shields/Murata-dualstack/src/alp.c ****       break;
 284:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_RETURN_TAG:
 285:../../shields/Murata-dualstack/src/alp.c ****       parse_op_return_tag(fifo, action, b6, b7);
 286:../../shields/Murata-dualstack/src/alp.c ****       break;
 287:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_RETURN_STATUS:
 288:../../shields/Murata-dualstack/src/alp.c ****       parse_op_return_status(fifo, action, b6, b7);
 289:../../shields/Murata-dualstack/src/alp.c ****       break;
 290:../../shields/Murata-dualstack/src/alp.c ****     default:
 291:../../shields/Murata-dualstack/src/alp.c ****       DPRINT("op %x not implemented", op);
 292:../../shields/Murata-dualstack/src/alp.c ****       assert(false);
 293:../../shields/Murata-dualstack/src/alp.c ****   }
 294:../../shields/Murata-dualstack/src/alp.c **** 
 295:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("parsed action");
 296:../../shields/Murata-dualstack/src/alp.c **** }
 1709              		.loc 1 296 0
 1710 0068 03B0     		add	sp, sp, #12
 1711              	.LCFI36:
 1712              		.cfi_remember_state
 1713              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 44


 1714              		@ sp needed
 1715 006a 30BD     		pop	{r4, r5, pc}
 1716              	.LVL193:
 1717              	.L159:
 1718              	.LCFI37:
 1719              		.cfi_restore_state
 282:../../shields/Murata-dualstack/src/alp.c ****       break;
 1720              		.loc 1 282 0
 1721 006c 2146     		mov	r1, r4
 1722 006e 2846     		mov	r0, r5
 1723 0070 FFF7FEFF 		bl	parse_op_return_file_data
 1724              	.LVL194:
 283:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_RETURN_TAG:
 1725              		.loc 1 283 0
 1726 0074 F8E7     		b	.L154
 1727              	.LVL195:
 1728              	.L161:
 285:../../shields/Murata-dualstack/src/alp.c ****       break;
 1729              		.loc 1 285 0
 1730 0076 2146     		mov	r1, r4
 1731 0078 2846     		mov	r0, r5
 1732 007a FFF7FEFF 		bl	parse_op_return_tag
 1733              	.LVL196:
 286:../../shields/Murata-dualstack/src/alp.c ****     case ALP_OP_RETURN_STATUS:
 1734              		.loc 1 286 0
 1735 007e F3E7     		b	.L154
 1736              	.LVL197:
 1737              	.L160:
 288:../../shields/Murata-dualstack/src/alp.c ****       break;
 1738              		.loc 1 288 0
 1739 0080 2146     		mov	r1, r4
 1740 0082 2846     		mov	r0, r5
 1741 0084 FFF7FEFF 		bl	parse_op_return_status
 1742              	.LVL198:
 289:../../shields/Murata-dualstack/src/alp.c ****     default:
 1743              		.loc 1 289 0
 1744 0088 EEE7     		b	.L154
 1745              	.LVL199:
 1746              	.L156:
 292:../../shields/Murata-dualstack/src/alp.c ****   }
 1747              		.loc 1 292 0
 1748 008a 064B     		ldr	r3, .L165+12
 1749              	.LVL200:
 1750 008c 034A     		ldr	r2, .L165+4
 1751              	.LVL201:
 1752 008e 4FF49271 		mov	r1, #292
 1753 0092 0348     		ldr	r0, .L165+8
 1754 0094 FFF7FEFF 		bl	__assert_func
 1755              	.LVL202:
 1756              	.L166:
 1757              		.align	2
 1758              	.L165:
 1759 0098 00000000 		.word	.LC38
 1760 009c 00000000 		.word	.LANCHOR11
 1761 00a0 40000000 		.word	.LC1
 1762 00a4 38000000 		.word	.LC4
 1763              		.cfi_endproc
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 45


 1764              	.LFE17:
 1766              		.section	.text.alp_append_tag_request_action,"ax",%progbits
 1767              		.align	1
 1768              		.global	alp_append_tag_request_action
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv4-sp-d16
 1774              	alp_append_tag_request_action:
 1775              	.LFB19:
 297:../../shields/Murata-dualstack/src/alp.c **** 
 298:../../shields/Murata-dualstack/src/alp.c **** uint8_t alp_get_expected_response_length(uint8_t* alp_command, uint8_t alp_command_length) {
 299:../../shields/Murata-dualstack/src/alp.c ****   uint8_t expected_response_length = 0;
 300:../../shields/Murata-dualstack/src/alp.c ****   fifo_t fifo;
 301:../../shields/Murata-dualstack/src/alp.c ****   fifo_init_filled(&fifo, alp_command, alp_command_length, alp_command_length + 1);
 302:../../shields/Murata-dualstack/src/alp.c **** 
 303:../../shields/Murata-dualstack/src/alp.c ****   while(fifo_get_size(&fifo) > 0) {
 304:../../shields/Murata-dualstack/src/alp.c ****     alp_control_t control;
 305:../../shields/Murata-dualstack/src/alp.c ****     fifo_pop(&fifo, (uint8_t*)&control.raw, 1);
 306:../../shields/Murata-dualstack/src/alp.c ****     switch(control.operation) {
 307:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 308:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, 1); // skip file ID
 309:../../shields/Murata-dualstack/src/alp.c ****         uint32_t offset = alp_parse_length_operand(&fifo); // offset
 310:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_parse_length_operand(&fifo); // the file length
 311:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 312:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 313:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += 1; // the opcode
 314:../../shields/Murata-dualstack/src/alp.c ****         break;
 315:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_REQUEST_TAG:
 316:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, 1); // skip tag ID operand
 317:../../shields/Murata-dualstack/src/alp.c ****         break;
 318:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_RETURN_FILE_DATA:
 319:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_WRITE_FILE_DATA:
 320:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, 1); // skip file ID
 321:../../shields/Murata-dualstack/src/alp.c ****         alp_parse_length_operand(&fifo); // offset
 322:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, alp_parse_length_operand(&fifo));
 323:../../shields/Murata-dualstack/src/alp.c ****         break;
 324:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_FORWARD: ;
 325:../../shields/Murata-dualstack/src/alp.c ****         uint8_t itf_id;
 326:../../shields/Murata-dualstack/src/alp.c ****         fifo_pop(&fifo, &itf_id, 1);
 327:../../shields/Murata-dualstack/src/alp.c ****         if(itf_id == ALP_ITF_ID_D7ASP) {
 328:../../shields/Murata-dualstack/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 329:../../shields/Murata-dualstack/src/alp.c ****           d7ap_addressee_ctrl_t addressee_ctrl;
 330:../../shields/Murata-dualstack/src/alp.c ****           fifo_pop(&fifo, (uint8_t*)&addressee_ctrl.raw, 1);
 331:../../shields/Murata-dualstack/src/alp.c ****           fifo_skip(&fifo, 2 + d7ap_addressee_id_length(addressee_ctrl.id_type)); // skip addressee
 332:../../shields/Murata-dualstack/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 333:../../shields/Murata-dualstack/src/alp.c ****         }
 334:../../shields/Murata-dualstack/src/alp.c ****         // other ITFs have no configuration
 335:../../shields/Murata-dualstack/src/alp.c ****         break;
 336:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_WRITE_FILE_PROPERTIES:
 337:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, 1 + sizeof(d7ap_fs_file_header_t)); // skip file ID & header
 338:../../shields/Murata-dualstack/src/alp.c ****         break;
 339:../../shields/Murata-dualstack/src/alp.c ****       // TODO other operations
 340:../../shields/Murata-dualstack/src/alp.c ****       default:
 341:../../shields/Murata-dualstack/src/alp.c ****         DPRINT("op %i not implemented", control.operation);
 342:../../shields/Murata-dualstack/src/alp.c ****         assert(false);
 343:../../shields/Murata-dualstack/src/alp.c ****     }
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 46


 344:../../shields/Murata-dualstack/src/alp.c ****   }
 345:../../shields/Murata-dualstack/src/alp.c **** 
 346:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("Expected ALP response length=%i", expected_response_length);
 347:../../shields/Murata-dualstack/src/alp.c ****   return expected_response_length;
 348:../../shields/Murata-dualstack/src/alp.c **** }
 349:../../shields/Murata-dualstack/src/alp.c **** 
 350:../../shields/Murata-dualstack/src/alp.c **** void alp_append_tag_request_action(fifo_t* fifo, uint8_t tag_id, bool eop) {
 1776              		.loc 1 350 0
 1777              		.cfi_startproc
 1778              		@ args = 0, pretend = 0, frame = 0
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 1780              	.LVL203:
 1781 0000 38B5     		push	{r3, r4, r5, lr}
 1782              	.LCFI38:
 1783              		.cfi_def_cfa_offset 16
 1784              		.cfi_offset 3, -16
 1785              		.cfi_offset 4, -12
 1786              		.cfi_offset 5, -8
 1787              		.cfi_offset 14, -4
 1788 0002 0446     		mov	r4, r0
 1789 0004 0D46     		mov	r5, r1
 351:../../shields/Murata-dualstack/src/alp.c ****   DPRINT("append tag %i", tag_id);
 352:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op = ALP_OP_REQUEST_TAG | (eop << 7);
 1790              		.loc 1 352 0
 1791 0006 D201     		lsls	r2, r2, #7
 1792              	.LVL204:
 1793 0008 42F03401 		orr	r1, r2, #52
 1794              	.LVL205:
 353:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1795              		.loc 1 353 0
 1796 000c 01F0B401 		and	r1, r1, #180
 1797              	.LVL206:
 1798 0010 FFF7FEFF 		bl	fifo_put_byte
 1799              	.LVL207:
 1800 0014 28B9     		cbnz	r0, .L171
 354:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, tag_id) == oss7SUCCESS);
 1801              		.loc 1 354 0
 1802 0016 2946     		mov	r1, r5
 1803 0018 2046     		mov	r0, r4
 1804 001a FFF7FEFF 		bl	fifo_put_byte
 1805              	.LVL208:
 1806 001e 38B9     		cbnz	r0, .L172
 355:../../shields/Murata-dualstack/src/alp.c **** }
 1807              		.loc 1 355 0
 1808 0020 38BD     		pop	{r3, r4, r5, pc}
 1809              	.LVL209:
 1810              	.L171:
 353:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1811              		.loc 1 353 0 discriminator 1
 1812 0022 074B     		ldr	r3, .L173
 1813 0024 074A     		ldr	r2, .L173+4
 1814 0026 40F26111 		movw	r1, #353
 1815 002a 0748     		ldr	r0, .L173+8
 1816 002c FFF7FEFF 		bl	__assert_func
 1817              	.LVL210:
 1818              	.L172:
 354:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, tag_id) == oss7SUCCESS);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 47


 1819              		.loc 1 354 0 discriminator 1
 1820 0030 064B     		ldr	r3, .L173+12
 1821 0032 044A     		ldr	r2, .L173+4
 1822 0034 4FF4B171 		mov	r1, #354
 1823 0038 0348     		ldr	r0, .L173+8
 1824 003a FFF7FEFF 		bl	__assert_func
 1825              	.LVL211:
 1826              	.L174:
 1827 003e 00BF     		.align	2
 1828              	.L173:
 1829 0040 00000000 		.word	.LC39
 1830 0044 00000000 		.word	.LANCHOR12
 1831 0048 40000000 		.word	.LC1
 1832 004c 28000000 		.word	.LC40
 1833              		.cfi_endproc
 1834              	.LFE19:
 1836              		.section	.text.alp_append_read_file_data_action,"ax",%progbits
 1837              		.align	1
 1838              		.global	alp_append_read_file_data_action
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu fpv4-sp-d16
 1844              	alp_append_read_file_data_action:
 1845              	.LFB20:
 356:../../shields/Murata-dualstack/src/alp.c **** 
 357:../../shields/Murata-dualstack/src/alp.c **** void alp_append_read_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t leng
 1846              		.loc 1 357 0
 1847              		.cfi_startproc
 1848              		@ args = 8, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              	.LVL212:
 1851 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1852              	.LCFI39:
 1853              		.cfi_def_cfa_offset 24
 1854              		.cfi_offset 3, -24
 1855              		.cfi_offset 4, -20
 1856              		.cfi_offset 5, -16
 1857              		.cfi_offset 6, -12
 1858              		.cfi_offset 7, -8
 1859              		.cfi_offset 14, -4
 1860 0002 0446     		mov	r4, r0
 1861 0004 0E46     		mov	r6, r1
 1862 0006 1746     		mov	r7, r2
 1863 0008 1D46     		mov	r5, r3
 358:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op = ALP_OP_READ_FILE_DATA | (resp << 6) | (group << 7);
 1864              		.loc 1 358 0
 1865 000a 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 1866              	.LVL213:
 1867 000e 8901     		lsls	r1, r1, #6
 1868 0010 41F00101 		orr	r1, r1, #1
 1869 0014 49B2     		sxtb	r1, r1
 1870 0016 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 1871              	.LVL214:
 1872 001a 41EAC311 		orr	r1, r1, r3, lsl #7
 1873              	.LVL215:
 359:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 48


 1874              		.loc 1 359 0
 1875 001e 01F0C101 		and	r1, r1, #193
 1876              	.LVL216:
 1877 0022 FFF7FEFF 		bl	fifo_put_byte
 1878              	.LVL217:
 1879 0026 48B9     		cbnz	r0, .L178
 360:../../shields/Murata-dualstack/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1880              		.loc 1 360 0
 1881 0028 3A46     		mov	r2, r7
 1882 002a 3146     		mov	r1, r6
 1883 002c 2046     		mov	r0, r4
 1884 002e FFF7FEFF 		bl	alp_append_file_offset_operand
 1885              	.LVL218:
 361:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, length);
 1886              		.loc 1 361 0
 1887 0032 2946     		mov	r1, r5
 1888 0034 2046     		mov	r0, r4
 1889 0036 FFF7FEFF 		bl	alp_append_length_operand
 1890              	.LVL219:
 362:../../shields/Murata-dualstack/src/alp.c **** }
 1891              		.loc 1 362 0
 1892 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1893              	.LVL220:
 1894              	.L178:
 359:../../shields/Murata-dualstack/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1895              		.loc 1 359 0 discriminator 1
 1896 003c 034B     		ldr	r3, .L179
 1897 003e 044A     		ldr	r2, .L179+4
 1898 0040 40F26711 		movw	r1, #359
 1899 0044 0348     		ldr	r0, .L179+8
 1900 0046 FFF7FEFF 		bl	__assert_func
 1901              	.LVL221:
 1902              	.L180:
 1903 004a 00BF     		.align	2
 1904              	.L179:
 1905 004c 00000000 		.word	.LC39
 1906 0050 00000000 		.word	.LANCHOR13
 1907 0054 40000000 		.word	.LC1
 1908              		.cfi_endproc
 1909              	.LFE20:
 1911              		.section	.text.alp_append_write_file_data_action,"ax",%progbits
 1912              		.align	1
 1913              		.global	alp_append_write_file_data_action
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	alp_append_write_file_data_action:
 1920              	.LFB21:
 363:../../shields/Murata-dualstack/src/alp.c **** 
 364:../../shields/Murata-dualstack/src/alp.c **** void alp_append_write_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t offset, uint32_t len
 1921              		.loc 1 364 0
 1922              		.cfi_startproc
 1923              		@ args = 12, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL222:
 1926 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 49


 1927              	.LCFI40:
 1928              		.cfi_def_cfa_offset 24
 1929              		.cfi_offset 3, -24
 1930              		.cfi_offset 4, -20
 1931              		.cfi_offset 5, -16
 1932              		.cfi_offset 6, -12
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 0446     		mov	r4, r0
 1936 0004 0E46     		mov	r6, r1
 1937 0006 1746     		mov	r7, r2
 1938 0008 1D46     		mov	r5, r3
 365:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op = ALP_OP_WRITE_FILE_DATA | (resp << 6) | (group << 7);
 1939              		.loc 1 365 0
 1940 000a 9DF81C10 		ldrb	r1, [sp, #28]	@ zero_extendqisi2
 1941              	.LVL223:
 1942 000e 8901     		lsls	r1, r1, #6
 1943 0010 41F00401 		orr	r1, r1, #4
 1944 0014 49B2     		sxtb	r1, r1
 1945 0016 9DF82030 		ldrb	r3, [sp, #32]	@ zero_extendqisi2
 1946              	.LVL224:
 1947 001a 41EAC311 		orr	r1, r1, r3, lsl #7
 1948              	.LVL225:
 366:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 1949              		.loc 1 366 0
 1950 001e 01F0C401 		and	r1, r1, #196
 1951              	.LVL226:
 1952 0022 FFF7FEFF 		bl	fifo_put_byte
 1953              	.LVL227:
 1954 0026 78B9     		cbnz	r0, .L185
 367:../../shields/Murata-dualstack/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
 1955              		.loc 1 367 0
 1956 0028 3A46     		mov	r2, r7
 1957 002a 3146     		mov	r1, r6
 1958 002c 2046     		mov	r0, r4
 1959 002e FFF7FEFF 		bl	alp_append_file_offset_operand
 1960              	.LVL228:
 368:../../shields/Murata-dualstack/src/alp.c ****   alp_append_length_operand(fifo, length);
 1961              		.loc 1 368 0
 1962 0032 2946     		mov	r1, r5
 1963 0034 2046     		mov	r0, r4
 1964 0036 FFF7FEFF 		bl	alp_append_length_operand
 1965              	.LVL229:
 369:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 1966              		.loc 1 369 0
 1967 003a AAB2     		uxth	r2, r5
 1968 003c 0699     		ldr	r1, [sp, #24]
 1969 003e 2046     		mov	r0, r4
 1970 0040 FFF7FEFF 		bl	fifo_put
 1971              	.LVL230:
 1972 0044 38B9     		cbnz	r0, .L186
 370:../../shields/Murata-dualstack/src/alp.c **** }
 1973              		.loc 1 370 0
 1974 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1975              	.LVL231:
 1976              	.L185:
 366:../../shields/Murata-dualstack/src/alp.c ****   alp_append_file_offset_operand(fifo, file_id, offset);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 50


 1977              		.loc 1 366 0 discriminator 1
 1978 0048 064B     		ldr	r3, .L187
 1979 004a 074A     		ldr	r2, .L187+4
 1980 004c 4FF4B771 		mov	r1, #366
 1981 0050 0648     		ldr	r0, .L187+8
 1982 0052 FFF7FEFF 		bl	__assert_func
 1983              	.LVL232:
 1984              	.L186:
 369:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, data, length) == oss7SUCCESS);
 1985              		.loc 1 369 0 discriminator 1
 1986 0056 064B     		ldr	r3, .L187+12
 1987 0058 034A     		ldr	r2, .L187+4
 1988 005a 40F27111 		movw	r1, #369
 1989 005e 0348     		ldr	r0, .L187+8
 1990 0060 FFF7FEFF 		bl	__assert_func
 1991              	.LVL233:
 1992              	.L188:
 1993              		.align	2
 1994              	.L187:
 1995 0064 00000000 		.word	.LC39
 1996 0068 00000000 		.word	.LANCHOR14
 1997 006c 40000000 		.word	.LC1
 1998 0070 3C000000 		.word	.LC37
 1999              		.cfi_endproc
 2000              	.LFE21:
 2002              		.section	.text.alp_append_create_new_file_data_action,"ax",%progbits
 2003              		.align	1
 2004              		.global	alp_append_create_new_file_data_action
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	alp_append_create_new_file_data_action:
 2011              	.LFB22:
 371:../../shields/Murata-dualstack/src/alp.c **** 
 372:../../shields/Murata-dualstack/src/alp.c **** void alp_append_create_new_file_data_action(fifo_t* fifo, uint8_t file_id, uint32_t length, fs_stor
 2012              		.loc 1 372 0
 2013              		.cfi_startproc
 2014              		@ args = 8, pretend = 0, frame = 16
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              	.LVL234:
 2017 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2018              	.LCFI41:
 2019              		.cfi_def_cfa_offset 20
 2020              		.cfi_offset 4, -20
 2021              		.cfi_offset 5, -16
 2022              		.cfi_offset 6, -12
 2023              		.cfi_offset 7, -8
 2024              		.cfi_offset 14, -4
 2025 0002 85B0     		sub	sp, sp, #20
 2026              	.LCFI42:
 2027              		.cfi_def_cfa_offset 40
 2028 0004 0546     		mov	r5, r0
 2029 0006 0F46     		mov	r7, r1
 2030 0008 1446     		mov	r4, r2
 2031 000a 1E46     		mov	r6, r3
 373:../../shields/Murata-dualstack/src/alp.c ****   uint8_t op = ALP_OP_CREATE_FILE | (resp << 6) | (group << 7);
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 51


 2032              		.loc 1 373 0
 2033 000c 9DF82810 		ldrb	r1, [sp, #40]	@ zero_extendqisi2
 2034              	.LVL235:
 2035 0010 8901     		lsls	r1, r1, #6
 2036 0012 41F01101 		orr	r1, r1, #17
 2037 0016 49B2     		sxtb	r1, r1
 2038 0018 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 2039              	.LVL236:
 2040 001c 41EAC311 		orr	r1, r1, r3, lsl #7
 2041              	.LVL237:
 374:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put_byte(fifo, op) == oss7SUCCESS);
 2042              		.loc 1 374 0
 2043 0020 01F0D101 		and	r1, r1, #209
 2044              	.LVL238:
 2045 0024 FFF7FEFF 		bl	fifo_put_byte
 2046              	.LVL239:
 2047 0028 B0B9     		cbnz	r0, .L193
 375:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_header_t header = {
 2048              		.loc 1 375 0
 2049 002a 0023     		movs	r3, #0
 2050 002c 0093     		str	r3, [sp]
 2051 002e 8DF80430 		strb	r3, [sp, #4]
 2052 0032 8DF80070 		strb	r7, [sp]
 2053 0036 66F30103 		bfi	r3, r6, #0, #2
 2054 003a 8DF80230 		strb	r3, [sp, #2]
 376:../../shields/Murata-dualstack/src/alp.c ****     .file_id = file_id,
 377:../../shields/Murata-dualstack/src/alp.c ****     .file_header = {
 378:../../shields/Murata-dualstack/src/alp.c ****       .file_permissions = 0,
 379:../../shields/Murata-dualstack/src/alp.c ****       .file_properties.action_protocol_enabled = 0,
 380:../../shields/Murata-dualstack/src/alp.c ****       .file_properties.storage_class = storage_class,
 381:../../shields/Murata-dualstack/src/alp.c ****       .length = __builtin_bswap32(length),
 2055              		.loc 1 381 0
 2056 003e 24BA     		rev	r4, r4
 2057              	.LVL240:
 375:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_header_t header = {
 2058              		.loc 1 375 0
 2059 0040 CDF80540 		str	r4, [sp, #5]	@ unaligned
 2060 0044 CDF80940 		str	r4, [sp, #9]	@ unaligned
 382:../../shields/Murata-dualstack/src/alp.c ****       .allocated_length = __builtin_bswap32(length)
 383:../../shields/Murata-dualstack/src/alp.c ****     }
 384:../../shields/Murata-dualstack/src/alp.c ****   };
 385:../../shields/Murata-dualstack/src/alp.c ****   assert(fifo_put(fifo, (uint8_t*)&header, sizeof(alp_operand_file_header_t)) == oss7SUCCESS);
 2061              		.loc 1 385 0
 2062 0048 0D22     		movs	r2, #13
 2063 004a 6946     		mov	r1, sp
 2064 004c 2846     		mov	r0, r5
 2065 004e FFF7FEFF 		bl	fifo_put
 2066              	.LVL241:
 2067 0052 40B9     		cbnz	r0, .L194
 386:../../shields/Murata-dualstack/src/alp.c **** }
 2068              		.loc 1 386 0
 2069 0054 05B0     		add	sp, sp, #20
 2070              	.LCFI43:
 2071              		.cfi_remember_state
 2072              		.cfi_def_cfa_offset 20
 2073              		@ sp needed
 2074 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 52


 2075              	.LVL242:
 2076              	.L193:
 2077              	.LCFI44:
 2078              		.cfi_restore_state
 374:../../shields/Murata-dualstack/src/alp.c ****   alp_operand_file_header_t header = {
 2079              		.loc 1 374 0 discriminator 1
 2080 0058 064B     		ldr	r3, .L195
 2081 005a 074A     		ldr	r2, .L195+4
 2082 005c 4FF4BB71 		mov	r1, #374
 2083 0060 0648     		ldr	r0, .L195+8
 2084 0062 FFF7FEFF 		bl	__assert_func
 2085              	.LVL243:
 2086              	.L194:
 385:../../shields/Murata-dualstack/src/alp.c **** }
 2087              		.loc 1 385 0 discriminator 1
 2088 0066 064B     		ldr	r3, .L195+12
 2089 0068 034A     		ldr	r2, .L195+4
 2090 006a 40F28111 		movw	r1, #385
 2091 006e 0348     		ldr	r0, .L195+8
 2092 0070 FFF7FEFF 		bl	__assert_func
 2093              	.LVL244:
 2094              	.L196:
 2095              		.align	2
 2096              	.L195:
 2097 0074 00000000 		.word	.LC39
 2098 0078 00000000 		.word	.LANCHOR15
 2099 007c 40000000 		.word	.LC1
 2100 0080 00000000 		.word	.LC41
 2101              		.cfi_endproc
 2102              	.LFE22:
 2104              		.section	.text.alp_length_operand_coded_length,"ax",%progbits
 2105              		.align	1
 2106              		.global	alp_length_operand_coded_length
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2110              		.fpu fpv4-sp-d16
 2112              	alp_length_operand_coded_length:
 2113              	.LFB23:
 387:../../shields/Murata-dualstack/src/alp.c **** 
 388:../../shields/Murata-dualstack/src/alp.c **** uint8_t alp_length_operand_coded_length(uint32_t length) {
 2114              		.loc 1 388 0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 2118              		@ link register save eliminated.
 2119              	.LVL245:
 2120 0000 0346     		mov	r3, r0
 2121              	.LVL246:
 389:../../shields/Murata-dualstack/src/alp.c ****   uint8_t coded_len = 1;
 390:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3F)
 2122              		.loc 1 390 0
 2123 0002 3F28     		cmp	r0, #63
 2124 0004 08D8     		bhi	.L201
 389:../../shields/Murata-dualstack/src/alp.c ****   uint8_t coded_len = 1;
 2125              		.loc 1 389 0
 2126 0006 0120     		movs	r0, #1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 53


 2127              	.LVL247:
 2128              	.L198:
 391:../../shields/Murata-dualstack/src/alp.c ****     coded_len = 2;
 392:../../shields/Murata-dualstack/src/alp.c **** 
 393:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFF)
 2129              		.loc 1 393 0
 2130 0008 B3F5804F 		cmp	r3, #16384
 2131 000c 00D3     		bcc	.L199
 394:../../shields/Murata-dualstack/src/alp.c ****     coded_len = 3;
 2132              		.loc 1 394 0
 2133 000e 0320     		movs	r0, #3
 2134              	.LVL248:
 2135              	.L199:
 395:../../shields/Murata-dualstack/src/alp.c **** 
 396:../../shields/Murata-dualstack/src/alp.c ****   if(length > 0x3FFFFF)
 2136              		.loc 1 396 0
 2137 0010 B3F5800F 		cmp	r3, #4194304
 2138 0014 02D2     		bcs	.L204
 2139              	.LVL249:
 2140              	.L200:
 397:../../shields/Murata-dualstack/src/alp.c ****     coded_len = 4;
 398:../../shields/Murata-dualstack/src/alp.c **** 
 399:../../shields/Murata-dualstack/src/alp.c ****   return coded_len;
 400:../../shields/Murata-dualstack/src/alp.c **** }
 2141              		.loc 1 400 0
 2142 0016 7047     		bx	lr
 2143              	.LVL250:
 2144              	.L201:
 391:../../shields/Murata-dualstack/src/alp.c **** 
 2145              		.loc 1 391 0
 2146 0018 0220     		movs	r0, #2
 2147              	.LVL251:
 2148 001a F5E7     		b	.L198
 2149              	.LVL252:
 2150              	.L204:
 397:../../shields/Murata-dualstack/src/alp.c ****     coded_len = 4;
 2151              		.loc 1 397 0
 2152 001c 0420     		movs	r0, #4
 2153              	.LVL253:
 2154 001e FAE7     		b	.L200
 2155              		.cfi_endproc
 2156              	.LFE23:
 2158              		.section	.text.alp_get_expected_response_length,"ax",%progbits
 2159              		.align	1
 2160              		.global	alp_get_expected_response_length
 2161              		.syntax unified
 2162              		.thumb
 2163              		.thumb_func
 2164              		.fpu fpv4-sp-d16
 2166              	alp_get_expected_response_length:
 2167              	.LFB18:
 298:../../shields/Murata-dualstack/src/alp.c ****   uint8_t expected_response_length = 0;
 2168              		.loc 1 298 0
 2169              		.cfi_startproc
 2170              		@ args = 0, pretend = 0, frame = 24
 2171              		@ frame_needed = 0, uses_anonymous_args = 0
 2172              	.LVL254:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 54


 2173 0000 30B5     		push	{r4, r5, lr}
 2174              	.LCFI45:
 2175              		.cfi_def_cfa_offset 12
 2176              		.cfi_offset 4, -12
 2177              		.cfi_offset 5, -8
 2178              		.cfi_offset 14, -4
 2179 0002 87B0     		sub	sp, sp, #28
 2180              	.LCFI46:
 2181              		.cfi_def_cfa_offset 40
 2182              	.LVL255:
 301:../../shields/Murata-dualstack/src/alp.c **** 
 2183              		.loc 1 301 0
 2184 0004 0A46     		mov	r2, r1
 2185 0006 4B1C     		adds	r3, r1, #1
 2186 0008 0146     		mov	r1, r0
 2187              	.LVL256:
 2188 000a 02A8     		add	r0, sp, #8
 2189              	.LVL257:
 2190 000c FFF7FEFF 		bl	fifo_init_filled
 2191              	.LVL258:
 299:../../shields/Murata-dualstack/src/alp.c ****   fifo_t fifo;
 2192              		.loc 1 299 0
 2193 0010 0024     		movs	r4, #0
 303:../../shields/Murata-dualstack/src/alp.c ****     alp_control_t control;
 2194              		.loc 1 303 0
 2195 0012 19E0     		b	.L206
 2196              	.LVL259:
 2197              	.L208:
 2198              	.LBB31:
 2199              	.LBB32:
 308:../../shields/Murata-dualstack/src/alp.c ****         uint32_t offset = alp_parse_length_operand(&fifo); // offset
 2200              		.loc 1 308 0
 2201 0014 0121     		movs	r1, #1
 2202 0016 02A8     		add	r0, sp, #8
 2203 0018 FFF7FEFF 		bl	fifo_skip
 2204              	.LVL260:
 309:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_parse_length_operand(&fifo); // the file length
 2205              		.loc 1 309 0
 2206 001c 02A8     		add	r0, sp, #8
 2207 001e FFF7FEFF 		bl	alp_parse_length_operand
 2208              	.LVL261:
 2209 0022 0546     		mov	r5, r0
 2210              	.LVL262:
 310:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(expected_response_length); // t
 2211              		.loc 1 310 0
 2212 0024 02A8     		add	r0, sp, #8
 2213              	.LVL263:
 2214 0026 FFF7FEFF 		bl	alp_parse_length_operand
 2215              	.LVL264:
 2216 002a 0444     		add	r4, r4, r0
 2217              	.LVL265:
 2218 002c E4B2     		uxtb	r4, r4
 2219              	.LVL266:
 311:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += alp_length_operand_coded_length(offset) + 1; // the length of t
 2220              		.loc 1 311 0
 2221 002e 2046     		mov	r0, r4
 2222 0030 FFF7FEFF 		bl	alp_length_operand_coded_length
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 55


 2223              	.LVL267:
 2224 0034 0444     		add	r4, r4, r0
 2225              	.LVL268:
 2226 0036 E4B2     		uxtb	r4, r4
 2227              	.LVL269:
 312:../../shields/Murata-dualstack/src/alp.c ****         expected_response_length += 1; // the opcode
 2228              		.loc 1 312 0
 2229 0038 2846     		mov	r0, r5
 2230 003a FFF7FEFF 		bl	alp_length_operand_coded_length
 2231              	.LVL270:
 2232 003e 0130     		adds	r0, r0, #1
 2233 0040 0444     		add	r4, r4, r0
 2234              	.LVL271:
 2235 0042 E4B2     		uxtb	r4, r4
 2236              	.LVL272:
 313:../../shields/Murata-dualstack/src/alp.c ****         break;
 2237              		.loc 1 313 0
 2238 0044 0134     		adds	r4, r4, #1
 2239              	.LVL273:
 2240 0046 E4B2     		uxtb	r4, r4
 2241              	.LVL274:
 2242              	.L206:
 2243              	.LBE32:
 2244              	.LBE31:
 303:../../shields/Murata-dualstack/src/alp.c ****     alp_control_t control;
 2245              		.loc 1 303 0
 2246 0048 02A8     		add	r0, sp, #8
 2247 004a FFF7FEFF 		bl	fifo_get_size
 2248              	.LVL275:
 2249 004e 0028     		cmp	r0, #0
 2250 0050 00F0C980 		beq	.L224
 2251              	.LBB39:
 305:../../shields/Murata-dualstack/src/alp.c ****     switch(control.operation) {
 2252              		.loc 1 305 0
 2253 0054 0122     		movs	r2, #1
 2254 0056 6946     		mov	r1, sp
 2255 0058 02A8     		add	r0, sp, #8
 2256 005a FFF7FEFF 		bl	fifo_pop
 2257              	.LVL276:
 306:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_READ_FILE_DATA:
 2258              		.loc 1 306 0
 2259 005e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 2260 0062 03F03F03 		and	r3, r3, #63
 2261 0066 013B     		subs	r3, r3, #1
 2262 0068 332B     		cmp	r3, #51
 2263 006a 00F2B580 		bhi	.L207
 2264 006e 01A2     		adr	r2, .L209
 2265 0070 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2266              		.p2align 2
 2267              	.L209:
 2268 0074 15000000 		.word	.L208+1
 2269 0078 D9010000 		.word	.L207+1
 2270 007c D9010000 		.word	.L207+1
 2271 0080 4F010000 		.word	.L210+1
 2272 0084 D9010000 		.word	.L207+1
 2273 0088 CF010000 		.word	.L211+1
 2274 008c D9010000 		.word	.L207+1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 56


 2275 0090 D9010000 		.word	.L207+1
 2276 0094 D9010000 		.word	.L207+1
 2277 0098 D9010000 		.word	.L207+1
 2278 009c D9010000 		.word	.L207+1
 2279 00a0 D9010000 		.word	.L207+1
 2280 00a4 D9010000 		.word	.L207+1
 2281 00a8 D9010000 		.word	.L207+1
 2282 00ac D9010000 		.word	.L207+1
 2283 00b0 D9010000 		.word	.L207+1
 2284 00b4 D9010000 		.word	.L207+1
 2285 00b8 D9010000 		.word	.L207+1
 2286 00bc D9010000 		.word	.L207+1
 2287 00c0 D9010000 		.word	.L207+1
 2288 00c4 D9010000 		.word	.L207+1
 2289 00c8 D9010000 		.word	.L207+1
 2290 00cc D9010000 		.word	.L207+1
 2291 00d0 D9010000 		.word	.L207+1
 2292 00d4 D9010000 		.word	.L207+1
 2293 00d8 D9010000 		.word	.L207+1
 2294 00dc D9010000 		.word	.L207+1
 2295 00e0 D9010000 		.word	.L207+1
 2296 00e4 D9010000 		.word	.L207+1
 2297 00e8 D9010000 		.word	.L207+1
 2298 00ec D9010000 		.word	.L207+1
 2299 00f0 4F010000 		.word	.L210+1
 2300 00f4 D9010000 		.word	.L207+1
 2301 00f8 D9010000 		.word	.L207+1
 2302 00fc D9010000 		.word	.L207+1
 2303 0100 D9010000 		.word	.L207+1
 2304 0104 D9010000 		.word	.L207+1
 2305 0108 D9010000 		.word	.L207+1
 2306 010c D9010000 		.word	.L207+1
 2307 0110 D9010000 		.word	.L207+1
 2308 0114 D9010000 		.word	.L207+1
 2309 0118 D9010000 		.word	.L207+1
 2310 011c D9010000 		.word	.L207+1
 2311 0120 D9010000 		.word	.L207+1
 2312 0124 D9010000 		.word	.L207+1
 2313 0128 D9010000 		.word	.L207+1
 2314 012c D9010000 		.word	.L207+1
 2315 0130 D9010000 		.word	.L207+1
 2316 0134 D9010000 		.word	.L207+1
 2317 0138 6D010000 		.word	.L212+1
 2318 013c D9010000 		.word	.L207+1
 2319 0140 45010000 		.word	.L213+1
 2320              		.p2align 1
 2321              	.L213:
 2322              	.LBB38:
 316:../../shields/Murata-dualstack/src/alp.c ****         break;
 2323              		.loc 1 316 0
 2324 0144 0121     		movs	r1, #1
 2325 0146 02A8     		add	r0, sp, #8
 2326 0148 FFF7FEFF 		bl	fifo_skip
 2327              	.LVL277:
 317:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_RETURN_FILE_DATA:
 2328              		.loc 1 317 0
 2329 014c 7CE7     		b	.L206
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 57


 2330              	.L210:
 320:../../shields/Murata-dualstack/src/alp.c ****         alp_parse_length_operand(&fifo); // offset
 2331              		.loc 1 320 0
 2332 014e 0121     		movs	r1, #1
 2333 0150 02A8     		add	r0, sp, #8
 2334 0152 FFF7FEFF 		bl	fifo_skip
 2335              	.LVL278:
 321:../../shields/Murata-dualstack/src/alp.c ****         fifo_skip(&fifo, alp_parse_length_operand(&fifo));
 2336              		.loc 1 321 0
 2337 0156 02A8     		add	r0, sp, #8
 2338 0158 FFF7FEFF 		bl	alp_parse_length_operand
 2339              	.LVL279:
 322:../../shields/Murata-dualstack/src/alp.c ****         break;
 2340              		.loc 1 322 0
 2341 015c 02A8     		add	r0, sp, #8
 2342 015e FFF7FEFF 		bl	alp_parse_length_operand
 2343              	.LVL280:
 2344 0162 81B2     		uxth	r1, r0
 2345 0164 02A8     		add	r0, sp, #8
 2346 0166 FFF7FEFF 		bl	fifo_skip
 2347              	.LVL281:
 323:../../shields/Murata-dualstack/src/alp.c ****       case ALP_OP_FORWARD: ;
 2348              		.loc 1 323 0
 2349 016a 6DE7     		b	.L206
 2350              	.L212:
 326:../../shields/Murata-dualstack/src/alp.c ****         if(itf_id == ALP_ITF_ID_D7ASP) {
 2351              		.loc 1 326 0
 2352 016c 0122     		movs	r2, #1
 2353 016e 0DF10701 		add	r1, sp, #7
 2354 0172 02A8     		add	r0, sp, #8
 2355 0174 FFF7FEFF 		bl	fifo_pop
 2356              	.LVL282:
 327:../../shields/Murata-dualstack/src/alp.c ****           fifo_skip(&fifo, 1); // skip QoS, dormant timeout
 2357              		.loc 1 327 0
 2358 0178 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 2359 017c D72B     		cmp	r3, #215
 2360 017e 7FF463AF 		bne	.L206
 2361              	.LBB33:
 328:../../shields/Murata-dualstack/src/alp.c ****           d7ap_addressee_ctrl_t addressee_ctrl;
 2362              		.loc 1 328 0
 2363 0182 0121     		movs	r1, #1
 2364 0184 02A8     		add	r0, sp, #8
 2365 0186 FFF7FEFF 		bl	fifo_skip
 2366              	.LVL283:
 330:../../shields/Murata-dualstack/src/alp.c ****           fifo_skip(&fifo, 2 + d7ap_addressee_id_length(addressee_ctrl.id_type)); // skip addressee
 2367              		.loc 1 330 0
 2368 018a 0122     		movs	r2, #1
 2369 018c 01A9     		add	r1, sp, #4
 2370 018e 02A8     		add	r0, sp, #8
 2371 0190 FFF7FEFF 		bl	fifo_pop
 2372              	.LVL284:
 331:../../shields/Murata-dualstack/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 2373              		.loc 1 331 0
 2374 0194 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 2375 0198 C3F30113 		ubfx	r3, r3, #4, #2
 2376              	.LVL285:
 2377              	.LBB34:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 58


 2378              	.LBB35:
 291:../../shields/Murata-dualstack/inc/d7ap.h ****   {
 2379              		.loc 2 291 0
 2380 019c 032B     		cmp	r3, #3
 2381 019e 0BD8     		bhi	.L215
 2382 01a0 DFE803F0 		tbb	[pc, r3]
 2383              	.L217:
 2384 01a4 13       		.byte	(.L222-.L217)/2
 2385 01a5 11       		.byte	(.L218-.L217)/2
 2386 01a6 02       		.byte	(.L219-.L217)/2
 2387 01a7 08       		.byte	(.L220-.L217)/2
 2388              		.p2align 1
 2389              	.L219:
 298:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_VID:
 2390              		.loc 2 298 0
 2391 01a8 0821     		movs	r1, #8
 2392              	.L216:
 2393              	.LVL286:
 2394              	.LBE35:
 2395              	.LBE34:
 331:../../shields/Murata-dualstack/src/alp.c ****           // TODO refactor to reuse same logic for parsing and response length counting
 2396              		.loc 1 331 0
 2397 01aa 0231     		adds	r1, r1, #2
 2398 01ac 02A8     		add	r0, sp, #8
 2399 01ae FFF7FEFF 		bl	fifo_skip
 2400              	.LVL287:
 2401 01b2 49E7     		b	.L206
 2402              	.LVL288:
 2403              	.L220:
 2404              	.LBB37:
 2405              	.LBB36:
 300:../../shields/Murata-dualstack/inc/d7ap.h ****       default:
 2406              		.loc 2 300 0
 2407 01b4 0221     		movs	r1, #2
 2408 01b6 F8E7     		b	.L216
 2409              	.L215:
 2410              		.loc 2 302 0
 2411 01b8 0C4B     		ldr	r3, .L225
 2412 01ba 0D4A     		ldr	r2, .L225+4
 2413 01bc 4FF49771 		mov	r1, #302
 2414 01c0 0C48     		ldr	r0, .L225+8
 2415 01c2 FFF7FEFF 		bl	__assert_func
 2416              	.LVL289:
 2417              	.L218:
 294:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_NBID:
 2418              		.loc 2 294 0
 2419 01c6 0021     		movs	r1, #0
 2420 01c8 EFE7     		b	.L216
 2421              	.L222:
 296:../../shields/Murata-dualstack/inc/d7ap.h ****       case ID_TYPE_UID:
 2422              		.loc 2 296 0
 2423 01ca 0121     		movs	r1, #1
 2424 01cc EDE7     		b	.L216
 2425              	.LVL290:
 2426              	.L211:
 2427              	.LBE36:
 2428              	.LBE37:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 59


 2429              	.LBE33:
 337:../../shields/Murata-dualstack/src/alp.c ****         break;
 2430              		.loc 1 337 0
 2431 01ce 0D21     		movs	r1, #13
 2432 01d0 02A8     		add	r0, sp, #8
 2433 01d2 FFF7FEFF 		bl	fifo_skip
 2434              	.LVL291:
 338:../../shields/Murata-dualstack/src/alp.c ****       // TODO other operations
 2435              		.loc 1 338 0
 2436 01d6 37E7     		b	.L206
 2437              	.L207:
 342:../../shields/Murata-dualstack/src/alp.c ****     }
 2438              		.loc 1 342 0
 2439 01d8 044B     		ldr	r3, .L225
 2440 01da 074A     		ldr	r2, .L225+12
 2441 01dc 4FF4AB71 		mov	r1, #342
 2442 01e0 0648     		ldr	r0, .L225+16
 2443 01e2 FFF7FEFF 		bl	__assert_func
 2444              	.LVL292:
 2445              	.L224:
 2446              	.LBE38:
 2447              	.LBE39:
 348:../../shields/Murata-dualstack/src/alp.c **** 
 2448              		.loc 1 348 0
 2449 01e6 2046     		mov	r0, r4
 2450 01e8 07B0     		add	sp, sp, #28
 2451              	.LCFI47:
 2452              		.cfi_def_cfa_offset 12
 2453              		@ sp needed
 2454 01ea 30BD     		pop	{r4, r5, pc}
 2455              	.LVL293:
 2456              	.L226:
 2457              		.align	2
 2458              	.L225:
 2459 01ec 38000000 		.word	.LC4
 2460 01f0 00000000 		.word	.LANCHOR2
 2461 01f4 40000000 		.word	.LC5
 2462 01f8 00000000 		.word	.LANCHOR16
 2463 01fc 40000000 		.word	.LC1
 2464              		.cfi_endproc
 2465              	.LFE18:
 2467              		.section	.rodata.__func__.6200,"a",%progbits
 2468              		.align	2
 2469              		.set	.LANCHOR2,. + 0
 2472              	__func__.6200:
 2473 0000 64376170 		.ascii	"d7ap_addressee_id_length\000"
 2473      5F616464 
 2473      72657373 
 2473      65655F69 
 2473      645F6C65 
 2474              		.section	.rodata.__func__.6732,"a",%progbits
 2475              		.align	2
 2476              		.set	.LANCHOR3,. + 0
 2479              	__func__.6732:
 2480 0000 616C705F 		.ascii	"alp_append_length_operand\000"
 2480      61707065 
 2480      6E645F6C 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 60


 2480      656E6774 
 2480      685F6F70 
 2481              		.section	.rodata.__func__.6742,"a",%progbits
 2482              		.align	2
 2483              		.set	.LANCHOR4,. + 0
 2486              	__func__.6742:
 2487 0000 616C705F 		.ascii	"alp_parse_file_offset_operand\000"
 2487      70617273 
 2487      655F6669 
 2487      6C655F6F 
 2487      66667365 
 2488              		.section	.rodata.__func__.6748,"a",%progbits
 2489              		.align	2
 2490              		.set	.LANCHOR6,. + 0
 2493              	__func__.6748:
 2494 0000 616C705F 		.ascii	"alp_parse_file_header_operand\000"
 2494      70617273 
 2494      655F6669 
 2494      6C655F68 
 2494      65616465 
 2495              		.section	.rodata.__func__.6754,"a",%progbits
 2496              		.align	2
 2497              		.set	.LANCHOR7,. + 0
 2500              	__func__.6754:
 2501 0000 616C705F 		.ascii	"alp_append_file_offset_operand\000"
 2501      61707065 
 2501      6E645F66 
 2501      696C655F 
 2501      6F666673 
 2502              		.section	.rodata.__func__.6762,"a",%progbits
 2503              		.align	2
 2504              		.set	.LANCHOR8,. + 0
 2507              	__func__.6762:
 2508 0000 616C705F 		.ascii	"alp_append_indirect_forward_action\000"
 2508      61707065 
 2508      6E645F69 
 2508      6E646972 
 2508      6563745F 
 2509              		.section	.rodata.__func__.6769,"a",%progbits
 2510              		.align	2
 2511              		.set	.LANCHOR9,. + 0
 2514              	__func__.6769:
 2515 0000 616C705F 		.ascii	"alp_append_forward_action\000"
 2515      61707065 
 2515      6E645F66 
 2515      6F727761 
 2515      72645F61 
 2516              		.section	.rodata.__func__.6782,"a",%progbits
 2517              		.align	2
 2518              		.set	.LANCHOR10,. + 0
 2521              	__func__.6782:
 2522 0000 616C705F 		.ascii	"alp_append_return_file_data_action\000"
 2522      61707065 
 2522      6E645F72 
 2522      65747572 
 2522      6E5F6669 
 2523              		.section	.rodata.__func__.6804,"a",%progbits
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 61


 2524              		.align	2
 2525              		.set	.LANCHOR5,. + 0
 2528              	__func__.6804:
 2529 0000 70617273 		.ascii	"parse_operand_file_data\000"
 2529      655F6F70 
 2529      6572616E 
 2529      645F6669 
 2529      6C655F64 
 2530              		.section	.rodata.__func__.6819,"a",%progbits
 2531              		.align	2
 2532              		.set	.LANCHOR0,. + 0
 2535              	__func__.6819:
 2536 0000 70617273 		.ascii	"parse_op_return_tag\000"
 2536      655F6F70 
 2536      5F726574 
 2536      75726E5F 
 2536      74616700 
 2537              		.section	.rodata.__func__.6826,"a",%progbits
 2538              		.align	2
 2539              		.set	.LANCHOR1,. + 0
 2542              	__func__.6826:
 2543 0000 70617273 		.ascii	"parse_op_return_status\000"
 2543      655F6F70 
 2543      5F726574 
 2543      75726E5F 
 2543      73746174 
 2544              		.section	.rodata.__func__.6836,"a",%progbits
 2545              		.align	2
 2546              		.set	.LANCHOR11,. + 0
 2549              	__func__.6836:
 2550 0000 616C705F 		.ascii	"alp_parse_action\000"
 2550      70617273 
 2550      655F6163 
 2550      74696F6E 
 2550      00
 2551              		.section	.rodata.__func__.6863,"a",%progbits
 2552              		.align	2
 2553              		.set	.LANCHOR16,. + 0
 2556              	__func__.6863:
 2557 0000 616C705F 		.ascii	"alp_get_expected_response_length\000"
 2557      6765745F 
 2557      65787065 
 2557      63746564 
 2557      5F726573 
 2558              		.section	.rodata.__func__.6873,"a",%progbits
 2559              		.align	2
 2560              		.set	.LANCHOR12,. + 0
 2563              	__func__.6873:
 2564 0000 616C705F 		.ascii	"alp_append_tag_request_action\000"
 2564      61707065 
 2564      6E645F74 
 2564      61675F72 
 2564      65717565 
 2565              		.section	.rodata.__func__.6883,"a",%progbits
 2566              		.align	2
 2567              		.set	.LANCHOR13,. + 0
 2570              	__func__.6883:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 62


 2571 0000 616C705F 		.ascii	"alp_append_read_file_data_action\000"
 2571      61707065 
 2571      6E645F72 
 2571      6561645F 
 2571      66696C65 
 2572              		.section	.rodata.__func__.6894,"a",%progbits
 2573              		.align	2
 2574              		.set	.LANCHOR14,. + 0
 2577              	__func__.6894:
 2578 0000 616C705F 		.ascii	"alp_append_write_file_data_action\000"
 2578      61707065 
 2578      6E645F77 
 2578      72697465 
 2578      5F66696C 
 2579              		.section	.rodata.__func__.6904,"a",%progbits
 2580              		.align	2
 2581              		.set	.LANCHOR15,. + 0
 2584              	__func__.6904:
 2585 0000 616C705F 		.ascii	"alp_append_create_new_file_data_action\000"
 2585      61707065 
 2585      6E645F63 
 2585      72656174 
 2585      655F6E65 
 2586              		.section	.rodata.alp_append_create_new_file_data_action.str1.4,"aMS",%progbits,1
 2587              		.align	2
 2588              	.LC41:
 2589 0000 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&header, sizeof(alp_operan"
 2589      5F707574 
 2589      28666966 
 2589      6F2C2028 
 2589      75696E74 
 2590 0033 645F6669 		.ascii	"d_file_header_t)) == oss7SUCCESS\000"
 2590      6C655F68 
 2590      65616465 
 2590      725F7429 
 2590      29203D3D 
 2591              		.section	.rodata.alp_append_file_offset_operand.str1.4,"aMS",%progbits,1
 2592              		.align	2
 2593              	.LC12:
 2594 0000 6669666F 		.ascii	"fifo_put_byte(fifo, file_id) == oss7SUCCESS\000"
 2594      5F707574 
 2594      5F627974 
 2594      65286669 
 2594      666F2C20 
 2595              		.section	.rodata.alp_append_forward_action.str1.4,"aMS",%progbits,1
 2596              		.align	2
 2597              	.LC15:
 2598 0000 636F6E66 		.ascii	"config!=NULL\000"
 2598      6967213D 
 2598      4E554C4C 
 2598      00
 2599 000d 000000   		.space	3
 2600              	.LC16:
 2601 0010 6669666F 		.ascii	"fifo_put_byte(fifo, ALP_OP_FORWARD) == oss7SUCCESS\000"
 2601      5F707574 
 2601      5F627974 
 2601      65286669 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 63


 2601      666F2C20 
 2602 0043 00       		.space	1
 2603              	.LC17:
 2604 0044 6669666F 		.ascii	"fifo_put_byte(fifo, itf_id) == oss7SUCCESS\000"
 2604      5F707574 
 2604      5F627974 
 2604      65286669 
 2604      666F2C20 
 2605 006f 00       		.space	1
 2606              	.LC18:
 2607 0070 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2607      5F707574 
 2607      5F627974 
 2607      65286669 
 2607      666F2C20 
 2608 00a3 292D3E71 		.ascii	")->qos.raw) == oss7SUCCESS\000"
 2608      6F732E72 
 2608      61772920 
 2608      3D3D206F 
 2608      73733753 
 2609 00be 0000     		.space	2
 2610              	.LC19:
 2611 00c0 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2611      5F707574 
 2611      5F627974 
 2611      65286669 
 2611      666F2C20 
 2612 00f3 292D3E64 		.ascii	")->dormant_timeout) == oss7SUCCESS\000"
 2612      6F726D61 
 2612      6E745F74 
 2612      696D656F 
 2612      75742920 
 2613 0116 0000     		.space	2
 2614              	.LC20:
 2615 0118 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2615      5F707574 
 2615      5F627974 
 2615      65286669 
 2615      666F2C20 
 2616 014b 292D3E61 		.ascii	")->addressee.ctrl.raw) == oss7SUCCESS\000"
 2616      64647265 
 2616      73736565 
 2616      2E637472 
 2616      6C2E7261 
 2617 0171 000000   		.space	3
 2618              	.LC21:
 2619 0174 6669666F 		.ascii	"fifo_put_byte(fifo, ((d7ap_session_config_t*)config"
 2619      5F707574 
 2619      5F627974 
 2619      65286669 
 2619      666F2C20 
 2620 01a7 292D3E61 		.ascii	")->addressee.access_class) == oss7SUCCESS\000"
 2620      64647265 
 2620      73736565 
 2620      2E616363 
 2620      6573735F 
 2621 01d1 000000   		.space	3
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 64


 2622              	.LC22:
 2623 01d4 6669666F 		.ascii	"fifo_put(fifo, ((d7ap_session_config_t*)config)->ad"
 2623      5F707574 
 2623      28666966 
 2623      6F2C2028 
 2623      28643761 
 2624 0207 64726573 		.ascii	"dressee.id, id_length) == oss7SUCCESS\000"
 2624      7365652E 
 2624      69642C20 
 2624      69645F6C 
 2624      656E6774 
 2625 022d 000000   		.space	3
 2626              	.LC23:
 2627 0230 6669666F 		.ascii	"fifo_put_byte(fifo, control_byte) == oss7SUCCESS\000"
 2627      5F707574 
 2627      5F627974 
 2627      65286669 
 2627      666F2C20 
 2628 0261 000000   		.space	3
 2629              	.LC24:
 2630 0264 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_abp_t*"
 2630      5F707574 
 2630      5F627974 
 2630      65286669 
 2630      666F2C20 
 2631 0297 29636F6E 		.ascii	")config)->application_port) == oss7SUCCESS\000"
 2631      66696729 
 2631      2D3E6170 
 2631      706C6963 
 2631      6174696F 
 2632 02c2 0000     		.space	2
 2633              	.LC25:
 2634 02c4 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_abp_t*"
 2634      5F707574 
 2634      5F627974 
 2634      65286669 
 2634      666F2C20 
 2635 02f7 29636F6E 		.ascii	")config)->data_rate) == oss7SUCCESS\000"
 2635      66696729 
 2635      2D3E6461 
 2635      74615F72 
 2635      61746529 
 2636 031b 00       		.space	1
 2637              	.LC26:
 2638 031c 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_abp_t*)conf"
 2638      5F707574 
 2638      28666966 
 2638      6F2C2028 
 2638      286C6F72 
 2639 034f 6967292D 		.ascii	"ig)->nwkSKey, 16) == oss7SUCCESS\000"
 2639      3E6E776B 
 2639      534B6579 
 2639      2C203136 
 2639      29203D3D 
 2640              	.LC27:
 2641 0370 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_abp_t*)conf"
 2641      5F707574 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 65


 2641      28666966 
 2641      6F2C2028 
 2641      286C6F72 
 2642 03a3 6967292D 		.ascii	"ig)->appSKey, 16) == oss7SUCCESS\000"
 2642      3E617070 
 2642      534B6579 
 2642      2C203136 
 2642      29203D3D 
 2643              	.LC28:
 2644 03c4 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&dev_addr, 4) == oss7SUCCE"
 2644      5F707574 
 2644      28666966 
 2644      6F2C2028 
 2644      75696E74 
 2645 03f7 535300   		.ascii	"SS\000"
 2646 03fa 0000     		.space	2
 2647              	.LC29:
 2648 03fc 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&network_id, 4) == oss7SUC"
 2648      5F707574 
 2648      28666966 
 2648      6F2C2028 
 2648      75696E74 
 2649 042f 43455353 		.ascii	"CESS\000"
 2649      00
 2650              	.LC30:
 2651 0434 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_otaa_t"
 2651      5F707574 
 2651      5F627974 
 2651      65286669 
 2651      666F2C20 
 2652 0467 2A29636F 		.ascii	"*)config)->application_port) == oss7SUCCESS\000"
 2652      6E666967 
 2652      292D3E61 
 2652      70706C69 
 2652      63617469 
 2653 0493 00       		.space	1
 2654              	.LC31:
 2655 0494 6669666F 		.ascii	"fifo_put_byte(fifo, ((lorawan_session_config_otaa_t"
 2655      5F707574 
 2655      5F627974 
 2655      65286669 
 2655      666F2C20 
 2656 04c7 2A29636F 		.ascii	"*)config)->data_rate) == oss7SUCCESS\000"
 2656      6E666967 
 2656      292D3E64 
 2656      6174615F 
 2656      72617465 
 2657              	.LC32:
 2658 04ec 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2658      5F707574 
 2658      28666966 
 2658      6F2C2028 
 2658      286C6F72 
 2659 051f 66696729 		.ascii	"fig)->devEUI, 8) == oss7SUCCESS\000"
 2659      2D3E6465 
 2659      76455549 
 2659      2C203829 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 66


 2659      203D3D20 
 2660 053f 00       		.space	1
 2661              	.LC33:
 2662 0540 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2662      5F707574 
 2662      28666966 
 2662      6F2C2028 
 2662      286C6F72 
 2663 0573 66696729 		.ascii	"fig)->appEUI, 8) == oss7SUCCESS\000"
 2663      2D3E6170 
 2663      70455549 
 2663      2C203829 
 2663      203D3D20 
 2664 0593 00       		.space	1
 2665              	.LC34:
 2666 0594 6669666F 		.ascii	"fifo_put(fifo, ((lorawan_session_config_otaa_t*)con"
 2666      5F707574 
 2666      28666966 
 2666      6F2C2028 
 2666      286C6F72 
 2667 05c7 66696729 		.ascii	"fig)->appKey, 16) == oss7SUCCESS\000"
 2667      2D3E6170 
 2667      704B6579 
 2667      2C203136 
 2667      29203D3D 
 2668              	.LC35:
 2669 05e8 6669666F 		.ascii	"fifo_put(fifo, config, config_len) == oss7SUCCESS\000"
 2669      5F707574 
 2669      28666966 
 2669      6F2C2063 
 2669      6F6E6669 
 2670              		.section	.rodata.alp_append_indirect_forward_action.str1.4,"aMS",%progbits,1
 2671              		.align	2
 2672              	.LC13:
 2673 0000 6669666F 		.ascii	"fifo_put_byte(fifo, ALP_OP_INDIRECT_FORWARD | (over"
 2673      5F707574 
 2673      5F627974 
 2673      65286669 
 2673      666F2C20 
 2674 0033 6C6F6164 		.ascii	"load << 7)) == oss7SUCCESS\000"
 2674      203C3C20 
 2674      37292920 
 2674      3D3D206F 
 2674      73733753 
 2675 004e 0000     		.space	2
 2676              	.LC14:
 2677 0050 6669666F 		.ascii	"fifo_put(fifo, overload_config, overload_config_len"
 2677      5F707574 
 2677      28666966 
 2677      6F2C206F 
 2677      7665726C 
 2678 0083 29203D3D 		.ascii	") == oss7SUCCESS\000"
 2678      206F7373 
 2678      37535543 
 2678      43455353 
 2678      00
 2679              		.section	.rodata.alp_append_length_operand.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 67


 2680              		.align	2
 2681              	.LC7:
 2682 0000 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&length, 1) == oss7SUCCESS"
 2682      5F707574 
 2682      28666966 
 2682      6F2C2028 
 2682      75696E74 
 2683 0033 00       		.ascii	"\000"
 2684              	.LC8:
 2685 0034 6669666F 		.ascii	"fifo_put(fifo, &byte, 1) == oss7SUCCESS\000"
 2685      5F707574 
 2685      28666966 
 2685      6F2C2026 
 2685      62797465 
 2686              	.LC9:
 2687 005c 6669666F 		.ascii	"fifo_put(fifo, (uint8_t*)&length + size, 1) == oss7"
 2687      5F707574 
 2687      28666966 
 2687      6F2C2028 
 2687      75696E74 
 2688 008f 53554343 		.ascii	"SUCCESS\000"
 2688      45535300 
 2689              		.section	.rodata.alp_append_return_file_data_action.str1.4,"aMS",%progbits,1
 2690              		.align	2
 2691              	.LC36:
 2692 0000 6669666F 		.ascii	"fifo_put_byte(fifo, ALP_OP_RETURN_FILE_DATA) == oss"
 2692      5F707574 
 2692      5F627974 
 2692      65286669 
 2692      666F2C20 
 2693 0033 37535543 		.ascii	"7SUCCESS\000"
 2693      43455353 
 2693      00
 2694              	.LC37:
 2695 003c 6669666F 		.ascii	"fifo_put(fifo, data, length) == oss7SUCCESS\000"
 2695      5F707574 
 2695      28666966 
 2695      6F2C2064 
 2695      6174612C 
 2696              		.section	.rodata.alp_append_tag_request_action.str1.4,"aMS",%progbits,1
 2697              		.align	2
 2698              	.LC39:
 2699 0000 6669666F 		.ascii	"fifo_put_byte(fifo, op) == oss7SUCCESS\000"
 2699      5F707574 
 2699      5F627974 
 2699      65286669 
 2699      666F2C20 
 2700 0027 00       		.space	1
 2701              	.LC40:
 2702 0028 6669666F 		.ascii	"fifo_put_byte(fifo, tag_id) == oss7SUCCESS\000"
 2702      5F707574 
 2702      5F627974 
 2702      65286669 
 2702      666F2C20 
 2703              		.section	.rodata.alp_parse_action.str1.4,"aMS",%progbits,1
 2704              		.align	2
 2705              	.LC38:
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 68


 2706 0000 6669666F 		.ascii	"fifo_pop(fifo, &op, 1) == oss7SUCCESS\000"
 2706      5F706F70 
 2706      28666966 
 2706      6F2C2026 
 2706      6F702C20 
 2707              		.section	.rodata.alp_parse_file_offset_operand.str1.4,"aMS",%progbits,1
 2708              		.align	2
 2709              	.LC10:
 2710 0000 65727220 		.ascii	"err == oss7SUCCESS\000"
 2710      3D3D206F 
 2710      73733753 
 2710      55434345 
 2710      535300
 2711              		.section	.rodata.parse_op_return_status.str1.4,"aMS",%progbits,1
 2712              		.align	2
 2713              	.LC2:
 2714 0000 62362026 		.ascii	"b6 && !b7\000"
 2714      26202162 
 2714      3700
 2715 000a 0000     		.space	2
 2716              	.LC3:
 2717 000c 6669666F 		.ascii	"fifo_pop(fifo, &itf_id, 1) == oss7SUCCESS\000"
 2717      5F706F70 
 2717      28666966 
 2717      6F2C2026 
 2717      6974665F 
 2718 0036 0000     		.space	2
 2719              	.LC4:
 2720 0038 66616C73 		.ascii	"false\000"
 2720      6500
 2721 003e 0000     		.space	2
 2722              	.LC5:
 2723 0040 2E2E2F2E 		.ascii	"../../shields/Murata-dualstack/inc/d7ap.h\000"
 2723      2E2F7368 
 2723      69656C64 
 2723      732F4D75 
 2723      72617461 
 2724 006a 0000     		.space	2
 2725              	.LC6:
 2726 006c 6669666F 		.ascii	"fifo_pop(fifo, (uint8_t*)&interface_status->address"
 2726      5F706F70 
 2726      28666966 
 2726      6F2C2028 
 2726      75696E74 
 2727 009f 65652E69 		.ascii	"ee.id, addressee_len) == oss7SUCCESS\000"
 2727      642C2061 
 2727      64647265 
 2727      73736565 
 2727      5F6C656E 
 2728              		.section	.rodata.parse_op_return_tag.str1.4,"aMS",%progbits,1
 2729              		.align	2
 2730              	.LC0:
 2731 0000 6669666F 		.ascii	"fifo_pop(fifo, &action->tag_response.tag_id, 1) == "
 2731      5F706F70 
 2731      28666966 
 2731      6F2C2026 
 2731      61637469 
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 69


 2732 0033 6F737337 		.ascii	"oss7SUCCESS\000"
 2732      53554343 
 2732      45535300 
 2733 003f 00       		.space	1
 2734              	.LC1:
 2735 0040 2E2E2F2E 		.ascii	"../../shields/Murata-dualstack/src/alp.c\000"
 2735      2E2F7368 
 2735      69656C64 
 2735      732F4D75 
 2735      72617461 
 2736              		.section	.rodata.parse_operand_file_data.str1.4,"aMS",%progbits,1
 2737              		.align	2
 2738              	.LC11:
 2739 0000 61637469 		.ascii	"action->file_data_operand.provided_data_length <= s"
 2739      6F6E2D3E 
 2739      66696C65 
 2739      5F646174 
 2739      615F6F70 
 2740 0033 697A656F 		.ascii	"izeof(action->file_data_operand.data)\000"
 2740      66286163 
 2740      74696F6E 
 2740      2D3E6669 
 2740      6C655F64 
 2741              		.text
 2742              	.Letext0:
 2743              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2744              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2745              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2746              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 2747              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2748              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2749              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2750              		.file 10 "../../shields/Murata-dualstack/inc/types.h"
 2751              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 2752              		.file 12 "../../shields/Murata-dualstack/inc/dae.h"
 2753              		.file 13 "../../shields/Murata-dualstack/inc/fs.h"
 2754              		.file 14 "../../shields/Murata-dualstack/inc/d7ap_fs.h"
 2755              		.file 15 "../../shields/Murata-dualstack/inc/lorawan_stack.h"
 2756              		.file 16 "../../shields/Murata-dualstack/inc/fifo.h"
 2757              		.file 17 "../../shields/Murata-dualstack/inc/alp.h"
 2758              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 70


DEFINED SYMBOLS
                            *ABS*:00000000 alp.c
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:18     .text.parse_op_return_tag:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:24     .text.parse_op_return_tag:00000000 parse_op_return_tag
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:62     .text.parse_op_return_tag:00000020 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:69     .text.parse_op_return_status:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:75     .text.parse_op_return_status:00000000 parse_op_return_status
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:234    .text.parse_op_return_status:000000de $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:238    .text.parse_op_return_status:000000e2 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:322    .text.parse_op_return_status:00000148 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:334    .text.alp_get_operation:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:341    .text.alp_get_operation:00000000 alp_get_operation
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:359    .text.alp_parse_length_operand:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:366    .text.alp_parse_length_operand:00000000 alp_parse_length_operand
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:427    .text.alp_append_length_operand:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:434    .text.alp_append_length_operand:00000000 alp_append_length_operand
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:558    .text.alp_append_length_operand:0000008c $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:567    .text.alp_parse_file_offset_operand:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:574    .text.alp_parse_file_offset_operand:00000000 alp_parse_file_offset_operand
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:634    .text.alp_parse_file_offset_operand:00000038 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:641    .text.parse_operand_file_data:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:647    .text.parse_operand_file_data:00000000 parse_operand_file_data
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:712    .text.parse_operand_file_data:00000044 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:719    .text.parse_op_write_file_data:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:725    .text.parse_op_write_file_data:00000000 parse_op_write_file_data
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:746    .text.parse_op_return_file_data:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:752    .text.parse_op_return_file_data:00000000 parse_op_return_file_data
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:773    .text.alp_parse_file_header_operand:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:780    .text.alp_parse_file_header_operand:00000000 alp_parse_file_header_operand
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:864    .text.alp_parse_file_header_operand:00000064 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:871    .text.alp_append_file_offset_operand:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:878    .text.alp_append_file_offset_operand:00000000 alp_append_file_offset_operand
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:917    .text.alp_append_file_offset_operand:00000024 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:924    .text.alp_append_indirect_forward_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:931    .text.alp_append_indirect_forward_action:00000000 alp_append_indirect_forward_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1006   .text.alp_append_indirect_forward_action:0000005c $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1015   .text.alp_append_forward_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1022   .text.alp_append_forward_action:00000000 alp_append_forward_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1145   .text.alp_append_forward_action:00000092 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1150   .text.alp_append_forward_action:00000096 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1485   .text.alp_append_forward_action:00000294 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1515   .text.alp_append_return_file_data_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1522   .text.alp_append_return_file_data_action:00000000 alp_append_return_file_data_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1601   .text.alp_append_return_file_data_action:00000060 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1610   .text.alp_parse_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1617   .text.alp_parse_action:00000000 alp_parse_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1660   .text.alp_parse_action:00000032 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1693   .text.alp_parse_action:00000052 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1759   .text.alp_parse_action:00000098 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1767   .text.alp_append_tag_request_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1774   .text.alp_append_tag_request_action:00000000 alp_append_tag_request_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1829   .text.alp_append_tag_request_action:00000040 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1837   .text.alp_append_read_file_data_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1844   .text.alp_append_read_file_data_action:00000000 alp_append_read_file_data_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1905   .text.alp_append_read_file_data_action:0000004c $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1912   .text.alp_append_write_file_data_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1919   .text.alp_append_write_file_data_action:00000000 alp_append_write_file_data_action
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 71


C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:1995   .text.alp_append_write_file_data_action:00000064 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2003   .text.alp_append_create_new_file_data_action:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2010   .text.alp_append_create_new_file_data_action:00000000 alp_append_create_new_file_data_action
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2097   .text.alp_append_create_new_file_data_action:00000074 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2105   .text.alp_length_operand_coded_length:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2112   .text.alp_length_operand_coded_length:00000000 alp_length_operand_coded_length
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2159   .text.alp_get_expected_response_length:00000000 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2166   .text.alp_get_expected_response_length:00000000 alp_get_expected_response_length
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2268   .text.alp_get_expected_response_length:00000074 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2320   .text.alp_get_expected_response_length:00000144 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2384   .text.alp_get_expected_response_length:000001a4 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2388   .text.alp_get_expected_response_length:000001a8 $t
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2459   .text.alp_get_expected_response_length:000001ec $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2468   .rodata.__func__.6200:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2472   .rodata.__func__.6200:00000000 __func__.6200
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2475   .rodata.__func__.6732:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2479   .rodata.__func__.6732:00000000 __func__.6732
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2482   .rodata.__func__.6742:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2486   .rodata.__func__.6742:00000000 __func__.6742
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2489   .rodata.__func__.6748:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2493   .rodata.__func__.6748:00000000 __func__.6748
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2496   .rodata.__func__.6754:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2500   .rodata.__func__.6754:00000000 __func__.6754
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2503   .rodata.__func__.6762:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2507   .rodata.__func__.6762:00000000 __func__.6762
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2510   .rodata.__func__.6769:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2514   .rodata.__func__.6769:00000000 __func__.6769
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2517   .rodata.__func__.6782:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2521   .rodata.__func__.6782:00000000 __func__.6782
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2524   .rodata.__func__.6804:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2528   .rodata.__func__.6804:00000000 __func__.6804
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2531   .rodata.__func__.6819:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2535   .rodata.__func__.6819:00000000 __func__.6819
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2538   .rodata.__func__.6826:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2542   .rodata.__func__.6826:00000000 __func__.6826
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2545   .rodata.__func__.6836:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2549   .rodata.__func__.6836:00000000 __func__.6836
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2552   .rodata.__func__.6863:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2556   .rodata.__func__.6863:00000000 __func__.6863
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2559   .rodata.__func__.6873:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2563   .rodata.__func__.6873:00000000 __func__.6873
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2566   .rodata.__func__.6883:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2570   .rodata.__func__.6883:00000000 __func__.6883
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2573   .rodata.__func__.6894:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2577   .rodata.__func__.6894:00000000 __func__.6894
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2580   .rodata.__func__.6904:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2584   .rodata.__func__.6904:00000000 __func__.6904
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2587   .rodata.alp_append_create_new_file_data_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2592   .rodata.alp_append_file_offset_operand.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2596   .rodata.alp_append_forward_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2671   .rodata.alp_append_indirect_forward_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2680   .rodata.alp_append_length_operand.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2690   .rodata.alp_append_return_file_data_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2697   .rodata.alp_append_tag_request_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2704   .rodata.alp_parse_action.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2708   .rodata.alp_parse_file_offset_operand.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2712   .rodata.parse_op_return_status.str1.4:00000000 $d
ARM GAS  C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s 			page 72


C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2729   .rodata.parse_op_return_tag.str1.4:00000000 $d
C:\Users\Jola\AppData\Local\Temp\ccrkvErA.s:2737   .rodata.parse_operand_file_data.str1.4:00000000 $d

UNDEFINED SYMBOLS
fifo_pop
__assert_func
fifo_skip
fifo_put
fifo_put_byte
fifo_init_filled
fifo_get_size
